const W9 = "data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%2036%2036'%3e%3cpath%20d='M%2035%2017%20C%2035%2026.389%2021.777%2036%2018%2036%20C%2014.222%2036%201%2026.389%201%2017%20S%208.611%200%2018%200%20S%2035%207.611%2035%2017%20Z'%20fill='%23ccd6dd'%20id='00'%3e%3c/path%3e%3cpath%20d='M%2018%2031%20C%2015.653%2031%2014.425%2029.84%2014.293%2029.707%20C%2013.902%2029.316000000000003%2013.902%2028.684%2014.293%2028.293%20C%2014.68%2027.906%2015.306%2027.902%2015.697%2028.282999999999998%20C%2015.748%2028.33%2016.503%2028.999999999999996%2018%2028.999999999999996%20C%2019.519%2028.999999999999996%2020.273%2028.310999999999996%2020.305%2028.280999999999995%20C%2020.703%2027.906999999999996%2021.332%2027.917999999999996%2021.713%2028.309999999999995%20C%2022.092000000000002%2028.702999999999996%2022.093%2029.320999999999994%2021.707%2029.705999999999996%20C%2021.575%2029.84%2020.347%2031%2018%2031%20Z'%20fill='%23292f33'%20id='01'%3e%3c/path%3e%3cpath%20d='M%2022.497%2014.845%20C%2019.373%2017.969%2018.107%2021.768%2019.669%2023.33%20C%2021.231%2024.892%2025.03%2023.627%2028.154%2020.502%20C%2031.279%2017.377%2032.545%2013.578999999999999%2030.982%2012.017%20C%2029.419999999999998%2010.455%2025.621%2011.719999999999999%2022.497%2014.844999999999999%20Z'%20fill='%23292f33'%20id='02'%3e%3c/path%3e%3cpath%20d='M%2013.503%2014.845%20C%2016.627%2017.969%2017.893%2021.768%2016.331%2023.33%20C%2014.769%2024.892%2010.969999999999999%2023.627%207.846%2020.502%20C%204.721%2017.378%203.455%2013.578999999999999%205.018000000000001%2012.017%20S%2010.379000000000001%2011.721%2013.503%2014.844999999999999%20Z'%20fill='%23292f33'%20id='03'%3e%3c/path%3e%3c/svg%3e", J9 = "data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%2036%2036'%3e%3ccircle%20fill='%234289C1'%20cx='29'%20cy='3'%20r='2'%20id='00'%3e%3c/circle%3e%3ccircle%20fill='%234289C1'%20cx='33'%20cy='8'%20r='3'%20id='01'%3e%3c/circle%3e%3ccircle%20fill='%234289C1'%20cx='33'%20cy='4'%20r='3'%20id='02'%3e%3c/circle%3e%3ccircle%20fill='%234289C1'%20cx='7'%20cy='3'%20r='2'%20id='03'%3e%3c/circle%3e%3ccircle%20fill='%234289C1'%20cx='3'%20cy='8'%20r='3'%20id='04'%3e%3c/circle%3e%3ccircle%20fill='%234289C1'%20cx='3'%20cy='4'%20r='3'%20id='05'%3e%3c/circle%3e%3cpath%20d='M%2036%2018%20C%2036%2027.941000000000003%2027.941000000000003%2036%2018%2036%20S%200%2027.941%200%2018%20S%208.059%200%2018%200%20S%2036%208.059%2036%2018'%20fill='%23fee7b8'%20id='06'%3e%3c/path%3e%3ccircle%20fill='%234289C1'%20cx='30.5'%20cy='4.5'%20r='2.5'%20id='07'%3e%3c/circle%3e%3ccircle%20fill='%234289C1'%20cx='32'%20cy='7'%20r='2'%20id='08'%3e%3c/circle%3e%3ccircle%20fill='%234289C1'%20cx='5.5'%20cy='4.5'%20r='2.5'%20id='09'%3e%3c/circle%3e%3ccircle%20fill='%234289C1'%20cx='4'%20cy='7'%20r='2'%20id='10'%3e%3c/circle%3e%3ccircle%20fill='%23FF7892'%20cx='6.93'%20cy='21'%20r='4'%20id='11'%3e%3c/circle%3e%3ccircle%20fill='%23FF7892'%20cx='28.93'%20cy='21'%20r='4'%20id='12'%3e%3c/circle%3e%3cpath%20d='M%2027.335%2023.629%20C%2027.157%2023.468%2026.891000000000002%2023.458000000000002%2026.7%2023.6%20C%2026.660999999999998%2023.629%2022.778%2026.5%2018%2026.5%20C%2013.234%2026.5%209.338%2023.629%209.3%2023.6%20C%209.109%2023.458000000000002%208.843%2023.470000000000002%208.665000000000001%2023.629%20C%208.488000000000001%2023.789%208.448%2024.053%208.571000000000002%2024.257%20C%208.7%2024.472%2011.788%2031%2018%2031%20S%2027.301000000000002%2024.472%2027.429000000000002%2024.256999999999998%20C%2027.552000000000003%2024.052%2027.513%2023.788999999999998%2027.335%2023.628999999999998%20Z'%20fill='%23da2f47'%20id='13'%3e%3c/path%3e%3cpath%20d='M%2027.335%2023.629%20C%2027.157%2023.468%2026.891000000000002%2023.458000000000002%2026.7%2023.6%20C%2026.660999999999998%2023.629%2022.778%2026.5%2018%2026.5%20C%2013.234%2026.5%209.338%2023.629%209.3%2023.6%20C%209.109%2023.458000000000002%208.843%2023.470000000000002%208.665000000000001%2023.629%20C%208.488000000000001%2023.789%208.448%2024.053%208.571000000000002%2024.257%20C%208.7%2024.472%2011.788%2031%2018%2031%20S%2027.301000000000002%2024.472%2027.429000000000002%2024.256999999999998%20C%2027.552000000000003%2024.052%2027.513%2023.788999999999998%2027.335%2023.628999999999998%20Z'%20fill='none'%20id='14'%3e%3c/path%3e%3cellipse%20fill='%23664500'%20cx='11.5'%20cy='11.5'%20rx='2.5'%20ry='3.5'%20id='15'%3e%3c/ellipse%3e%3cellipse%20fill='%23664500'%20cx='25.5'%20cy='11.5'%20rx='2.5'%20ry='3.5'%20id='16'%3e%3c/ellipse%3e%3ccircle%20fill='%23BB1A34'%20cx='18.5'%20cy='19.5'%20r='3.5'%20id='17'%3e%3c/circle%3e%3c/svg%3e", K9 = "data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%2036%2036'%3e%3ccircle%20fill='%2350A5E6'%20cx='18'%20cy='18'%20r='18'%20id='00'%3e%3c/circle%3e%3cellipse%20fill='%231C6399'%20cx='11.985'%20cy='15.188'%20rx='2.5'%20ry='3.5'%20id='01'%3e%3c/ellipse%3e%3cellipse%20fill='%231C6399'%20cx='23.985'%20cy='15.188'%20rx='2.5'%20ry='3.5'%20id='02'%3e%3c/ellipse%3e%3cpath%20d='M%2024.985%2021.833%20C%2027.194%2021.833%2028.985%2023.624%2028.985%2025.833%20S%2027.194%2029.833%2024.985%2029.833%20H%2010.985%20C%208.776%2029.833%206.984999999999999%2028.041999999999998%206.984999999999999%2025.833%20S%208.776%2021.833%2010.985%2021.833%20H%2024.985%20Z'%20fill='%23ffffff'%20id='03'%3e%3c/path%3e%3cpath%20d='M%2024.985%2028.812%20H%2024.485%20V%2026.312%20H%2027.933999999999997%20C%2027.694999999999997%2027.728%2026.467999999999996%2028.812%2024.985%2028.812%20Z%20M%2020.485%2028.812%20V%2026.312%20H%2023.485%20V%2028.812%20H%2020.485%20Z%20M%2016.485%2028.812%20V%2026.312%20H%2019.485%20V%2028.812%20H%2016.485%20Z%20M%2012.485%2028.812%20V%2026.312%20H%2015.485%20V%2028.812%20H%2012.485%20Z%20M%2010.985%2028.812%20C%209.501999999999999%2028.812%208.274999999999999%2027.728%208.036%2026.312%20H%2011.485%20V%2028.812%20H%2010.985%20Z%20M%2010.985%2022.812%20H%2011.485%20V%2025.312%20H%208.035%20C%208.275%2023.897000000000002%209.502%2022.812%2010.985%2022.812%20Z%20M%2015.485%2022.812%20V%2025.312%20H%2012.485%20V%2022.812%20H%2015.485%20Z%20M%2019.485%2022.812%20V%2025.312%20H%2016.485%20V%2022.812%20H%2019.485%20Z%20M%2023.485%2022.812%20V%2025.312%20H%2020.485%20V%2022.812%20H%2023.485%20Z%20M%2024.985%2022.812%20C%2026.468%2022.812%2027.695%2023.896%2027.933999999999997%2025.312%20H%2024.485%20V%2022.812%20H%2024.985%20Z%20M%2024.985%2020.812%20H%2010.985%20C%208.228%2020.812%205.984999999999999%2023.055%205.984999999999999%2025.812%20S%208.228%2030.812%2010.985%2030.812%20H%2024.985%20C%2027.742%2030.812%2029.985%2028.569000000000003%2029.985%2025.812%20S%2027.742%2020.812%2024.985%2020.812%20Z'%20fill='%231c6399'%20id='04'%3e%3c/path%3e%3cpath%20d='M%200.313%2021.375%20C%200.313%2021.085%200.9259999999999999%2022.539%201.4609999999999999%2022.863%20C%202.151%2023.281%202.691%2024.063%203.501%2024.75%20S%204.309%2026.724%204.277%2027.344%20C%204.141%2030%203.7910000000000004%2032.643%203.715%2032.969%20C%203.639%2033.300000000000004%203.3569999999999998%2035.792%202.985%2035.792%20S%202.432%2034.914%202.292%2034.308%20L%202.0669999999999997%2033.331%20C%201.9969999999999997%2033.029%201.9469999999999996%2032.7%201.8669999999999998%2032.355000000000004%20C%201.7949999999999997%2032.041000000000004%201.4459999999999997%2029.768000000000004%201.3709999999999998%2029.442000000000004%20C%201.2949999999999997%2029.111000000000004%200.9649999999999997%2027.799000000000003%200.8919999999999998%2027.484000000000005%20C%200.8119999999999998%2027.137000000000004%200.7779999999999998%2026.800000000000004%200.7019999999999997%2026.497000000000007%20C%200.3749999999999997%2025.197000000000006%200.3129999999999997%2021.376000000000005%200.3129999999999997%2021.375000000000007%20Z'%20fill='%23bbddf5'%20id='15'%3e%3c/path%3e%3cpath%20d='M%2035.756%2015.188%20C%2035.756%2014.743%2035.71%2017.428%2032.004%2018.582%20C%2030.543%2019.037%2030.715999999999998%2021.162%2030.738999999999997%2021.734%20C%2030.818999999999996%2023.709000000000003%2031.136999999999997%2025.626%2031.235999999999997%2026.126%20C%2031.336%2026.633000000000003%2031.743%2028.232%2031.837999999999997%2028.715%20C%2031.942999999999998%2029.247%2032.079%2031.121%2032.171%2031.588%20C%2032.282%2032.151%2032.386%2032.556%2032.471%2032.986000000000004%20C%2032.654999999999994%2033.915000000000006%2032.894999999999996%2034.584%2033.303%2034.584%20C%2033.711999999999996%2034.584%2033.718999999999994%2033.459%2033.901999999999994%2032.531000000000006%20C%2033.986999999999995%2032.102000000000004%2034.00899999999999%2031.744000000000007%2034.12%2031.182000000000006%20C%2034.211999999999996%2030.718000000000007%2034.483%2027.541000000000004%2034.585%2027.026000000000007%20C%2034.682%2026.535000000000007%2035.221000000000004%2024.458000000000006%2035.319%2023.959000000000007%20C%2035.419000000000004%2023.452000000000005%2035.718%2021.465000000000007%2035.798%2020.980000000000008%20C%2036.276%2018.08300000000001%2035.756%2015.189000000000007%2035.756%2015.188000000000008%20Z'%20fill='%23bbddf5'%20id='16'%3e%3c/path%3e%3cpath%20d='M%2029.986%2011.375%20C%2029.802%2011.375%2025.449%2011.325%2022.186%206.975%20C%2021.854%206.5329999999999995%2021.944%205.906%2022.386%205.574999999999999%20C%2022.826999999999998%205.241999999999999%2023.453%205.332999999999999%2023.785%205.7749999999999995%20C%2026.426000000000002%209.296%2029.847%209.373999999999999%2029.991%209.375%20C%2030.541%209.381%2030.985%209.831%2030.982%2010.379999999999999%20C%2030.98%2010.931%2030.535999999999998%2011.374999999999998%2029.986%2011.374999999999998%20Z'%20fill='%231c6399'%20id='17'%3e%3c/path%3e%3cpath%20d='M%205.986%2011.375%20C%205.433999999999999%2011.375%204.986%2010.927%204.986%2010.375%20C%204.986%209.824%205.431%209.377%205.981999999999999%209.375%20C%206.137999999999999%209.373%209.550999999999998%209.289%2012.187%205.775%20C%2012.517999999999999%205.335%2013.144%205.243%2013.587%205.575%20C%2014.029%205.906000000000001%2014.118%206.533%2013.786999999999999%206.975%20C%2010.524%2011.325%206.169999999999999%2011.375%205.985999999999999%2011.375%20Z'%20fill='%231c6399'%20id='18'%3e%3c/path%3e%3cpath%20d='M%205.875%209.379%20S%206.606%209.215%207.302%209.07%20C%207.755%208.976%208.113999999999999%208.611%208.855%208.341000000000001%20C%209.626000000000001%208.06%2010.122%207.817000000000001%2010.122%207.817000000000001%20S%2010.185%209.122000000000002%2010.013%209.773000000000001%20C%209.874%2010.298000000000002%209.801%2010.976%209.737%2011.353000000000002%20C%209.667%2011.761000000000001%209.628%2012.242%209.540000000000001%2012.757000000000001%20C%209.464%2013.202000000000002%209.324000000000002%2013.667000000000002%209.241000000000001%2014.151000000000002%20C%209.161000000000001%2014.618000000000002%209.097000000000001%2015.165000000000001%209.017000000000001%2015.632000000000001%20C%208.934000000000001%2016.117%208.912%2016.534000000000002%208.835%2016.981%20C%208.746%2017.499000000000002%208.813%2017.551000000000002%208.742%2017.961000000000002%20C%208.597000000000001%2018.804000000000002%208.577000000000002%2018.688000000000002%208.530000000000001%2019.147000000000002%20C%208.483%2019.606%208.136000000000001%2019.663000000000004%207.986000000000001%2019.327%20C%207.836%2018.991000000000003%207.995000000000001%2018.806%207.8500000000000005%2017.96%20C%207.78%2017.552%207.523000000000001%2016.473%207.44%2015.99%20C%207.36%2015.523%207.252000000000001%2014.791%207.172000000000001%2014.324%20C%207.089%2013.839%207.0680000000000005%2013.057%206.9910000000000005%2012.609%20C%206.902%2012.091%206.766000000000001%2011.771%206.696000000000001%2011.361%20C%206.551000000000001%2010.520000000000001%205.875000000000001%209.379000000000001%205.875000000000001%209.379000000000001%20Z'%20fill='%23bbddf5'%20id='19'%3e%3c/path%3e%3cpath%20d='M%2024.266%201.125%20S%2023.275%200.704%2022.948999999999998%200.604%20C%2022.662%200.516%2021.756%200.328%2021.196%200.22%20C%2020.571%200.099%2019.902%200.105%2019.902%200.105%20S%2019.872%200.507%2020.016000000000002%201.13%20C%2020.132%201.632%2020.42%202.328%2020.474%202.689%20C%2020.533%203.08%2020.542%203.544%2020.615%204.037%20C%2020.679%204.463%2020.743%204.917%2020.811999999999998%205.379%20C%2020.878999999999998%205.824999999999999%2020.993999999999996%206.273%2021.060999999999996%206.72%20C%2021.130999999999997%207.184%2021.162999999999997%207.645%2021.227999999999998%208.073%20C%2021.302%208.569%2021.217999999999996%209.051%2021.276999999999997%209.444%20C%2021.397999999999996%2010.25%2021.609999999999996%2011.376000000000001%2021.839%2011.376000000000001%20C%2022.067999999999998%2011.376000000000001%2022.27%2010.357000000000001%2022.391%209.548000000000002%20C%2022.45%209.157000000000002%2022.363999999999997%208.853000000000002%2022.438%208.360000000000001%20C%2022.502%207.934000000000001%2022.555999999999997%207.510000000000002%2022.625999999999998%207.048000000000001%20C%2022.692999999999998%206.602000000000001%2022.746999999999996%206.166000000000001%2022.813999999999997%205.720000000000001%20C%2022.883999999999997%205.256%2022.874999999999996%204.804%2022.938999999999997%204.376%20C%2023.012999999999998%203.8800000000000003%2023.301999999999996%203.269%2023.360999999999997%202.8760000000000003%20C%2023.479999999999997%202.0700000000000003%2024.266%201.1250000000000004%2024.266%201.1250000000000004%20Z'%20fill='%23bbddf5'%20id='20'%3e%3c/path%3e%3c/svg%3e", t2 = "data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%2036%2036'%3e%3cpath%20d='M%2033%2021%20C%2033%2029.284%2026.284%2036%2018%2036%20S%203%2029.284%203%2021%20C%203%2012.716%209.716%206%2018%206%20S%2033%2012.716000000000001%2033%2021'%20fill='%23ffcc4d'%20id='00'%3e%3c/path%3e%3cpath%20d='%20M%2032%206.13%20C%2030.81%207.571%2028.818%208.081%2026.924%208.251%20C%2026.606%206.713%2025.241%201%2022.5%201%20C%2020.097%201%2019.231%202.091%2018%202.091%20C%2016.769%202.091%2015.903%201%2013.5%201%20C%2010.759%201%209.394%206.713%209.076%208.251000000000001%20C%207.182%208.081%205.19%207.57%204%206.13%20C%201.847%203.524%20-1%205.444%200.442%208.304%20C%202.72%2012.821%208.23%2016%2018%2016%20C%2027.769%2016%2033.278999999999996%2012.821%2035.558%208.304%20C%2037%205.444%2034.153%203.524%2032%206.13%20Z'%20fill='%23664500'%20id='01'%3e%3c/path%3e%3cpath%20d='%20M%2025.412%2019.765%20C%2025.412%2021.358%2024.49%2022.648%2023.352%2022.648%20C%2022.215%2022.648%2021.293%2021.358%2021.293%2019.765%20C%2021.293%2018.174%2022.215%2016.883%2023.352%2016.883%20C%2024.490000000000002%2016.881999999999998%2025.412%2018.173%2025.412%2019.765%20Z'%20fill='%23664500'%20id='02'%3e%3c/path%3e%3cpath%20d='%20M%2014.706%2019.765%20C%2014.706%2021.358%2013.783999999999999%2022.648%2012.646999999999998%2022.648%20S%2010.587999999999997%2021.358%2010.587999999999997%2019.765%20C%2010.587999999999997%2018.174%2011.508999999999997%2016.883%2012.646999999999998%2016.883%20S%2014.706%2018.173%2014.706%2019.765%20Z'%20fill='%23664500'%20id='03'%3e%3c/path%3e%3cpath%20d='M%2025.688%2025.605%20C%2025.541999999999998%2025.472%2025.322%2025.464000000000002%2025.166%2025.582%20C%2025.134%2025.605%2021.936%2027.971%2018.001%2027.971%20C%2014.076%2027.971%2010.868000000000002%2025.606%2010.836000000000002%2025.582%20C%2010.679000000000002%2025.465%2010.460000000000003%2025.475%2010.313000000000002%2025.605%20C%2010.167000000000002%2025.737000000000002%2010.134000000000002%2025.955000000000002%2010.236000000000002%2026.122%20C%2010.341000000000003%2026.3%2012.884000000000002%2030.439999999999998%2018.000000000000004%2030.439999999999998%20C%2023.115000000000002%2030.439999999999998%2025.659000000000002%2026.299%2025.765000000000004%2026.122999999999998%20C%2025.866000000000003%2025.953999999999997%2025.834000000000003%2025.737%2025.688000000000002%2025.604999999999997%20Z'%20fill='%23664500'%20id='04'%3e%3c/path%3e%3cpath%20d='M%2021.5%203%20C%2019.631%203%2018.957%203.964%2018%203.964%20C%2017.043%203.964%2016.369%203%2014.5%203%20C%2012.037%203%2011%209.75%2011%209.75%20S%2012.282%2012%2018%2012%20C%2023.719%2012%2025%209.75%2025%209.75%20S%2023.963%203%2021.5%203%20Z'%20fill='%23825d0e'%20id='05'%3e%3c/path%3e%3cpath%20d='M%2011%206%20S%2013.074%208%2018%208%20C%2022.927%208%2025%206%2025%206%20V%208%20S%2022.778%2010%2018%2010%20C%2013.222000000000001%2010%2011%208%2011%208%20V%206%20Z'%20fill='%23664500'%20id='06'%3e%3c/path%3e%3c/svg%3e", e2 = "data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%2036%2036'%3e%3ccircle%20fill='%23FFCC4D'%20cx='18'%20cy='18'%20r='18'%20id='00'%3e%3c/circle%3e%3cpath%20d='%20M%209.456999999999997%2014.024%20C%209.456999999999997%2015.738%2010.394999999999998%2017.128%2011.552999999999997%2017.128%20C%2012.709999999999997%2017.128%2013.648999999999997%2015.738%2013.648999999999997%2014.024000000000001%20S%2012.710999999999997%2010.920000000000002%2011.552999999999997%2010.920000000000002%20C%2010.394999999999998%2010.920000000000002%209.456999999999997%2012.310000000000002%209.456999999999997%2014.024000000000001%20Z'%20fill='%2365471b'%20id='01'%3e%3c/path%3e%3cpath%20d='M%2026.624%2014.024%20C%2026.624%2015.738%2025.686%2017.128%2024.528%2017.128%20C%2023.371%2017.128%2022.432%2015.738%2022.432%2014.024000000000001%20S%2023.369999999999997%2010.920000000000002%2024.528%2010.920000000000002%20C%2025.686%2010.920000000000002%2026.624%2012.310000000000002%2026.624%2014.024000000000001%20Z'%20fill='%2365471b'%20id='02'%3e%3c/path%3e%3cpath%20d='M%2028.844%2025.39%20L%2023.934%2023.934%20C%2023.938000000000002%2023.883000000000003%2012.061000000000002%2023.883000000000003%2012.066%2023.934%20L%207.155%2025.39%20C%206.364%2025.626%205.905%2026.482%206.132000000000001%2027.302%20C%206.319000000000001%2027.982%206.916%2028.424%207.564%2028.424%20C%207.699%2028.424%207.838%2028.404%207.975%2028.365%20L%2010.853%2027.511999999999997%20C%2010.531%2027.964999999999996%2010.443999999999999%2028.576999999999998%2010.704%2029.115999999999996%20C%2010.965%2029.657999999999998%2011.492%2029.970999999999997%2012.039000000000001%2029.970999999999997%20C%2012.262000000000002%2029.970999999999997%2012.490000000000002%2029.917999999999996%2012.704%2029.807999999999996%20L%2015.054%2028.588999999999995%20C%2015.108%2029.093999999999994%2015.372%2029.660999999999994%2015.842%2029.903999999999996%20C%2016.056%2030.013999999999996%2016.284%2030.066999999999997%2016.507%2030.066999999999997%20C%2017.054000000000002%2030.066999999999997%2017.581000000000003%2029.657999999999998%2017.842000000000002%2029.115999999999996%20L%2018%2028.79%20L%2018.157%2029.116%20C%2018.418%2029.658%2018.945%2030.067%2019.492%2030.067%20C%2019.716%2030.067%2019.943%2030.014%2020.157%2029.904%20C%2020.627%2029.661%2020.892%2029.093%2020.946%2028.589%20L%2023.296000000000003%2029.808%20C%2023.51%2029.918%2023.737000000000002%2029.971%2023.961000000000002%2029.971%20C%2024.508000000000003%2029.971%2025.034000000000002%2029.658%2025.296000000000003%2029.116%20C%2025.555000000000003%2028.576999999999998%2025.469%2027.965%2025.148000000000003%2027.512%20L%2028.026000000000003%2028.365000000000002%20C%2028.163000000000004%2028.404000000000003%2028.300000000000004%2028.424000000000003%2028.437000000000005%2028.424000000000003%20C%2029.085000000000004%2028.424000000000003%2029.682000000000006%2027.981%2029.869000000000003%2027.302000000000003%20C%2030.095000000000002%2026.482000000000003%2029.636000000000003%2025.626000000000005%2028.844000000000005%2025.390000000000004%20Z'%20fill='%23292f33'%20id='03'%3e%3c/path%3e%3cpath%20d='M%2024%2023.6%20C%2024%2022.606%2022.746%2021%2021.2%2021%20L%2021.177%2021.001%20C%2020.977%2017.3%2019.489%2011.8%2018%2011.8%20C%2016.537%2011.8%2015.076%2017.277%2014.835%2021.002000000000002%20L%2014.8%2021%20C%2013.254000000000001%2021%2012%2022.606%2012%2023.6%20C%2012%2024.53%2014.103%2024.946%2015.684000000000001%2025.651000000000003%20C%2016.189%2026.089000000000002%2016.937%2026.200000000000003%2018%2026.200000000000003%20C%2018.901%2026.200000000000003%2019.576999999999998%2026.093000000000004%2020.069%2025.768000000000004%20C%2021.668%2024.989%2024%2024.58%2024%2023.6%20Z'%20fill='%23ffac33'%20id='04'%3e%3c/path%3e%3cpath%20d='%20M%2014.757%2023.8%20C%2014.975%2023.839000000000002%2014.702%2023.400000000000002%2014.702%2022.311%20C%2014.702%2021.8%2014.757%2021.4%2014.757%2021%20C%2014.357%2021%2013.915%2021%2013.915%2022.169%20C%2013.915999999999999%2022.832%2014.54%2023.761%2014.757%2023.8%20Z'%20fill='%23c1694f'%20id='05'%3e%3c/path%3e%3cpath%20d='M%2021.2%2023.8%20C%2020.982%2023.839000000000002%2021.255%2023.400000000000002%2021.255%2022.311%20C%2021.255%2021.8%2021.2%2021.4%2021.2%2021%20C%2021.599999999999998%2021%2022.041999999999998%2021%2022.041999999999998%2022.169%20C%2022.041999999999998%2022.832%2021.418%2023.761%2021.2%2023.8%20Z'%20fill='%23c1694f'%20id='06'%3e%3c/path%3e%3cpath%20d='%20M%2021.597%2024.351%20C%2020.826%2024.576%2020.311%2025.133%2020.446%2025.595%20L%2020.450000000000003%2025.599999999999998%20C%2021.341%2025.217%2022.359%2024.910999999999998%2023.080000000000002%2024.555999999999997%20C%2022.802000000000003%2024.269999999999996%2022.220000000000002%2024.168999999999997%2021.597%2024.351%20Z'%20fill='%23662113'%20id='07'%3e%3c/path%3e%3cpath%20d='M%2014.403%2024.351%20C%2013.781%2024.169999999999998%2013.200000000000001%2024.27%2012.922%2024.554%20C%2013.643%2024.909%2014.661000000000001%2025.214%2015.553%2025.596999999999998%20L%2015.555000000000001%2025.595%20C%2015.689000000000002%2025.133%2015.174000000000001%2024.575%2014.403000000000002%2024.351%20Z'%20fill='%23662113'%20id='08'%3e%3c/path%3e%3cpath%20d='%20M%2030.892%2013.024000000000001%20C%2030.773%2013.978000000000002%2030.457%2016.539%2029.627%2017.158%20C%2028.962999999999997%2017.653000000000002%2027.265%2018%2026.04%2018%20H%2026.038999999999998%20C%2024.932%2018%2023.875999999999998%2017.719%2023.063999999999997%2017.257%20C%2021.740999999999996%2016.505000000000003%2021.543999999999997%2014.396%2021.466999999999995%2013.291%20C%2021.424999999999994%2012.683%2021.290999999999997%2011.440000000000001%2022.295999999999996%2010.823%20C%2023.430999999999997%2010.125%2025.757999999999996%2010.077%2026.450999999999997%2010.077%20C%2027.964%2010.077%2029.441999999999997%2010.354%2030.502999999999997%2010.715%20C%2031.170999999999996%2010.943%2030.967999999999996%2012.417%2030.891999999999996%2013.024000000000001%20Z%20M%2014.614%2013.277000000000001%20C%2014.537%2014.382000000000001%2014.34%2016.504%2013.017000000000001%2017.257%20C%2012.206000000000001%2017.719%2011.149000000000001%2018%2010.043000000000001%2018%20H%2010.042000000000002%20C%208.817000000000002%2018%207.1190000000000015%2017.653%206.455000000000002%2017.158%20C%205.625000000000002%2016.539%205.309000000000002%2013.991000000000001%205.190000000000002%2013.038%20C%205.1140000000000025%2012.431000000000001%204.910000000000002%2010.948%205.578000000000002%2010.72%20C%206.638000000000002%2010.359%208.117000000000003%2010.077%209.630000000000003%2010.077%20C%2010.323000000000002%2010.077%2012.651000000000003%2010.12%2013.785000000000004%2010.818%20C%2014.790000000000003%2011.434999999999999%2014.657000000000004%2012.669%2014.614000000000004%2013.277%20Z%20M%2034.808%209.627%20C%2034.637%209.461%2033.541%209.901%2032.432%209.336%20C%2030.144000000000002%208.17%2024.362000000000002%207.045%2020.598000000000003%209.712%20C%2020.195000000000004%209.997%2018.511000000000003%2010.045%2018.040000000000003%2010.025%20C%2017.569000000000003%2010.046000000000001%2015.885000000000003%209.998000000000001%2015.482000000000003%209.712%20C%2011.719000000000003%207.045%205.937000000000003%208.17%203.6490000000000027%209.336%20C%202.5400000000000027%209.901%201.4440000000000026%209.461%201.2730000000000028%209.627%20C%201.026000000000003%209.866000000000001%201.026000000000003%2010.823%201.2740000000000027%2011.063%20C%201.5200000000000027%2011.302000000000001%202.751000000000003%2011.578000000000001%202.9960000000000027%2012.295%20C%203.2430000000000025%2013.013%203.2450000000000028%2017.253%205.209000000000003%2018.719%20C%207.048000000000004%2020.091%2011.338000000000003%2020.504%2014.057000000000004%2018.957%20C%2016.429000000000002%2017.608%2016.346000000000004%2014.768%2016.781000000000006%2013.076%20C%2016.936000000000007%2012.473%2017.373000000000005%2012.169%2018.041000000000007%2012.169%20S%2019.146000000000008%2012.473%2019.30100000000001%2013.076%20C%2019.736000000000008%2014.767000000000001%2019.652000000000008%2017.608%2022.02500000000001%2018.957%20C%2024.74400000000001%2020.503%2029.03400000000001%2020.09%2030.872000000000007%2018.719%20C%2032.83700000000001%2017.254%2032.839000000000006%2013.013000000000002%2033.08500000000001%2012.295000000000002%20C%2033.330000000000005%2011.578000000000001%2034.56100000000001%2011.301000000000002%2034.80700000000001%2011.063000000000002%20C%2035.05500000000001%2010.823000000000002%2035.05600000000001%209.866000000000003%2034.80800000000001%209.627000000000002%20Z'%20fill='%23292f33'%20id='09'%3e%3c/path%3e%3cpath%20d='%20M%2021.663%2010.19%20S%2021.723%206.975999999999999%2022.973%205.9639999999999995%20C%2024.288999999999998%204.898999999999999%2025.354%206.558999999999999%2025.354%206.558999999999999%20S%2025.605999999999998%204.4159999999999995%2027.034%204.594999999999999%20C%2028.462999999999997%204.773999999999999%2028.403%206.142999999999999%2028.403%206.142999999999999%20S%2029.223%204.297999999999999%2030.784%204.952999999999999%20C%2032.302%205.59%2031.544%206.976999999999999%2031.544%206.976999999999999%20S%2032.689%206.568%2033.211%207.393999999999999%20C%2033.925%208.524999999999999%2032.213%209.418%2032.213%209.418%20S%2028.642%208.584999999999999%2026.856%208.643999999999998%20C%2025.069000000000003%208.701999999999998%2021.663000000000004%2010.189999999999998%2021.663000000000004%2010.189999999999998%20Z'%20fill='%23292f33'%20id='12'%3e%3c/path%3e%3cpath%20d='M%2014.337%2010.19%20S%2014.277%206.975999999999999%2013.027%205.9639999999999995%20C%2011.710999999999999%204.898999999999999%2010.645999999999999%206.558999999999999%2010.645999999999999%206.558999999999999%20S%2010.393999999999998%204.4159999999999995%208.966%204.594999999999999%20C%207.537999999999999%204.773999999999999%207.5969999999999995%206.142999999999999%207.5969999999999995%206.142999999999999%20S%206.776999999999999%204.297999999999999%205.215999999999999%204.952999999999999%20C%203.6979999999999995%205.59%204.4559999999999995%206.976999999999999%204.4559999999999995%206.976999999999999%20S%203.3109999999999995%206.566999999999999%202.7899999999999996%207.393%20C%202.0749999999999997%208.524%203.7879999999999994%209.417%203.7879999999999994%209.417%20S%207.359%208.584%209.145%208.643%20C%2010.931%208.702%2014.337%2010.190000000000001%2014.337%2010.190000000000001%20Z'%20fill='%23292f33'%20id='13'%3e%3c/path%3e%3c/svg%3e", i2 = "data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%2036%2036'%3e%3cpath%20d='M%2015%2027%20V%2033%20S%2015%2036%2018%2036%20S%2021%2033%2021%2033%20V%2027%20H%2015%20Z'%20fill='%23dd2e44'%20id='00'%3e%3c/path%3e%3cpath%20d='M%2015%2033%20L%2015.001%2033.037%20C%2016.041999999999998%2033.002%2017.017%2032.763%2017.633%2031.750999999999998%20C%2017.804%2031.47%2018.195999999999998%2031.47%2018.368%2031.750999999999998%20C%2018.983999999999998%2032.762%2019.959%2033.001999999999995%2021%2033.037%20V%2027%20H%2015%20V%2033%20Z'%20fill='%23be1931'%20id='01'%3e%3c/path%3e%3cpath%20d='M%2031.954%2021.619%20C%2031.954%2027.895%2026.954%2027.895%2026.954%2027.895%20H%208.954%20S%203.9540000000000006%2027.895%203.9540000000000006%2021.619%20C%203.9540000000000006%2014.895%208.954%203%2017.954%203%20S%2031.954%2015.895%2031.954%2021.619%20Z'%20fill='%23d99e82'%20id='02'%3e%3c/path%3e%3cpath%20d='M%2018%2020%20C%2011%2020%208%2023.527%208%2026.395%20C%208%2029.432%2010.462%2031.895%2013.5%2031.895%20C%2015.105%2031.895%2016.542%2031.230999999999998%2017.549%2029.128%20C%2017.733999999999998%2028.742%2018.265%2028.742%2018.45%2029.128%20C%2019.457%2031.231%2020.895%2031.895%2022.499%2031.895%20C%2025.537%2031.895%2027.999%2029.432%2027.999%2026.395%20C%2028%2023.527%2025%2020%2018%2020%20Z'%20fill='%23f4c7b5'%20id='03'%3e%3c/path%3e%3cpath%20d='M%2023%2019%20C%2021.9%2019%2021%2018.1%2021%2017%20V%2015%20C%2021%2013.9%2021.9%2013%2023%2013%20S%2025%2013.9%2025%2015%20V%2017%20C%2025%2018.1%2024.1%2019%2023%2019%20Z'%20fill='%23292f33'%20id='04'%3e%3c/path%3e%3cpath%20d='M%2013%2019%20C%2011.9%2019%2011%2018.1%2011%2017%20V%2015%20C%2011%2013.9%2011.9%2013%2013%2013%20S%2015%2013.9%2015%2015%20V%2017%20C%2015%2018.1%2014.1%2019%2013%2019%20Z'%20fill='%23292f33'%20id='05'%3e%3c/path%3e%3cpath%20d='M%2015%2022.895%20C%2014%2023.895%2017%2026.895%2018%2026.895%20S%2022%2023.895%2021%2022.895%20S%2016%2021.895%2015%2022.895%20Z'%20fill='%23292f33'%20id='06'%3e%3c/path%3e%3cpath%20d='M%2033.172%204.2%20C%2024.319%200.881%2022.059%202.199%2021%203.608%20C%2023.5%204.8580000000000005%2025.65%206.2989999999999995%2027.644%209.109%20C%2027.641%209.31%2027.639%209.513%2027.639%209.734%20C%2027.639%2018.586%2030.958%2018.586%2032.065%2018.586%20C%2035.291999999999994%2017.804%2037.315999999999995%205.753999999999998%2033.172%204.199999999999999%20Z'%20fill='%23662113'%20id='07'%3e%3c/path%3e%3cpath%20d='M%2015%203.608%20C%2013.941%202.199%2011.681%200.881%202.828%204.2%20C%20-1.316%205.754%200.708%2017.804%203.935%2018.585%20C%205.041%2018.585%208.361%2018.585%208.361%209.733%20C%208.361%209.513%208.359%209.31%208.356%209.108%20C%2010.35%206.298%2012.5%204.857%2015%203.608%20Z'%20fill='%23662113'%20id='08'%3e%3c/path%3e%3ccircle%20fill='%23D99E82'%20cx='23.5'%20cy='25.5'%20r='.5'%20id='09'%3e%3c/circle%3e%3ccircle%20fill='%23D99E82'%20cx='11.5'%20cy='25.5'%20r='.5'%20id='10'%3e%3c/circle%3e%3ccircle%20fill='%23D99E82'%20cx='25.5'%20cy='27.5'%20r='.5'%20id='11'%3e%3c/circle%3e%3ccircle%20fill='%23D99E82'%20cx='10.5'%20cy='27.5'%20r='.5'%20id='12'%3e%3c/circle%3e%3ccircle%20fill='%23D99E82'%20cx='23'%20cy='28'%20r='1'%20id='13'%3e%3c/circle%3e%3ccircle%20fill='%23D99E82'%20cx='13'%20cy='28'%20r='1'%20id='14'%3e%3c/circle%3e%3cpath%20d='M%2026.099999999999998%207.232%20C%2026.358999999999998%206.5600000000000005%2026.733999999999998%205.835%2027.275999999999996%205.293%20C%2027.666999999999994%204.902%2028.298999999999996%204.902%2028.689999999999998%205.293%20S%2029.080999999999996%206.316%2028.689999999999998%206.707%20C%2028.119999999999997%207.277%2027.624%208.641%2027.621999999999996%209.053%20C%2027.476999999999997%208.649000000000001%2026.782999999999998%207.9030000000000005%2026.099999999999998%207.232000000000001%20Z'%20fill='%23380f09'%20id='15'%3e%3c/path%3e%3cpath%20d='M%209.883%207.232%20C%209.623999999999999%206.559%209.248999999999999%205.835%208.706999999999999%205.293%20C%208.315999999999999%204.902%207.683999999999999%204.902%207.292999999999999%205.293%20S%206.901999999999999%206.316%207.292999999999999%206.707%20C%207.8629999999999995%207.277%208.359%208.641%208.360999999999999%209.053%20C%208.505999999999998%208.649000000000001%209.2%207.9030000000000005%209.883%207.232000000000001%20Z'%20fill='%23380f09'%20id='16'%3e%3c/path%3e%3c/svg%3e", s2 = "data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%2036%2036'%3e%3cpath%20d='M%2035%2018.619%20C%2035%2014.825%2031.925%2011.75%2028.131%2011.75%20C%2027.152%2011.75%2025.379%2012.328%2025.379%2012.328%20L%2012.253000000000002%2013.712%20S%209.536000000000001%2012.131%207.870000000000002%2012.131%20C%204.075%2012.131%201%2015.206%201%2019%20C%201%2019.237%201.012%2019.471%201.035%2019.701999999999998%20C%201.406%2028.763%208.849%2036%2018%2036%20C%2027.389%2036%2035%2028.389%2035%2019%20C%2035%2018.948%2034.991%2018.899%2034.988%2018.847%20C%2034.991%2018.771%2035%2018.696%2035%2018.619%20Z'%20fill='%23ffcb4c'%20id='00'%3e%3c/path%3e%3cpath%20d='M%2030.126%2013.751%20C%2029.185000000000002%2013.507%2029.117%2014.136999999999999%2027.924%2013.997%20C%2026.756%2013.86%2028.352999999999998%2013.258%2027.729%2012.905%20C%2027.519%2012.786%2027.218%2012.761%2026.846999999999998%2012.806999999999999%20C%2025.794999999999998%2012.935999999999998%209.892999999999997%2013.350999999999999%209.299999999999997%2013.636999999999999%20C%208.772999999999998%2013.890999999999998%208.460999999999997%2014.184999999999999%207.9819999999999975%2013.738%20C%207.378999999999998%2013.176%206.515999999999997%2013.5%206.265999999999997%2013.687%20C%205.943999999999997%2013.928999999999998%205.876999999999997%2014.408999999999999%206.499999999999997%2014.963999999999999%20C%207.120999999999997%2015.383999999999999%208.172999999999998%2015.822999999999999%209.964999999999996%2016.122999999999998%20C%2010.161999999999995%2016.156%2010.329999999999997%2016.168999999999997%2010.486999999999997%2016.174999999999997%20C%2011.713999999999997%2016.215999999999998%2011.883999999999997%2014.504999999999997%2013.616999999999997%2014.458999999999998%20C%2014.752999999999997%2014.428999999999998%2024.769999999999996%2015.528999999999998%2025.595%2015.416999999999998%20C%2025.695999999999998%2015.402999999999999%2025.802%2015.392999999999999%2025.924%2015.392999999999999%20C%2027.487%2015.392999999999999%2027.849999999999998%2016.843%2029.512999999999998%2015.709%20C%2030.217999999999996%2015.136%2031.323999999999998%2014.061%2030.125999999999998%2013.751%20Z'%20fill='%23f19020'%20id='01'%3e%3c/path%3e%3cpath%20d='M%205.938%209.115%20C%207.460999999999999%2010.642%208.542%2012.26%209.3%2013.638%20C%209.866000000000001%2014.667%2010.256%2015.567%2010.487%2016.176%20C%2011.714%2016.217%2011.884%2015.505999999999998%2013.617%2015.459999999999999%20C%2014.753%2015.43%2015.4%2016.229%2016.240000000000002%2016.689%20C%2017.742%2017.511%2018.809%2015.959%2019.959000000000003%2015.959%20C%2020.809000000000005%2015.959%2022.178000000000004%2017.166%2023.135000000000005%2016.723%20C%2024.522000000000006%2016.08%2024.770000000000007%2015.531999999999998%2025.595000000000006%2015.418999999999999%20C%2025.917000000000005%2014.627999999999998%2026.336000000000006%2013.722999999999999%2026.847000000000005%2012.809999999999999%20C%2027.587000000000003%2011.485999999999999%2028.525000000000006%2010.145%2029.688000000000006%209.116999999999999%20H%205.938%20Z'%20fill='%23f36c24'%20id='02'%3e%3c/path%3e%3cpath%20d='M%2029.306%209.435%20C%2030.587%208.172%206.2669999999999995%209.451%206.965%2010.223%20C%207.952999999999999%2011.317%209.165%2013.376000000000001%209.165%2013.376000000000001%20S%2013.921999999999999%2015.781%2017.516%2012.750000000000002%20C%2020.016%2014.250000000000002%2023.516%2013.719000000000001%2025.078%2011.141000000000002%20C%2025.078%2011.141000000000002%2026.294999999999998%2011.594000000000001%2027.529%2011.672000000000002%20C%2027.529%2011.672000000000002%2028.482%2010.247000000000002%2029.306%209.435000000000002%20Z'%20fill='%23ce5c1f'%20id='03'%3e%3c/path%3e%3cellipse%20fill='%2365471B'%20cx='18'%20cy='28.638'%20rx='4.332'%20ry='4.95'%20id='04'%3e%3c/ellipse%3e%3cpath%20d='%20M%2026%2020.605%20C%2026%2022.078%2025.105%2023.272%2024%2023.272%20S%2022%2022.078%2022%2020.604999999999997%20C%2022%2019.132999999999996%2022.896%2017.937999999999995%2024%2017.937999999999995%20C%2025.105%2017.938999999999997%2026%2019.132999999999996%2026%2020.604999999999997%20Z'%20fill='%2365471b'%20id='05'%3e%3c/path%3e%3cpath%20d='M%2014%2020.606%20C%2014%2022.079%2013.104%2023.273000000000003%2012%2023.273000000000003%20C%2010.895%2023.273000000000003%2010%2022.079000000000004%2010%2020.606%20C%2010%2019.133000000000003%2010.895%2017.939%2012%2017.939%20C%2013.104%2017.939%2014%2019.133%2014%2020.606%20Z'%20fill='%2365471b'%20id='06'%3e%3c/path%3e%3cpath%20d='M%2031.125%203.725%20C%2030.885%203.725%2030.658%203.77%2030.439%203.834%20C%2029.751%202.989%2028.716%202.438%2027.541%202.438%20C%2027.454%202.438%2027.372%202.458%2027.286%202.464%20C%2026.552%201.637%2025.492%201.105%2024.299%201.105%20C%2022.794%201.105%2021.499%201.944%2020.813%203.171%20C%2020.467%202.3729999999999998%2019.674%201.8139999999999998%2018.749%201.8139999999999998%20C%2018.031%201.8139999999999998%2017.4%202.1559999999999997%2016.988%202.679%20C%2016.48%201.209%2015.1%200.147%2013.458%200.147%20C%2012.135%200.147%2010.978%200.836%2010.31%201.87%20C%2010.126000000000001%201.8410000000000002%209.942%201.812%209.75%201.812%20C%208.318%201.812%207.089%202.624%206.457%203.8040000000000003%20C%206.254%203.7660000000000005%206.047%203.741%205.833%203.741%20C%203.9690000000000003%203.741%202.458%205.252%202.458%207.116%20S%203.9690000000000003%2010.491%205.833%2010.491%20C%206.421%2010.491%206.968%2010.331999999999999%207.447%2010.065999999999999%20C%207.823%2010.347999999999999%208.285%2010.521999999999998%208.792%2010.521999999999998%20C%208.937%2010.521999999999998%209.077%2010.505999999999998%209.214%2010.479%20C%2010.069%2011.857999999999999%2011.581%2012.782%2013.323%2012.782%20C%2015.032%2012.782%2016.529%2011.897%2017.396%2010.565%20C%2018.116%2011.447%2019.198%2012.022%2020.425%2012.022%20C%2022.240000000000002%2012.022%2023.752000000000002%2010.784%2024.201%209.111%20C%2024.235%209.112%2024.266000000000002%209.121%2024.3%209.121%20C%2024.583000000000002%209.121%2024.859%209.09%2025.126%209.034%20C%2025.78%209.59%2026.617%209.938%2027.543%209.938%20C%2028.717%209.938%2029.753%209.387%2030.439999999999998%208.542000000000002%20C%2030.659%208.606000000000002%2030.886%208.651000000000002%2031.125999999999998%208.651000000000002%20C%2032.486%208.651000000000002%2033.589%207.548000000000002%2033.589%206.1880000000000015%20S%2032.485%203.7250000000000014%2031.125%203.7250000000000014%20Z'%20fill='%23ccd6dd'%20id='07'%3e%3c/path%3e%3ccircle%20fill='%23E1E8ED'%20cx='27.795'%20cy='5.767'%20r='2.121'%20id='08'%3e%3c/circle%3e%3cpath%20d='M%2019.876%205.903%20C%2019.876%204.709999999999999%2018.909000000000002%203.7419999999999995%2017.716%203.7419999999999995%20C%2017.348000000000003%203.7419999999999995%2017.006%203.8429999999999995%2016.703000000000003%204.005%20C%2016.452%203.404%2015.859000000000004%202.981%2015.166000000000004%202.981%20C%2014.599000000000004%202.981%2014.099000000000004%203.266%2013.798000000000004%203.699%20C%2013.128000000000004%203.0759999999999996%2012.237000000000004%202.686%2011.250000000000004%202.686%20C%209.495000000000005%202.686%208.034000000000002%203.896%207.6250000000000036%205.524%20C%207.260000000000003%205.157%206.7550000000000034%204.929%206.196000000000003%204.929%20C%205.0850000000000035%204.929%204.184000000000003%205.83%204.184000000000003%206.941000000000001%20S%205.085000000000003%208.953000000000001%206.196000000000003%208.953000000000001%20C%206.899000000000004%208.953000000000001%207.515000000000003%208.592%207.8750000000000036%208.046000000000001%20C%208.392000000000003%209.127%209.404000000000003%209.919%2010.624000000000004%2010.125000000000002%20C%2011.014000000000005%2010.795000000000002%2011.731000000000003%2011.250000000000002%2012.562000000000005%2011.250000000000002%20C%2013.636000000000005%2011.250000000000002%2014.531000000000004%2010.496000000000002%2014.755000000000004%209.490000000000002%20C%2015.079000000000004%209.670000000000002%2015.446000000000005%209.782000000000002%2015.842000000000004%209.782000000000002%20C%2016.912000000000003%209.782000000000002%2017.804000000000006%209.033000000000001%2018.032000000000004%208.032000000000002%20C%2019.074000000000005%207.877000000000002%2019.876000000000005%206.988000000000001%2019.876000000000005%205.903000000000002%20Z'%20fill='%23e1e8ed'%20id='09'%3e%3c/path%3e%3c/svg%3e", n2 = "data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%2036%2036'%20xml:space='preserve'%3e%3cpath%20d='M%2036%2018%20C%2036%2027.941000000000003%2027.941000000000003%2036%2018%2036%20S%200%2027.941%200%2018%20S%208.059%200%2018%200%20S%2036%208.059%2036%2018'%20fill='%23ffcc4d'%20id='00'%3e%3c/path%3e%3cpath%20d='M%2012.707%206.707%20A%200.999%200.999%200%201%200%2011.293000000000001%205.293%20C%209.652%206.934%208.075%206.998%207.99%207%20A%201%201%200%200%200%208%209%20C%208.099%209%2010.44%208.974%2012.707%206.707%20Z'%20fill='%2365471b'%20id='01'%3e%3c/path%3e%3cpath%20d='M%2028.994%208.011%20A%201.005%201.005%200%200%200%2028.011%207%20C%2027.944%206.999%2026.358%206.944%2024.707%205.293%20A%200.999%200.999%200%201%200%2023.293%206.707%20C%2025.56%208.974%2027.901%209%2028%209%20A%200.995%200.995%200%200%200%2028.994%208.011%20Z'%20fill='%2365471b'%20id='02'%3e%3c/path%3e%3cpath%20d='M%2018%2031%20C%2012.371%2031%2011.104%2027.473%2011.053%2027.322%20A%201%201%200%200%201%2012.942%2026.663999999999998%20C%2012.987%2026.782%2013.895%2029%2018%2029%20C%2022.128%2029%2023.022%2026.758%2023.059%2026.663%20C%2023.252000000000002%2026.153%2023.822000000000003%2025.883%2024.335%2026.067%20S%2025.123%2026.806%2024.947%2027.322%20C%2024.896%2027.473%2023.629%2031%2018%2031%20Z'%20fill='%2365471b'%20id='03'%3e%3c/path%3e%3cpath%20d='M%2029.895%2015.058%20C%2027.709%2011.632%2023.801%2010.522%2021.738%2011.399000000000001%20C%2020.598%2011.882000000000001%2020.027%2013.421000000000001%2020.000999999999998%2016.046%20C%2019.994999999999997%2016.662%2020.019%2017.34%2020.072999999999997%2018.078%20C%2020.104999999999997%2018.512999999999998%2020.139999999999997%2018.954%2020.191999999999997%2019.431%20C%2020.325999999999997%2020.650000000000002%2020.968999999999998%2021.612000000000002%2022.050999999999995%2022.21%20C%2022.770999999999994%2022.609%2023.631999999999994%2022.814%2024.521999999999995%2022.871000000000002%20C%2026.044999999999995%2022.967000000000002%2027.658999999999995%2022.625000000000004%2028.802999999999994%2022.072000000000003%20C%2030.012999999999995%2021.488000000000003%2030.798999999999992%2020.436000000000003%2030.960999999999995%2019.186000000000003%20C%2031.122999999999994%2017.943000000000005%2030.773999999999994%2016.437000000000005%2029.894999999999996%2015.058000000000003%20Z'%20fill='%23ffffff'%20id='04'%3e%3c/path%3e%3cpath%20d='M%2030.962%2019.186%20C%2031.123%2017.943%2030.774%2016.436%2029.895%2015.058%20A%208.85%208.85%200%200%200%2028.264%2013.18%20A%205.958%205.958%200%200%200%2025.5%2012.5%20A%206.005%206.005%200%200%200%2020.002%2016.106%20C%2019.997999999999998%2016.707%2020.02%2017.363000000000003%2020.073%2018.079%20C%2020.105%2018.514%2020.14%2018.955000000000002%2020.193%2019.432000000000002%20C%2020.327%2020.651000000000003%2020.970000000000002%2021.613000000000003%2022.052%2022.211000000000002%20C%2022.772%2022.610000000000003%2023.633%2022.815%2024.523%2022.872000000000003%20C%2026.046%2022.968000000000004%2027.66%2022.626000000000005%2028.804%2022.073000000000004%20C%2030.014%2021.488000000000003%2030.799999999999997%2020.437000000000005%2030.962%2019.186000000000003%20Z'%20fill='%23f4900c'%20id='05'%3e%3c/path%3e%3ccircle%20fill='%2365471B'%20cx='25.5'%20cy='18'%20r='4'%20id='06'%3e%3c/circle%3e%3cellipse%20transform='rotate(-45.028%2024.498%2014.999)'%20fill='%23FFF'%20cx='24.5'%20cy='15'%20rx='1.674'%20ry='1.303'%20id='07'%3e%3c/ellipse%3e%3cpath%20d='M%2021.81%2022.648%20C%2022.557%2023.062%2023.459%2023.305%2024.491999999999997%2023.37%20C%2024.673999999999996%2023.381%2024.856999999999996%2023.387%2025.040999999999997%2023.387%20C%2026.432999999999996%2023.387%2027.883999999999997%2023.072%2029.022%2022.523%20C%2029.994999999999997%2022.053%2030.72%2021.309%2031.124%2020.406%20A%200.585%200.585%200%200%200%2030.869999999999997%2019.653%20C%2029.448999999999998%2018.881999999999998%2027.948999999999998%2021.015%2025.997999999999998%2021.015%20C%2024.046%2021.015%2021.924%2020.079%2020.741999999999997%2021.015%20A%200.506%200.506%200%200%200%2020.676999999999996%2021.743000000000002%20C%2020.985999999999997%2022.096000000000004%2021.362999999999996%2022.401000000000003%2021.809999999999995%2022.648000000000003%20Z'%20fill='%235dadec'%20id='08'%3e%3c/path%3e%3cpath%20d='M%206.105%2015.058%20C%208.291%2011.632%2012.199000000000002%2010.522%2014.262%2011.399000000000001%20C%2015.402000000000001%2011.882000000000001%2015.973%2013.421000000000001%2015.999%2016.046%20C%2016.005%2016.662%2015.981%2017.34%2015.927000000000001%2018.078%20C%2015.895000000000001%2018.512999999999998%2015.860000000000001%2018.954%2015.808000000000002%2019.431%20C%2015.674000000000001%2020.650000000000002%2015.031000000000002%2021.612000000000002%2013.949000000000002%2022.21%20C%2013.229000000000001%2022.609%2012.368000000000002%2022.814%2011.478000000000002%2022.871000000000002%20C%209.955000000000002%2022.967000000000002%208.341000000000001%2022.625000000000004%207.197000000000002%2022.072000000000003%20C%205.987000000000002%2021.488000000000003%205.201000000000002%2020.436000000000003%205.0390000000000015%2019.186000000000003%20C%204.877000000000002%2017.943000000000005%205.226000000000002%2016.437000000000005%206.105000000000001%2015.058000000000003%20Z'%20fill='%23ffffff'%20id='09'%3e%3c/path%3e%3cpath%20d='M%2015.808%2019.432%20C%2015.674%2020.651%2015.031%2021.613%2013.949%2022.211%20C%2013.229%2022.61%2012.368%2022.814999999999998%2011.478%2022.872%20C%209.955%2022.968%208.341%2022.626%207.197%2022.073%20C%205.987%2021.489%205.2010000000000005%2020.437%205.039%2019.187%20C%204.878%2017.944000000000003%205.226999999999999%2016.437%206.106%2015.059000000000001%20A%208.85%208.85%200%200%201%207.737%2013.181000000000001%20A%205.958%205.958%200%200%201%2010.501%2012.501000000000001%20A%206.005%206.005%200%200%201%2015.998999999999999%2016.107%20C%2016.003%2016.708%2015.980999999999998%2017.364%2015.927999999999999%2018.08%20A%2041.06%2041.06%200%200%201%2015.808%2019.432%20Z'%20fill='%23f4900c'%20id='10'%3e%3c/path%3e%3ccircle%20fill='%2365471B'%20cx='10.5'%20cy='18'%20r='4'%20id='11'%3e%3c/circle%3e%3cpath%20d='M%2010.954%2015%20C%2010.751000000000001%2015.828%209.935%2016.5%209.132000000000001%2016.5%20C%208.329%2016.5%207.843000000000002%2015.828%208.046000000000001%2015%20S%209.065000000000001%2013.5%209.868000000000002%2013.5%20C%2010.671000000000003%2013.5%2011.157000000000002%2014.172%2010.954000000000002%2015%20Z'%20fill='%23ffffff'%20id='12'%3e%3c/path%3e%3cpath%20d='M%2014.19%2022.648%20C%2013.443%2023.062%2012.541%2023.305%2011.508%2023.37%20A%209.097%209.097%200%200%201%2010.959%2023.387%20C%209.567%2023.387%208.116%2023.072%206.978%2022.523%20C%206.005%2022.053%205.279999999999999%2021.309%204.8759999999999994%2020.406%20A%200.585%200.585%200%200%201%205.129999999999999%2019.653%20C%206.550999999999999%2018.881999999999998%208.050999999999998%2021.015%2010.001999999999999%2021.015%20C%2011.953999999999999%2021.015%2014.075999999999999%2020.079%2015.258%2021.015%20A%200.506%200.506%200%200%201%2015.322999999999999%2021.743000000000002%20A%204.178%204.178%200%200%201%2014.189999999999998%2022.648000000000003%20Z'%20fill='%235dadec'%20id='13'%3e%3c/path%3e%3c/svg%3e", r2 = "data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%2036%2036'%3e%3ccircle%20fill='%23F3F7F9'%20cx='30.583'%20cy='7.966'%20r='4'%20id='00'%3e%3c/circle%3e%3cpath%20d='M%207.839%2029.942%20C%207.349%2030.178%206.823%2030.323%206.261%2030.378%20C%203.902%2030.559%201.8340000000000005%2028.8%201.6340000000000003%2026.441%20C%201.4530000000000003%2024.064%203.213%2022.014%205.571%2021.814%20C%207.077%2021.705%208.437999999999999%2022.358%209.29%2023.447%20L%207.838999999999999%2029.942%20Z'%20fill='%23f3f7f9'%20id='01'%3e%3c/path%3e%3ccircle%20fill='%23FFCC4D'%20cx='18'%20cy='18'%20r='16'%20id='02'%3e%3c/circle%3e%3cpath%20d='%20M%2026.286%2017.023%20C%2026.286%2018.687%2025.319000000000003%2020.042%2024.124000000000002%2020.042%20C%2022.928%2020.042%2021.962000000000003%2018.687%2021.962000000000003%2017.023000000000003%20C%2021.962000000000003%2015.349000000000004%2022.929000000000002%2014.004000000000003%2024.124000000000002%2014.004000000000003%20C%2025.320000000000004%2014.003000000000004%2026.286%2015.349000000000004%2026.286%2017.023000000000003%20Z'%20fill='%23664500'%20id='03'%3e%3c/path%3e%3cpath%20d='M%2015.057%2017.023%20C%2015.057%2018.687%2014.091000000000001%2020.042%2012.905000000000001%2020.042%20C%2011.709000000000001%2020.042%2010.743000000000002%2018.687%2010.743000000000002%2017.023000000000003%20C%2010.743000000000002%2015.349000000000004%2011.710000000000003%2014.004000000000003%2012.905000000000001%2014.004000000000003%20C%2014.090000000000002%2014.003000000000004%2015.057000000000002%2015.349000000000004%2015.057000000000002%2017.023000000000003%20Z'%20fill='%23664500'%20id='04'%3e%3c/path%3e%3cpath%20d='M%2013.931%208.882%20C%2013.821%209.091%2013.702%209.299999999999999%2013.572%209.5%20C%2013.133999999999999%2010.168%2012.596%2010.765%2011.968%2011.274000000000001%20C%2011.37%2011.762%2010.713000000000001%2012.151000000000002%2010.004999999999999%2012.430000000000001%20C%208.390999999999998%2013.098%206.477999999999999%2013.167000000000002%204.912999999999999%2012.55%20C%204.6739999999999995%2012.46%204.435%2012.351%204.215999999999999%2012.221%20C%203.2689999999999992%2011.733%202.4819999999999993%2011.005%202.003999999999999%2010.119%20C%202.790999999999999%2010.706999999999999%203.687999999999999%2011.125%204.633999999999999%2011.334999999999999%20C%205.988999999999999%2011.633999999999999%207.433999999999998%2011.524%208.808999999999997%2010.917%20C%209.396999999999997%2010.658%209.934999999999997%2010.329%2010.402999999999997%209.931%20C%2010.960999999999997%209.472999999999999%2011.438999999999997%208.934999999999999%2011.817999999999998%208.337%20C%2012.275999999999998%207.62%2012.584999999999997%206.8229999999999995%2012.744999999999997%205.975999999999999%20C%2013.322999999999997%205.826999999999999%2013.860999999999997%205.586999999999999%2014.318999999999997%205.238999999999999%20C%2014.477999999999998%205.118999999999999%2014.637999999999998%204.989999999999999%2014.776999999999997%204.859999999999999%20C%2014.876999999999997%206.212%2014.597999999999997%207.626999999999999%2013.930999999999997%208.882%20Z'%20fill='%23c9d5dd'%20id='05'%3e%3c/path%3e%3cpath%20d='M%2035.378%204.814%20C%2035.439%205.627%2035.165%206.4%2034.676%206.98%20C%2034.605000000000004%207.061000000000001%2034.534%207.133%2034.463%207.204000000000001%20C%2033.985%207.651000000000001%2033.355000000000004%207.956%2032.653%208.017000000000001%20C%2032.043%208.058000000000002%2031.462999999999997%207.915000000000001%2030.974999999999998%207.651000000000002%20C%2030.750999999999998%208.048000000000002%2030.476999999999997%208.403000000000002%2030.171999999999997%208.729000000000001%20C%2030.100999999999996%208.8%2030.039999999999996%208.861%2029.967999999999996%208.922%20C%2028.727999999999998%2010.101%2026.988999999999997%2010.701%2025.168999999999997%2010.396%20C%2023.339%2010.101%2021.874999999999996%208.962000000000002%2021.080999999999996%207.437000000000001%20C%2020.907999999999998%207.112000000000001%2020.765999999999995%206.766000000000001%2020.663999999999994%206.400000000000001%20C%2020.388999999999996%206.532000000000001%2020.094999999999995%206.614000000000002%2019.778999999999993%206.644000000000001%20C%2018.456999999999994%206.746000000000001%2017.297999999999995%205.759000000000001%2017.185999999999993%204.438000000000001%20C%2017.083999999999993%203.1060000000000008%2018.070999999999994%201.9570000000000007%2019.392999999999994%201.8450000000000006%20C%2020.237999999999992%201.7840000000000007%2020.999999999999993%202.150000000000001%2021.477999999999994%202.7600000000000007%20C%2022.209999999999994%201.2550000000000008%2023.694999999999993%200.1670000000000007%2025.483999999999995%200.015000000000000568%20C%2027.618999999999993%20-0.14799999999999944%2029.540999999999997%201.0620000000000005%2030.353999999999996%202.9130000000000007%20C%2030.831999999999997%202.4550000000000005%2031.461999999999996%202.150000000000001%2032.17399999999999%202.089000000000001%20C%2033.80199999999999%201.9570000000000007%2035.245999999999995%203.187000000000001%2035.37799999999999%204.814000000000001%20Z'%20fill='%23f3f7f9'%20id='06'%3e%3c/path%3e%3cpath%20d='M%2034.467%207.208%20C%2034.367%207.547000000000001%2034.198%207.8660000000000005%2033.949%208.145%20C%2033.65%208.504%2033.242%208.753%2032.783%208.952%20C%2032.604%209.032%2032.394%209.092%2032.195%209.121%20C%2032.016%209.4%2031.806%209.659%2031.567%209.908000000000001%20C%2030.989%2010.546000000000001%2030.242%2011.064000000000002%2029.415%2011.403000000000002%20C%2028%2012.001000000000003%2026.305999999999997%2012.061000000000002%2024.862%2011.562000000000003%20C%2024.075%2011.303000000000003%2023.337%2010.865000000000004%2022.729999999999997%2010.297000000000002%20C%2022.231999999999996%209.859000000000002%2021.812999999999995%209.330000000000002%2021.533999999999995%208.753000000000002%20C%2021.453999999999997%208.604000000000003%2021.384999999999994%208.444000000000003%2021.324999999999996%208.295000000000002%20C%2021.214999999999996%208.016000000000002%2021.135999999999996%207.727000000000002%2021.085999999999995%207.4380000000000015%20C%2021.205999999999996%207.677000000000001%2021.344999999999995%207.896000000000002%2021.503999999999994%208.116000000000001%20C%2021.961999999999993%208.764000000000001%2022.559999999999995%209.322000000000001%2023.267999999999994%209.730000000000002%20H%2023.277999999999995%20C%2023.845999999999997%2010.059000000000003%2024.483999999999995%2010.288000000000002%2025.170999999999996%2010.398000000000001%20C%2026.993999999999996%2010.707%2028.727999999999994%2010.099000000000002%2029.973999999999997%208.923000000000002%20C%2030.043999999999997%208.863000000000001%2030.103999999999996%208.803000000000003%2030.173%208.734000000000002%20C%2030.273%208.624000000000002%2030.372%208.515000000000002%2030.462%208.395000000000001%20C%2030.661%208.166000000000002%2030.831%207.917000000000002%2030.98%207.6480000000000015%20C%2031.468%207.917000000000002%2032.046%208.057000000000002%2032.654%208.017000000000001%20C%2033.351000000000006%207.955000000000001%2033.98800000000001%207.646000000000001%2034.467000000000006%207.208000000000001%20Z'%20fill='%23c9d5dd'%20id='07'%3e%3c/path%3e%3cpath%20d='M%2023.775%205.926%20C%2023.775%209.017%2020.613%2011.518%2016.708%2011.518%20C%2014.440999999999999%2011.518%2012.416999999999998%2010.674000000000001%2011.125999999999998%209.362%20C%209.864999999999998%2010.847%207.688999999999998%2011.833%205.8489999999999975%2011.833%20C%203.0629999999999975%2011.833%200.8059999999999974%209.576%200.8059999999999974%206.79%20S%203.0629999999999975%201.7469999999999999%205.8489999999999975%201.7469999999999999%20C%205.919999999999997%201.7469999999999999%206.000999999999998%201.7469999999999999%206.072999999999998%201.757%20C%206.653%200.974%207.568%200.476%208.615%200.476%20C%209.845%200.476%2010.913%201.188%2011.421%202.215%20C%2012.712%201.046%2014.604%200.324%2016.708%200.324%20C%2020.613%200.323%2023.775%202.8249999999999997%2023.775%205.926%20Z'%20fill='%23f3f7f9'%20id='08'%3e%3c/path%3e%3cpath%20d='M%2027.92%204.408%20C%2027.860000000000003%204.817%2027.701%205.235%2027.462000000000003%205.6240000000000006%20C%2027.143000000000004%206.132000000000001%2026.685000000000002%206.590000000000001%2026.117000000000004%206.909000000000001%20C%2025.679000000000006%207.158%2025.170000000000005%207.377000000000001%2024.632000000000005%207.457000000000001%20C%2024.303000000000004%208.274000000000001%2023.845000000000006%209.041%2023.277000000000005%209.729000000000001%20H%2023.267000000000003%20C%2023.098000000000003%209.928%2022.918000000000003%2010.118%2022.729000000000003%2010.297%20C%2022.51%2010.516%2022.281000000000002%2010.715%2022.032000000000004%2010.905000000000001%20C%2020.547000000000004%2012.051000000000002%2018.624000000000002%2012.698%2016.721000000000004%2012.679000000000002%20C%2015.077000000000004%2012.679000000000002%2013.353000000000003%2012.201000000000002%2011.968000000000004%2011.274000000000003%20C%2011.769000000000004%2011.144000000000002%2011.589000000000004%2011.005000000000003%2011.410000000000004%2010.866000000000003%20C%2011.051000000000004%2010.577000000000004%2010.713000000000005%2010.268000000000002%2010.404000000000003%209.929000000000004%20C%2010.075000000000003%209.590000000000003%209.776000000000003%209.222000000000003%209.507000000000003%208.833000000000004%20C%209.278000000000004%208.463000000000005%209.078000000000003%208.095000000000004%208.909000000000002%207.696000000000003%20C%208.431000000000003%207.6460000000000035%207.952000000000003%207.527000000000004%207.5340000000000025%207.317000000000004%20C%207.325000000000003%207.227000000000004%207.1350000000000025%207.118000000000004%206.956000000000002%206.988000000000004%20C%206.388000000000003%206.580000000000004%205.930000000000002%206.052000000000004%205.701000000000002%205.434000000000004%20C%205.511000000000002%205.006000000000004%205.432000000000002%204.548000000000004%205.461000000000002%204.119000000000003%20C%205.890000000000002%205.524000000000004%207.285000000000002%206.421000000000003%208.750000000000002%206.232000000000003%20L%208.939000000000002%206.202000000000003%20C%209.328000000000001%206.132000000000002%209.686000000000002%205.9730000000000025%209.995000000000001%205.774000000000003%20C%2010.194%206.232000000000003%2010.423000000000002%206.661000000000003%2010.702000000000002%207.059000000000003%20C%2010.782000000000002%207.189000000000003%2010.871000000000002%207.3080000000000025%2010.971000000000002%207.428000000000003%20C%2011.220000000000002%207.757000000000002%2011.509000000000002%208.066000000000003%2011.818000000000001%208.335000000000003%20C%2012.336000000000002%208.813000000000002%2012.924000000000001%209.202000000000002%2013.572000000000001%209.501000000000003%20C%2014.369000000000002%209.880000000000003%2015.256%2010.099000000000004%2016.193%2010.139000000000003%20C%2018.166%2010.239000000000003%2019.979000000000003%209.531000000000002%2021.324%208.296000000000003%20L%2021.503%208.117000000000003%20C%2022.151%207.4890000000000025%2022.669%206.722000000000003%2023.037%205.875000000000003%20C%2023.695%206.154000000000003%2024.432%206.204000000000002%2025.189%206.104000000000003%20C%2025.787%206.024000000000003%2026.425%205.646000000000003%2026.933%205.267000000000003%20C%2027.492%204.857000000000003%2027.89%204.448000000000003%2027.919999999999998%204.408000000000003%20Z'%20fill='%23dee7ed'%20id='09'%3e%3c/path%3e%3cpath%20d='M%2033.607%2033.196%20C%2032.783%2033.826%2031.746%2033.979%2030.831%2033.664%20L%2030.79%2033.654%20C%2030.79%2033.67400000000001%2030.397%2034.86300000000001%2028.868%2034.854000000000006%20C%2028.197%2034.85000000000001%2027.607%2034.56900000000001%2027.2%2034.102000000000004%20C%2026.397%2034.854000000000006%2025.319%2035.322%2024.119%2035.322%20C%2023.611%2035.322%2023.123%2035.241%2022.665%2035.078%20C%2021.953%2035.576%2021.089%2035.869%2020.143%2035.871%20C%2018.262%2035.876000000000005%2017.448%2035.2%2017.001%2034.732%20C%2013.110000000000001%2037.003%208.127%2035.903%206.518000000000001%2033.949%20C%206.367000000000001%2033.766%206.2330000000000005%2033.573%206.121%2033.369%20C%205.45%2033.745%204.6770000000000005%2033.908%203.8740000000000006%2033.796%20C%201.84%2033.542%200.386%2031.661%200.641%2029.627%20C%200.763%2028.680999999999997%201.2309999999999999%2027.868%201.902%2027.288%20C%201.9529999999999998%2027.237000000000002%202.014%2027.186%202.065%2027.146%20C%202.828%2026.566000000000003%203.8040000000000003%2026.272000000000002%204.821%2026.404%20C%204.984%2026.424%205.136%2026.455%205.289%2026.496%20L%205.411%2026.526%20C%205.563%2026.567%205.7059999999999995%2026.628%205.848%2026.689%20C%205.99%2026.75%206.133%2026.821%206.265%2026.902%20C%206.457999999999999%2027.014%206.630999999999999%2027.136000000000003%206.794%2027.278000000000002%20C%206.896%2027.166000000000004%206.997%2027.064000000000004%207.098999999999999%2026.963%20L%207.118999999999999%2026.943%20C%209.050999999999998%2025.052%2011.948999999999998%2024.35%2014.633%2025.397000000000002%20C%2015.893999999999998%2025.885%2016.951%2026.709000000000003%2017.704%2027.715000000000003%20C%2018.406%2027.247000000000003%2019.239%2026.983000000000004%2020.144000000000002%2026.983000000000004%20C%2021.090000000000003%2026.983000000000004%2021.964000000000002%2027.278000000000006%2022.686%2027.786000000000005%20C%2024.465%2027.298000000000005%2026.326%2027.562000000000005%2027.881999999999998%2028.406000000000006%20C%2027.892%2028.406000000000006%2027.892%2028.416000000000007%2027.892%2028.416000000000007%20C%2028.116%2028.528000000000006%2028.339%2028.660000000000007%2028.543%2028.813000000000006%20C%2028.756%2028.955000000000005%2028.96%2029.118000000000006%2029.163%2029.281000000000006%20C%2029.346%2028.956000000000007%2029.6%2028.661000000000005%2029.915%2028.417000000000005%20C%2031.166%2027.461000000000006%2032.925%2027.624000000000006%2033.972%2028.753000000000004%20L%2034.155%2028.967000000000002%20C%2035.173%2030.278000000000002%2034.929%2032.179%2033.607%2033.196000000000005%20Z'%20fill='%23f3f7f9'%20id='10'%3e%3c/path%3e%3cpath%20d='M%2022.729%2035.087%20L%2022.659%2035.077000000000005%20C%2022.679%2034.99700000000001%2022.689%2034.928000000000004%2022.698999999999998%2034.848000000000006%20C%2022.769%2034.32000000000001%2022.698999999999998%2033.80200000000001%2022.509999999999998%2033.334%20C%2022.121%2032.367000000000004%2021.224999999999998%2031.630000000000003%2020.108999999999998%2031.491000000000003%20C%2019.988999999999997%2031.471000000000004%2019.86%2031.471000000000004%2019.729999999999997%2031.471000000000004%20C%2019.470999999999997%2031.471000000000004%2019.221999999999998%2031.501000000000005%2018.972999999999995%2031.561000000000003%20C%2018.942999999999994%2031.162000000000003%2018.872999999999994%2030.754000000000005%2018.773999999999994%2030.375000000000004%20C%2018.554999999999993%2029.458000000000002%2018.155999999999995%2028.611000000000004%2017.607999999999993%2027.874000000000002%20C%2016.850999999999992%2026.848000000000003%2015.784999999999993%2026.011000000000003%2014.498999999999993%2025.513%20C%2011.838999999999993%2024.477%208.958999999999993%2025.174000000000003%207.045999999999993%2027.047%20L%207.025999999999994%2027.067%20C%206.915999999999993%2027.167%206.816999999999994%2027.276%206.716999999999993%2027.386%20C%206.557999999999994%2027.247%206.387999999999994%2027.117%206.188999999999993%2027.006999999999998%20C%206.058999999999993%2026.927%205.919999999999993%2026.857999999999997%205.780999999999993%2026.798%20C%205.6609999999999925%2026.747999999999998%205.541999999999993%2026.697999999999997%205.411999999999993%2026.657999999999998%20C%205.391999999999993%2026.647999999999996%205.361999999999993%2026.647999999999996%205.3419999999999925%2026.637999999999998%20L%205.221999999999992%2026.607999999999997%20C%205.072999999999992%2026.567999999999998%204.922999999999992%2026.537999999999997%204.763999999999992%2026.517999999999997%20C%203.7479999999999922%2026.377999999999997%202.780999999999992%2026.676999999999996%202.023999999999992%2027.254999999999995%20C%201.973999999999992%2027.294999999999995%201.913999999999992%2027.344999999999995%201.864999999999992%2027.394999999999996%20L%201.854999999999992%2027.374999999999996%20C%202.292999999999992%2026.517999999999997%203.209999999999992%2025.800999999999995%204.345999999999992%2025.571999999999996%20C%204.475999999999992%2025.551999999999996%204.604999999999992%2025.521999999999995%204.734999999999992%2025.511999999999997%20C%205.123999999999993%2025.461999999999996%205.521999999999992%2025.451999999999998%205.920999999999992%2025.522%20C%206.8179999999999925%2024.445999999999998%208.042999999999992%2023.578999999999997%209.437999999999992%2023.090999999999998%20C%2011.191999999999991%2022.473%2013.213999999999992%2022.473%2014.99799999999999%2023.090999999999998%20C%2016.76199999999999%2023.668999999999997%2018.42599999999999%2024.865%2019.43199999999999%2026.448999999999998%20C%2019.43199999999999%2026.468999999999998%2019.441999999999993%2026.468999999999998%2019.441999999999993%2026.479%20C%2019.471999999999994%2026.519%2019.501999999999992%2026.569%2019.52199999999999%2026.608999999999998%20C%2019.95999999999999%2027.287%2020.28899999999999%2028.014%2020.52799999999999%2028.770999999999997%20C%2020.537999999999993%2028.810999999999996%2020.557999999999993%2028.860999999999997%2020.577999999999992%2028.900999999999996%20C%2020.577999999999992%2028.920999999999996%2020.587999999999994%2028.940999999999995%2020.597999999999992%2028.960999999999995%20C%2020.70799999999999%2029.378999999999994%2020.77699999999999%2029.807999999999996%2020.816999999999993%2030.225999999999996%20C%2021.474999999999994%2030.524999999999995%2022.032999999999994%2030.952999999999996%2022.420999999999992%2031.500999999999994%20C%2022.789999999999992%2032.00899999999999%2023.03899999999999%2032.57699999999999%2023.10899999999999%2033.154999999999994%20C%2023.118999999999993%2033.224999999999994%2023.12899999999999%2033.294%2023.12899999999999%2033.364%20C%2023.17699999999999%2033.991%2023.02799999999999%2034.608999999999995%2022.728999999999992%2035.086999999999996%20Z'%20fill='%23dee7ed'%20id='11'%3e%3c/path%3e%3cpath%20d='M%2034.118%2028.979%20C%2033.122%2027.963%2031.497000000000003%2027.753%2030.252000000000002%2028.480999999999998%20C%2030.152%2028.520999999999997%2030.063000000000002%2028.581%2029.973000000000003%2028.65%20C%2029.654000000000003%2028.889%2029.395000000000003%2029.177999999999997%2029.206000000000003%2029.497%20C%2029.007%2029.328%2028.788000000000004%2029.178%2028.578000000000003%2029.039%20C%2028.369000000000003%2028.89%2028.140000000000004%2028.76%2027.910000000000004%2028.650000000000002%20C%2027.910000000000004%2028.650000000000002%2027.910000000000004%2028.64%2027.900000000000002%2028.64%20C%2026.007%2027.664%2023.685000000000002%2027.494%2021.573%2028.391000000000002%20C%2021.214%2028.540000000000003%2020.885%2028.71%2020.577%2028.899%20C%2020.557000000000002%2028.859%2020.537000000000003%2028.809%2020.527%2028.769000000000002%20C%2020.288%2028.012%2019.959%2027.284000000000002%2019.521%2026.607000000000003%20C%2019.661%2026.537000000000003%2019.79%2026.467000000000002%2019.92%2026.408%20C%2021.624000000000002%2025.591%2023.696%2025.282%2025.589000000000002%2025.671000000000003%20C%2026.526000000000003%2025.860000000000003%2027.422%2026.179000000000002%2028.249000000000002%2026.608000000000004%20C%2028.628000000000004%2026.827000000000005%2028.986%2027.076000000000004%2029.315%2027.345000000000002%20C%2029.973000000000003%2027.096000000000004%2030.67%2027.006000000000004%2031.318%2027.096000000000004%20C%2031.348000000000003%2027.096000000000004%2031.388%2027.096000000000004%2031.418000000000003%2027.106000000000005%20C%2032.135000000000005%2027.216000000000005%2032.793000000000006%2027.475000000000005%2033.281000000000006%2027.903000000000006%20C%2033.659000000000006%2028.202000000000005%2033.94800000000001%2028.581000000000007%2034.11800000000001%2028.979000000000006%20Z'%20fill='%23c9d5dd'%20id='12'%3e%3c/path%3e%3c/svg%3e", c2 = "data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%2036%2036'%3e%3cpath%20d='M%2035%2017%20C%2035%2026.389%2027.389%2034%2018%2034%20C%208.612%2034%201%2026.389%201%2017%20C%201%207.612%208.612%200%2018%200%20C%2027.389%200%2035%207.612%2035%2017'%20fill='%23ffcb4c'%20id='00'%3e%3c/path%3e%3cpath%20d='M%2029.332%2018.888%20C%2029.136%2018.888%2028.937%2018.827%2028.768%2018.701%20C%2028.732%2018.674%2025.168%2016.056%2020.833000000000002%2016.056%20C%2020.451%2016.056%2020.106%2015.826%2019.961000000000002%2015.473%20C%2019.814000000000004%2015.120000000000001%2019.895000000000003%2014.714%2020.166%2014.444%20C%2023.241%2011.369%2028.181%2011.334000000000001%2028.389000000000003%2011.334000000000001%20C%2028.910000000000004%2011.334000000000001%2029.332000000000004%2011.756000000000002%2029.333000000000002%2012.277000000000001%20C%2029.334000000000003%2012.798000000000002%2028.911%2013.221%2028.391000000000002%2013.223%20C%2028.357000000000003%2013.223%2025.762%2013.248000000000001%2023.425%2014.420000000000002%20C%2027.113%2015.128000000000002%2029.765%2017.088%2029.9%2017.19%20C%2030.317%2017.503%2030.401999999999997%2018.093%2030.09%2018.511000000000003%20C%2029.904%2018.758000000000003%2029.62%2018.888%2029.332%2018.888%20Z'%20fill='%2365471b'%20id='01'%3e%3c/path%3e%3cpath%20d='M%206.668%2018.888%20C%206.381%2018.888%206.097%2018.758000000000003%205.912%2018.51%20C%205.599%2018.093%205.683%2017.501%206.101%2017.188000000000002%20C%206.236%2017.087000000000003%208.888%2015.127000000000002%2012.576%2014.418000000000003%20C%2010.238%2013.246000000000002%207.644%2013.221000000000004%207.611000000000001%2013.221000000000004%20C%207.090000000000001%2013.220000000000004%206.668000000000001%2012.796000000000003%206.6690000000000005%2012.275000000000004%20C%206.6690000000000005%2011.754000000000003%207.091%2011.332000000000004%207.613%2011.332000000000004%20C%207.822%2011.332000000000004%2012.762%2011.368000000000004%2015.836000000000002%2014.442000000000004%20C%2016.106%2014.712000000000003%2016.187%2015.118000000000004%2016.041%2015.471000000000004%20C%2015.895%2015.824000000000003%2015.55%2016.054000000000002%2015.169%2016.054000000000002%20C%2010.812000000000001%2016.054000000000002%207.271000000000001%2018.672%207.236000000000001%2018.698%20C%207.063000000000001%2018.827%206.865%2018.888%206.668000000000001%2018.888%20Z'%20fill='%2365471b'%20id='02'%3e%3c/path%3e%3cpath%20d='M%2018%2027.136%20C%2021.335%2027.136%2023.547%2027.524%2026.284%2028.056%20C%2026.909%2028.176000000000002%2028.125%2028.056%2028.125%2026.215%20C%2028.125%2022.533%2023.895%2017.930999999999997%2018%2017.930999999999997%20S%207.875%2022.533%207.875%2026.215%20C%207.875%2028.056%209.091%2028.177%209.716%2028.056%20C%2012.452%2027.524%2014.665%2027.136%2018%2027.136%20Z'%20fill='%2365471b'%20id='03'%3e%3c/path%3e%3cpath%20d='M%2025.712%2032.287%20V%2025.186%20C%2025.712%2022.593%2021.823%2020.001%2017.934%2020.001%20S%2010.156000000000002%2022.594%2010.156000000000002%2025.186%20V%2032.287%20C%205.753000000000003%2032.635999999999996%202.7970000000000024%2033.272%202.7970000000000024%2034%20C%202.7970000000000024%2035.105%209.574000000000002%2036%2017.934000000000005%2036%20S%2033.071000000000005%2035.105%2033.071000000000005%2034%20C%2033.071000000000005%2033.272%2030.115000000000006%2032.636%2025.712000000000003%2032.287%20Z'%20fill='%2377af57'%20id='04'%3e%3c/path%3e%3ccircle%20fill='%235D8F3F'%20cx='15.875'%20cy='23.228'%20r='1.235'%20id='05'%3e%3c/circle%3e%3ccircle%20fill='%235D8F3F'%20cx='20.698'%20cy='25.64'%20r='1.235'%20id='06'%3e%3c/circle%3e%3ccircle%20transform='rotate(-80.781%2021.232%2030.514)'%20fill='%235D8F3F'%20cx='21.232'%20cy='30.515'%20r='1.235'%20id='07'%3e%3c/circle%3e%3ccircle%20transform='rotate(-80.781%2015.107%2032.548)'%20fill='%235D8F3F'%20cx='15.107'%20cy='32.548'%20r='1.765'%20id='08'%3e%3c/circle%3e%3c/svg%3e", l2 = "data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%2036%2036'%3e%3cpath%20d='M%2036%2018%20C%2036%2027.941000000000003%2027.941000000000003%2036%2018%2036%20C%208.06%2036%200%2027.941000000000003%200%2018%20C%200%208.06%208.06%200%2018%200%20C%2027.941000000000003%200%2036%208.06%2036%2018'%20fill='%23ffcb4c'%20id='00'%3e%3c/path%3e%3cellipse%20fill='%2365471B'%20cx='12.176'%20cy='14.71'%20rx='2.647'%20ry='3.706'%20id='01'%3e%3c/ellipse%3e%3ccircle%20fill='%23F4F7F9'%20cx='24.882'%20cy='14.294'%20r='6.882'%20id='02'%3e%3c/circle%3e%3cpath%20d='M%2014.825%209.946%20C%2014.503%209.946%2014.184999999999999%209.799999999999999%2013.976999999999999%209.523%20C%2012.985999999999999%208.202%2011.948999999999998%207.494%2010.893999999999998%207.419%20C%209.503999999999998%207.324%208.370999999999999%208.366%208.159999999999998%208.577%20C%207.745999999999999%208.991%207.075999999999999%208.991%206.6629999999999985%208.577%20C%206.248999999999999%208.163%206.248999999999999%207.493%206.6629999999999985%207.08%20C%207.119999999999998%206.623%208.791999999999998%205.144%2011.043999999999999%205.307%20C%2012.738999999999999%205.4270000000000005%2014.294999999999998%206.418%2015.671%208.252%20C%2016.022%208.72%2015.927%209.384%2015.459999999999999%209.734%20C%2015.267999999999999%209.877%2015.045%209.946%2014.825%209.946%20Z'%20fill='%2365471b'%20id='03'%3e%3c/path%3e%3cpath%20d='M%2032.824%2036%20C%2032.239%2036%2031.764999999999997%2035.526%2031.764999999999997%2034.941%20V%2014.824%20C%2031.764999999999997%2014.239%2032.239%2013.765%2032.824%2013.765%20S%2033.882999999999996%2014.239%2033.882999999999996%2014.824%20V%2034.942%20C%2033.882%2035.526%2033.409%2036%2032.824%2036%20Z'%20fill='%23292f33'%20id='04'%3e%3c/path%3e%3cpath%20d='%20M%2024.881999999999998%2020.118%20C%2021.671%2020.118%2019.058999999999997%2017.506%2019.058999999999997%2014.293999999999999%20S%2021.671999999999997%208.469999999999999%2024.881999999999998%208.469999999999999%20C%2028.092999999999996%208.469999999999999%2030.705999999999996%2011.081999999999999%2030.705999999999996%2014.293999999999999%20S%2028.092999999999996%2020.118%2024.881999999999998%2020.118%20Z%20M%2032.824%2012.706%20C%2032.769999999999996%2012.706%2032.719%2012.718%2032.666%2012.722%20C%2031.933999999999997%209.094%2028.722999999999995%206.353%2024.881999999999998%206.353%20C%2020.503%206.353%2016.941%209.915%2016.941%2014.294%20S%2020.503%2022.235%2024.881999999999998%2022.235%20C%2028.349999999999998%2022.235%2031.298%2019.997%2032.378%2016.892%20C%2032.522%2016.923%2032.67%2016.941%2032.823%2016.941%20C%2033.993%2016.941%2034.941%2015.992999999999999%2034.941%2014.822999999999999%20C%2034.941%2013.653999999999998%2033.993%2012.706%2032.824000000000005%2012.706%20Z'%20fill='%2367757f'%20id='05'%3e%3c/path%3e%3cpath%20d='M%2021.175%2028.588%20C%2021.016000000000002%2028.588%2020.854%2028.552%2020.702%2028.476000000000003%20C%2018.883000000000003%2027.566000000000003%2017.115000000000002%2027.566000000000003%2015.296000000000003%2028.476000000000003%20C%2014.772000000000002%2028.737000000000002%2014.136000000000003%2028.526000000000003%2013.875000000000004%2028.002000000000002%20C%2013.613000000000003%2027.479000000000003%2013.825000000000003%2026.843000000000004%2014.349000000000004%2026.581000000000003%20C%2016.770000000000003%2025.371000000000002%2019.226000000000003%2025.371000000000002%2021.649000000000004%2026.581000000000003%20C%2022.172000000000004%2026.843000000000004%2022.384000000000004%2027.479000000000003%2022.123000000000005%2028.002000000000002%20C%2021.938000000000006%2028.374000000000002%2021.564000000000004%2028.588%2021.175000000000004%2028.588%20Z'%20fill='%2365471b'%20id='07'%3e%3c/path%3e%3cpath%20d='%20M%2022.397%2019.555%20C%2023.151999999999997%2019.912%2023.991999999999997%2020.118%2024.881999999999998%2020.118%20C%2028.098%2020.118%2030.705999999999996%2017.511%2030.705999999999996%2014.293999999999999%20C%2030.705999999999996%2013.403999999999998%2030.499999999999996%2012.562999999999999%2030.142999999999997%2011.809%20L%2022.397%2019.555%20Z'%20fill='%23bdddf4'%20id='08'%3e%3c/path%3e%3cpath%20d='M%2028.049%209.411%20C%2027.137%208.818%2026.051%208.471%2024.881999999999998%208.471%20C%2021.665999999999997%208.471%2019.058%2011.078%2019.058%2014.295%20C%2019.058%2015.464%2019.406%2016.55%2019.998%2017.462%20L%2028.049%209.411%20Z'%20fill='%23bdddf4'%20id='09'%3e%3c/path%3e%3c/svg%3e", a2 = "data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%2036%2036'%20xml:space='preserve'%3e%3cpath%20d='M%2035%2018%20C%2035%2027.389%2027.389%2035%2018%2035%20C%208.612%2035%201%2027.389%201%2018%20C%201%208.612%208.612%201%2018%201%20C%2027.389%201%2035%208.612%2035%2018'%20fill='%23ffcc4d'%20id='00'%3e%3c/path%3e%3cellipse%20fill='%2365471B'%20cx='18'%20cy='28'%20rx='4'%20ry='3'%20id='01'%3e%3c/ellipse%3e%3cpath%20d='M%2027.899%2014.557%20A%204.5%204.5%200%201%201%2019.099%2016.442%20A%204.5%204.5%200%200%201%2027.899%2014.557%20Z'%20fill='%23f4f7f9'%20id='02'%3e%3c/path%3e%3cellipse%20fill='%23292F33'%20cx='23.5'%20cy='16.498'%20rx='2.5'%20ry='2.498'%20id='03'%3e%3c/ellipse%3e%3cpath%20d='M%209.037000000000003%209.931%20A%201%201%200%200%201%208.590000000000003%208.036%20A%209.94%209.94%200%200%201%2015.203000000000003%207.2139999999999995%20A%201%201%200%201%201%2014.777000000000003%209.168%20A%207.949%207.949%200%200%200%209.482000000000003%209.825999999999999%20A%200.999%200.999%200%200%201%209.037000000000003%209.931%20Z'%20fill='%2365471b'%20id='04'%3e%3c/path%3e%3cpath%20d='M%2026.963%209.931%20A%200.999%200.999%200%200%201%2026.518%209.825999999999999%20A%207.949%207.949%200%200%200%2021.223%209.168%20A%201%201%200%201%201%2020.797%207.2139999999999995%20A%209.932%209.932%200%200%201%2027.41%208.036%20A%201%201%200%200%201%2026.963%209.931%20Z'%20fill='%2365471b'%20id='05'%3e%3c/path%3e%3cpath%20d='M%2013.995%2013.645%20L%2014.318999999999999%2013.171999999999999%20S%2015.027%2012.139999999999999%2016.058%2012.847999999999999%20C%2017.09%2013.556%2016.383%2014.587%2016.383%2014.587%20L%2015.7%2015.584%20C%2015.867999999999999%2015.712%2016.032%2015.843%2016.191%2015.972999999999999%20C%2016.191%2015.972999999999999%2016.898999999999997%2014.940999999999999%2017.93%2015.649%20C%2018.962%2016.357%2018.255%2017.387999999999998%2018.255%2017.387999999999998%20L%2016.88%2019.328%20C%2017.018%2019.512%2017.243%2019.617%2017.355999999999998%2019.805%20C%2017.355999999999998%2019.805%2018.063999999999997%2018.773%2019.095%2019.48%20C%2020.128%2020.188%2019.419999999999998%2021.22%2019.419999999999998%2021.22%20L%2013.758999999999999%2029.476999999999997%20A%207.51%207.51%200%200%201%203.320999999999998%2031.423%20A%207.51%207.51%200%200%201%200.8559999999999981%2021.863999999999997%20C%201.444999999999998%2020.693999999999996%201.8899999999999981%2019.456999999999997%202.306999999999998%2018.215999999999998%20L%203.360999999999998%2015.084999999999997%20S%203.702999999999998%2013.880999999999997%204.905999999999998%2014.221999999999998%20C%206.108999999999998%2014.563999999999998%205.767999999999998%2015.766999999999998%205.767999999999998%2015.766999999999998%20L%204.854999999999998%2020.334999999999997%20C%205.0269999999999975%2020.452999999999996%205.1919999999999975%2020.574999999999996%205.3489999999999975%2020.700999999999997%20L%2011.385999999999997%2011.916999999999996%20S%2012.093999999999998%2010.884999999999996%2013.124999999999998%2011.592999999999996%20S%2013.448999999999998%2013.331999999999997%2013.448999999999998%2013.331999999999997%20L%2013.994999999999997%2013.644999999999998%20Z'%20fill='%23f19020'%20id='06'%3e%3c/path%3e%3cpath%20d='M%2034.764%2024.896%20L%2035.608000000000004%2019.305%20A%201.069%201.069%200%200%200%2034.711000000000006%2018.088%20L%2034.587%2018.069000000000003%20A%201.07%201.07%200%200%200%2033.370000000000005%2018.967000000000002%20L%2032.853%2022.389000000000003%20L%2032.849000000000004%2022.403000000000002%20C%2032.647000000000006%2023.698%2031.544000000000004%2023.622000000000003%2031.129000000000005%2021.634000000000004%20C%2031.117000000000004%2021.577000000000005%2031.098000000000006%2021.526000000000003%2031.083000000000006%2021.472000000000005%20L%2029.531000000000006%2013.782000000000004%20A%200.99%200.99%200%200%200%2028.365000000000006%2013.007000000000003%20L%2028.087000000000007%2013.063000000000002%20C%2027.551000000000005%2013.171000000000003%2027.248000000000008%2013.618000000000002%2027.356000000000005%2014.154000000000002%20L%2028.676000000000005%2020.937%20C%2028.681000000000004%2020.974%2028.680000000000007%2021.006%2028.688000000000006%2021.045%20C%2028.969000000000005%2022.44%2028.293000000000006%2022.265%2028.050000000000004%2020.740000000000002%20A%201.388%201.388%200%200%200%2027.993000000000006%2020.522000000000002%20L%2026.69%2014.29%20L%2026.607000000000003%2013.879%20C%2026.491000000000003%2013.305%2025.985000000000003%2012.91%2025.411%2013.026%20L%2025.273%2013.054%20A%201.06%201.06%200%200%200%2024.443%2014.304%20L%2025.851000000000003%2021.282%20C%2025.853%2021.417%2025.863000000000003%2021.558%2025.893000000000004%2021.712%20C%2026.187000000000005%2023.218%2025.312000000000005%2022.482%2024.786000000000005%2021.759%20L%2024.785000000000004%2021.758%20L%2020.367000000000004%2015.767%20A%201.062%201.062%200%200%200%2018.883000000000003%2015.543%20L%2018.769000000000002%2015.626999999999999%20A%201.06%201.06%200%200%200%2018.545%2017.11%20L%2019.694000000000003%2018.608999999999998%20L%2022.826000000000004%2022.903%20C%2022.835000000000004%2022.918%2022.840000000000003%2022.933%2022.850000000000005%2022.948%20C%2023.785000000000004%2024.331%2023.732000000000006%2024.905%2022.812000000000005%2023.85%20L%2019.412000000000006%2019.238%20C%2019.338000000000005%2019.137999999999998%2019.242000000000004%2019.075%2019.144000000000005%2019.009999999999998%20A%201.012%201.012%200%200%200%2017.977000000000004%2019.022%20L%2017.807000000000002%2019.148%20A%201.027%201.027%200%200%200%2017.590000000000003%2020.583%20L%2020.333000000000002%2024.302%20C%2020.852%2025.006999999999998%2021.307000000000002%2027.07%2021.886000000000003%2028.549%20C%2022.466%2030.028%2025.484%2034.432%2030.686000000000003%2032.391999999999996%20C%2035.34%2030.567999999999994%2034.738%2026.809999999999995%2034.764%2024.895999999999994%20Z'%20fill='%23f19020'%20id='07'%3e%3c/path%3e%3cg%20fill='%23B55005'%20id='08'%3e%3cpath%20d='M%2027.357999999999997%2014.153999999999998%20L%2028.965999999999998%2021.974999999999998%20A%200.34%200.34%200%200%201%2028.298999999999996%2022.112%20L%2026.690999999999995%2014.290999999999999%20L%2027.357999999999997%2014.153999999999998%20Z'%20fill='%23000000'%3e%3c/path%3e%3cpath%20d='M%2019.695999999999998%2018.608999999999998%20L%2023.822999999999997%2024.284999999999997%20A%200.341%200.341%200%200%201%2023.548999999999996%2024.826999999999998%20A%200.338%200.338%200%200%201%2023.273999999999997%2024.686999999999998%20L%2019.147%2019.010999999999996%20L%2019.695999999999998%2018.608999999999995%20Z'%20fill='%23000000'%3e%3c/path%3e%3cpath%20d='M%2017.456%2019.691%20L%2013.745%2025.591%20A%200.34%200.34%200%200%201%2013.274999999999999%2025.698%20A%200.341%200.341%200%200%201%2013.168%2025.228%20L%2016.878999999999998%2019.328000000000003%20L%2017.455999999999996%2019.691000000000003%20Z'%20fill='%23000000'%3e%3c/path%3e%3cpath%20d='M%2016.247%2015.969999999999999%20L%2011.242%2023.796%20A%200.34%200.34%200%200%201%2010.772%2023.899%20A%200.34%200.34%200%200%201%2010.668000000000001%2023.429000000000002%20L%2015.673000000000002%2015.603000000000002%20L%2016.247000000000003%2015.970000000000002%20Z'%20fill='%23000000'%3e%3c/path%3e%3cpath%20d='M%2013.997%2013.667%20L%208.482%2022.066%20A%200.339%200.339%200%200%201%208.011%2022.163999999999998%20A%200.34%200.34%200%200%201%207.912999999999999%2021.692999999999998%20L%2013.427999999999999%2013.293999999999999%20L%2013.997%2013.666999999999998%20Z'%20fill='%23000000'%3e%3c/path%3e%3cpath%20d='M%2017.592%2020.584%20C%2017.413999999999998%2020.342%2017.366999999999997%2019.973%2017.435%2019.678%20L%2016.756%2019.585%20C%2016.642%2020.073%2016.747%2020.584%2017.043%2020.988%20L%2018.358%2022.77%20L%2018.766000000000002%2022.175%20L%2017.592000000000002%2020.584%20Z'%20fill='%23000000'%3e%3c/path%3e%3c/g%3e%3c/svg%3e", o2 = "data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%2036%2036'%3e%3cpath%20d='M%2036%2018%20C%2036%2027.941000000000003%2027.941000000000003%2036%2018%2036%20C%208.06%2036%200%2027.941000000000003%200%2018%20C%200%208.06%208.06%200%2018%200%20C%2027.941000000000003%200%2036%208.06%2036%2018'%20fill='%23da2f47'%20id='00'%3e%3c/path%3e%3cpath%20d='M%2029%2012%20C%2028.779%2012%2023.549%2012.038%2020.293%2015.293%20C%2019.902%2015.684%2019.902%2016.316%2020.293%2016.707%20C%2020.488%2016.902%2020.744%2017%2021%2017%20C%2021.013%2017%2021.024%2016.993%2021.036%2016.993%20C%2021.020000000000003%2017.16%2021%2017.325999999999997%2021%2017.5%20C%2021%2019.434%2022.119%2021%2023.5%2021%20S%2026%2019.434%2026%2017.5%20C%2026%2016.371%2025.611%2015.376999999999999%2025.018%2014.737%20C%2027.076%2014.023%2028.972%2014%2029.002000000000002%2014%20C%2029.553%2013.998%2030.000000000000004%2013.55%2029.999000000000002%2012.998%20C%2029.998%2012.447%2029.552000000000003%2012%2029.000000000000004%2012%20Z'%20fill='%23292f33'%20id='01'%3e%3c/path%3e%3cpath%20d='M%2015.706999999999999%2015.293000000000001%20C%2012.452%2012.038%207.221%2012%207%2012%20C%206.448%2012%206.001%2012.447%206.001%2012.998%20C%206%2013.549999999999999%206.447%2013.998%206.9990000000000006%2014%20C%207.0280000000000005%2014%208.924000000000001%2014.023%2010.982000000000001%2014.737%20C%2010.389000000000001%2015.377%2010.000000000000002%2016.371%2010.000000000000002%2017.5%20C%2010.000000000000002%2019.434%2011.119000000000002%2021%2012.500000000000002%2021%20S%2015.000000000000002%2019.434%2015.000000000000002%2017.5%20C%2015.000000000000002%2017.326%2014.981000000000002%2017.16%2014.963000000000001%2016.993%20C%2014.976%2016.993%2014.988000000000001%2017%2015.000000000000002%2017%20C%2015.256000000000002%2017%2015.512000000000002%2016.902%2015.707000000000003%2016.707%20C%2016.098000000000003%2016.316000000000003%2016.098000000000003%2015.684000000000001%2015.707000000000003%2015.293000000000001%20Z'%20fill='%23292f33'%20id='02'%3e%3c/path%3e%3cpath%20d='M%2025.485%2029.879%20C%2025.44%2029.7%2024.317%2025.5%2018%2025.5%20C%2011.682%2025.5%2010.559999999999999%2029.7%2010.515%2029.878999999999998%20C%2010.46%2030.095999999999997%2010.558%2030.320999999999998%2010.752%2030.432999999999996%20C%2010.947000000000001%2030.541999999999998%2011.191%2030.511999999999997%2011.352%2030.355999999999995%20C%2011.371%2030.336999999999996%2013.306000000000001%2028.499999999999993%2018%2028.499999999999993%20S%2024.63%2030.336999999999993%2024.648%2030.354999999999993%20C%2024.744%2030.449999999999992%2024.872%2030.499999999999993%2025%2030.499999999999993%20C%2025.084%2030.499999999999993%2025.169%2030.478999999999992%2025.246%2030.435999999999993%20C%2025.442%2030.323999999999995%2025.54%2030.096999999999994%2025.485%2029.878999999999994%20Z'%20fill='%23292f33'%20id='03'%3e%3c/path%3e%3cpath%20d='M%2029.739%2033%20H%206.261%20C%205.017%2033%204%2031.983%204%2030.739%20V%2025%20C%204%2023.756%205.0169999999999995%2022.739%206.261%2022.739%20H%2029.739%20C%2030.983%2022.739%2032%2023.756%2032%2025%20V%2030.739%20C%2032%2031.983%2030.983%2033%2029.739%2033%20Z'%20fill='%23292f33'%20id='04'%3e%3c/path%3e%3cpath%20d='M%2026.375999999999998%2025.141%20C%2026.095999999999997%2025.141%2025.705999999999996%2025.369999999999997%2025.705999999999996%2025.743%20C%2025.705999999999996%2026.090999999999998%2025.876999999999995%2026.302999999999997%2026.239999999999995%2026.671999999999997%20L%2026.290999999999993%2026.723999999999997%20L%2026.353999999999992%2026.690999999999995%20C%2026.850999999999992%2026.430999999999994%2027.10299999999999%2026.137999999999995%2027.10299999999999%2025.821999999999996%20C%2027.103999999999992%2025.353999999999996%2026.72699999999999%2025.140999999999995%2026.37599999999999%2025.140999999999995%20Z%20M%2025.705%2027.851999999999997%20C%2025.276999999999997%2028.138999999999996%2024.840999999999998%2028.516999999999996%2024.840999999999998%2029.142999999999997%20C%2024.840999999999998%2029.798999999999996%2025.267999999999997%2030.221999999999998%2025.929999999999996%2030.221999999999998%20C%2026.481999999999996%2030.221999999999998%2026.838999999999995%2029.979999999999997%2027.204999999999995%2029.615999999999996%20L%2027.275999999999996%2029.546999999999997%20L%2025.775999999999996%2027.804%20L%2025.704999999999995%2027.851999999999997%20Z%20M%2029.151999999999997%2031.325999999999997%20C%2028.964999999999996%2031.325999999999997%2028.848%2031.272999999999996%2028.720999999999997%2031.129999999999995%20L%2027.996999999999996%2030.339999999999996%20L%2027.924999999999997%2030.405999999999995%20C%2027.223%2031.050999999999995%2026.616999999999997%2031.324999999999996%2025.900999999999996%2031.324999999999996%20C%2024.791999999999994%2031.324999999999996%2023.671999999999997%2030.692999999999994%2023.671999999999997%2029.280999999999995%20C%2023.671999999999997%2028.173999999999996%2024.538999999999998%2027.511999999999997%2025.055999999999997%2027.215999999999994%20L%2025.173%2027.148999999999994%20L%2025.078%2027.050999999999995%20C%2024.653%2026.605999999999995%2024.479%2026.237999999999996%2024.479%2025.781999999999996%20C%2024.479%2024.705%2025.462%2024.214999999999996%2026.375%2024.214999999999996%20C%2027.139%2024.214999999999996%2028.215%2024.667999999999996%2028.215%2025.672999999999995%20C%2028.215%2026.623999999999995%2027.332%2027.173999999999996%2027.062%2027.319999999999993%20L%2026.947000000000003%2027.381999999999994%20L%2028.108000000000004%2028.722999999999995%20L%2028.552000000000003%2028.186999999999994%20C%2028.799000000000003%2027.889999999999993%2028.943000000000005%2027.764999999999993%2029.198000000000004%2027.764999999999993%20C%2029.403000000000002%2027.764999999999993%2029.622000000000003%2027.948999999999995%2029.622000000000003%2028.287999999999993%20C%2029.622000000000003%2028.541999999999994%2029.370000000000005%2028.872999999999994%2029.123000000000005%2029.162999999999993%20L%2028.826000000000004%2029.497999999999994%20L%2029.532000000000004%2030.335999999999995%20C%2029.663000000000004%2030.491999999999994%2029.717000000000002%2030.574999999999996%2029.717000000000002%2030.763999999999996%20C%2029.718000000000004%2031.058999999999997%2029.448000000000004%2031.325999999999997%2029.152%2031.325999999999997%20Z%20M%2021.073999999999998%2024.918999999999997%20C%2021.073999999999998%2024.519999999999996%2021.368%2024.272999999999996%2021.758%2024.272999999999996%20C%2022.139%2024.272999999999996%2022.442999999999998%2024.529999999999998%2022.442999999999998%2024.918999999999997%20V%2028.578999999999997%20C%2022.442999999999998%2028.968999999999998%2022.139%2029.224999999999998%2021.758%2029.224999999999998%20C%2021.368%2029.224999999999998%2021.073999999999998%2028.977999999999998%2021.073999999999998%2028.578999999999997%20V%2024.918999999999997%20Z%20M%2021.017%2030.528%20C%2021.017%2030.119%2021.349999999999998%2029.785999999999998%2021.758%2029.785999999999998%20C%2022.166999999999998%2029.785999999999998%2022.5%2030.118999999999996%2022.5%2030.528%20C%2022.5%2030.936%2022.167%2031.269%2021.758%2031.269%20C%2021.349999999999998%2031.27%2021.017%2030.936999999999998%2021.017%2030.528%20Z%20M%2018.531%2029.738999999999997%20C%2018.531%2029.433999999999997%2018.349999999999998%2029.168999999999997%2018.035999999999998%2029.168999999999997%20S%2017.540999999999997%2029.434999999999995%2017.540999999999997%2029.738999999999997%20C%2017.540999999999997%2030.042999999999996%2017.721999999999998%2030.299999999999997%2018.035999999999998%2030.299999999999997%20S%2018.531%2030.042999999999996%2018.531%2029.738999999999997%20Z%20M%2016.573%2029.738999999999997%20C%2016.573%2028.912%2017.191%2028.198999999999998%2018.037%2028.198999999999998%20S%2019.500999999999998%2028.912%2019.500999999999998%2029.738999999999997%20C%2019.500999999999998%2030.564999999999998%2018.883%2031.269%2018.037%2031.269%20C%2017.189999999999998%2031.27%2016.573%2030.564999999999998%2016.573%2029.738999999999997%20Z%20M%2017.495%2024.519999999999996%20C%2017.619%2024.282999999999998%2017.714000000000002%2024.215999999999998%2017.933%2024.215999999999998%20C%2018.228%2024.215999999999998%2018.494%2024.452999999999996%2018.494%2024.747999999999998%20C%2018.494%2024.823999999999998%2018.494%2024.891%2018.418%2025.032999999999998%20L%2015.224%2031.011999999999997%20C%2015.081%2031.211%2015.024000000000001%2031.324999999999996%2014.796%2031.324999999999996%20C%2014.549%2031.324999999999996%2014.254%2031.087999999999997%2014.254%2030.802999999999997%20C%2014.254%2030.659999999999997%2014.311%2030.528%2014.349%2030.450999999999997%20L%2017.495%2024.519999999999996%20Z%20M%2015.185%2025.811999999999998%20C%2015.185%2025.508%2015.004000000000001%2025.241999999999997%2014.691%2025.241999999999997%20C%2014.377%2025.241999999999997%2014.196000000000002%2025.508999999999997%2014.196000000000002%2025.811999999999998%20C%2014.196000000000002%2026.116999999999997%2014.377%2026.374%2014.691%2026.374%20C%2015.004000000000001%2026.374%2015.185%2026.116999999999997%2015.185%2025.811999999999998%20Z%20M%2013.227%2025.811999999999998%20C%2013.227%2024.985%2013.845%2024.272%2014.691%2024.272%20S%2016.155%2024.985%2016.155%2025.811999999999998%20S%2015.537%2027.342999999999996%2014.691%2027.342999999999996%20C%2013.844000000000001%2027.343999999999998%2013.227%2026.639999999999997%2013.227%2025.811999999999998%20Z%20M%208.611%2028.311999999999998%20H%209.514000000000001%20L%209.666%2027.229%20H%208.763%20L%208.611%2028.311999999999998%20Z%20M%207.841%2027.229%20H%207.023000000000001%20C%206.7090000000000005%2027.229%206.566000000000001%2027%206.566000000000001%2026.772%20S%206.7090000000000005%2026.316%207.023000000000001%2026.316%20H%207.973000000000001%20L%208.182%2024.785999999999998%20C%208.229000000000001%2024.444%208.372%2024.33%208.657%2024.33%20C%208.885%2024.33%209.095%2024.480999999999998%209.095%2024.709999999999997%20C%209.095%2024.852999999999998%209.095%2024.785999999999998%209.076%2024.938999999999997%20L%208.886000000000001%2026.316999999999997%20H%209.799000000000001%20L%2010.008000000000001%2024.786999999999995%20C%2010.055000000000001%2024.444999999999997%2010.198%2024.330999999999996%2010.483%2024.330999999999996%20C%2010.711%2024.330999999999996%2010.921000000000001%2024.481999999999996%2010.921000000000001%2024.710999999999995%20C%2010.921000000000001%2024.853999999999996%2010.921000000000001%2024.786999999999995%2010.902000000000001%2024.939999999999994%20L%2010.711%2026.317999999999994%20H%2011.529%20C%2011.843%2026.317999999999994%2011.985%2026.546999999999993%2011.985%2026.773999999999994%20C%2011.985%2027.001999999999995%2011.841999999999999%2027.230999999999995%2011.529%2027.230999999999995%20H%2010.578%20L%2010.426%2028.313999999999993%20H%2011.244%20C%2011.558%2028.313999999999993%2011.7%2028.542999999999992%2011.7%2028.770999999999994%20S%2011.556999999999999%2029.226999999999993%2011.244%2029.226999999999993%20H%2010.293%20L%2010.084%2030.756999999999994%20C%2010.036%2031.099999999999994%209.892999999999999%2031.212999999999994%209.608%2031.212999999999994%20C%209.38%2031.212999999999994%209.17%2031.061999999999994%209.17%2030.832999999999995%20C%209.17%2030.689999999999994%209.17%2030.756999999999994%209.189%2030.603999999999996%20L%209.38%2029.225999999999996%20H%208.468%20L%208.259%2030.755999999999997%20C%208.211%2031.098999999999997%208.069%2031.211999999999996%207.783%2031.211999999999996%20C%207.555000000000001%2031.211999999999996%207.345000000000001%2031.060999999999996%207.345000000000001%2030.831999999999997%20C%207.345000000000001%2030.688999999999997%207.345000000000001%2030.755999999999997%207.364000000000001%2030.602999999999998%20L%207.554000000000001%2029.224999999999998%20H%206.738000000000001%20C%206.425000000000002%2029.224999999999998%206.282000000000001%2028.996%206.282000000000001%2028.769%20C%206.282000000000001%2028.54%206.425000000000001%2028.311999999999998%206.738000000000001%2028.311999999999998%20H%207.689000000000001%20L%207.841000000000001%2027.229%20Z'%20fill='%23ffffff'%20id='05'%3e%3c/path%3e%3c/svg%3e", h2 = "data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%2036%2036'%3e%3ccircle%20fill='%23FFCC4D'%20cx='18'%20cy='18'%20r='18'%20id='00'%3e%3c/circle%3e%3cellipse%20fill='%23664500'%20cx='12.5'%20cy='16.5'%20rx='2.5'%20ry='3.5'%20id='01'%3e%3c/ellipse%3e%3cellipse%20fill='%23664500'%20cx='23.5'%20cy='16.5'%20rx='2.5'%20ry='3.5'%20id='02'%3e%3c/ellipse%3e%3cpath%20d='M%207%2011.994%20C%206.448%2011.994%206%2011.546%206%2010.994%20S%206.448%209.994%207%209.994%20C%2012.083%209.994%2012.996%206.874%2013.033000000000001%206.741%20C%2013.178%206.212999999999999%2013.723%205.893%2014.252%206.032%20C%2014.782%206.171%2015.103000000000002%206.705%2014.97%207.237%20C%2014.921000000000001%207.431%2013.704%2011.994%207.000000000000001%2011.994%20Z'%20fill='%23664500'%20id='03'%3e%3c/path%3e%3cpath%20d='M%2029%2012%20C%2023.445999999999998%2012%2021.198%207.633%2021.105%207.447%20C%2020.858%206.953%2021.058%206.352%2021.552%206.105%20C%2022.044%205.8580000000000005%2022.644%206.057%2022.892%206.548%20C%2022.967%206.694%2024.713%2010%2029%2010%20C%2029.553%2010%2030%2010.448%2030%2011%20C%2030%2011.553%2029.553%2012%2029%2012%20Z'%20fill='%23664500'%20id='04'%3e%3c/path%3e%3cpath%20d='M%2035.968%2017.068%20L%2031.963000000000005%2017.881%20L%2015.776000000000003%2028.389%20L%2022.894000000000005%2029.352%20L%2034.57900000000001%2022.141%20C%2035.28200000000001%2021.709999999999997%2035.57300000000001%2021.305999999999997%2035.77700000000001%2020.394%20S%2035.96800000000001%2017.067999999999998%2035.96800000000001%2017.067999999999998%20Z'%20fill='%23ffac33'%20id='05'%3e%3c/path%3e%3cpath%20d='M%2023.485%2029.379%20C%2023.474%2029.335%2022.34%2026.5%2018%2026.5%20S%2012.526%2029.335%2012.515%2029.379%20C%2012.462%2029.592000000000002%2012.559000000000001%2029.810000000000002%2012.747%2029.923000000000002%20C%2012.935%2030.035%2013.18%2030.009%2013.343%2029.863000000000003%20C%2013.352%2029.855%2014.356%2029%2018%2029%20C%2021.59%2029%2022.617%2029.83%2022.656%2029.863%20C%2022.750999999999998%2029.953%2022.875%2030%2023%2030%20C%2023.084%2030%2023.169%2029.979%2023.246%2029.936%20C%2023.442%2029.824%2023.54%2029.597%2023.485%2029.379%20Z'%20fill='%23664500'%20id='06'%3e%3c/path%3e%3cpath%20d='M%2035.474%2015.729%20C%2034.644999999999996%2014.625%2033.077%2014.401%2031.972999999999995%2015.229%20L%2014.767%2028.137%20C%2015.413%2027.895%2016.277%2027.693%2017.381999999999998%2027.615000000000002%20C%2017.637999999999998%2027.597%2020.041999999999998%2026.988000000000003%2020.041999999999998%2026.988000000000003%20L%2021.334999999999997%2028.024000000000004%20S%2022.246%2028.391000000000005%2022.531999999999996%2028.563000000000006%20L%2034.976%2019.228000000000005%20C%2036.079%2018.401000000000003%2036.302%2016.833000000000006%2035.474%2015.729000000000005%20Z'%20fill='%23ccd6dd'%20id='07'%3e%3c/path%3e%3cpath%20d='M%2028.686%2020.87%20C%2028.238%2020.274%2027.899%2019.725%2027.303%2020.172%20L%2017.381%2027.615000000000002%20C%2017.637%2027.597%2017.881%2027.573%2018.164%2027.571%20C%2019.524%2027.562%2020.564%2027.766000000000002%2021.334000000000003%2028.023000000000003%20L%2028.922000000000004%2022.331000000000003%20C%2029.518000000000004%2021.884000000000004%2029.133000000000003%2021.467000000000002%2028.686000000000003%2020.870000000000005%20Z'%20fill='%23da2f47'%20id='08'%3e%3c/path%3e%3cpath%20d='M%2029.565%2017.029%20L%2030.8%2018.627%20L%2031.54%2018.032%20L%2030.343999999999998%2016.445%20Z'%20fill='%2367757f'%20id='09'%3e%3c/path%3e%3cpath%20d='M%2027.425%2018.647%20L%2028.66%2020.244999999999997%20L%2029.4%2019.65%20L%2028.203999999999997%2018.063%20Z'%20fill='%2367757f'%20id='10'%3e%3c/path%3e%3cpath%20d='M%2025.187%2020.288%20L%2026.422%2021.885%20L%2027.163%2021.291%20L%2025.966%2019.704%20Z'%20fill='%2367757f'%20id='11'%3e%3c/path%3e%3cpath%20d='M%2023.006%2021.948%20L%2024.240000000000002%2023.546%20L%2024.981%2022.951%20L%2023.784000000000002%2021.364%20Z'%20fill='%2367757f'%20id='12'%3e%3c/path%3e%3cpath%20d='M%2020.822%2023.567%20L%2022.057%2025.165%20L%2022.798%2024.57%20L%2021.601%2022.983%20Z'%20fill='%2367757f'%20id='13'%3e%3c/path%3e%3cpath%20d='M%2018.599%2025.228%20L%2019.833%2026.826%20L%2020.573999999999998%2026.231%20L%2019.377%2024.644000000000002%20Z'%20fill='%2367757f'%20id='14'%3e%3c/path%3e%3cpath%20d='M%2022.531%2028.563%20L%2023.336%2029.084999999999997%20S%2023.139%2028.723%2022.81%2028.358999999999998%20L%2022.531%2028.563%20Z'%20fill='%23452e04'%20id='15'%3e%3c/path%3e%3c/svg%3e", C2 = "data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%2036%2036'%3e%3cpath%20d='M%2036%2018%20C%2036%2027.941000000000003%2027.941000000000003%2036%2018%2036%20S%200%2027.941%200%2018%20S%208.059%200%2018%200%20S%2036%208.059%2036%2018'%20fill='%23ffd983'%20id='00'%3e%3c/path%3e%3cg%20fill='%23FFCC4D'%20id='01'%3e%3ccircle%20cx='9.5'%20cy='7.5'%20r='3.5'%3e%3c/circle%3e%3ccircle%20cx='24.5'%20cy='28.5'%20r='3.5'%3e%3c/circle%3e%3ccircle%20cx='22'%20cy='5'%20r='2'%3e%3c/circle%3e%3ccircle%20cx='3'%20cy='18'%20r='1'%3e%3c/circle%3e%3ccircle%20cx='30'%20cy='9'%20r='1'%3e%3c/circle%3e%3ccircle%20cx='16'%20cy='31'%20r='1'%3e%3c/circle%3e%3ccircle%20cx='32'%20cy='19'%20r='2'%3e%3c/circle%3e%3ccircle%20cx='6'%20cy='26'%20r='2'%3e%3c/circle%3e%3c/g%3e%3cpath%20d='M%2018%2024.904%20C%2011%2024.904%209%2022.286%209%2023.523%20C%209%2024.762%2013%2028%2018%2028%20S%2027%2024.762%2027%2023.523%20C%2027%2022.286%2025%2024.904%2018%2024.904'%20fill='%23292f33'%20id='02'%3e%3c/path%3e%3cpath%20d='M%2027%2015%20C%2027%2016.657%2025.656%2018%2024%2018%20S%2021%2016.657%2021%2015%20S%2022.344%2012%2024%2012%20S%2027%2013.343%2027%2015'%20fill='%23292f33'%20id='03'%3e%3c/path%3e%3cpath%20d='M%2015%2015%20C%2015%2016.657%2013.656%2018%2012%2018%20S%209%2016.657%209%2015%20S%2010.344%2012%2012%2012%20S%2015%2013.343%2015%2015'%20fill='%23292f33'%20id='04'%3e%3c/path%3e%3c/svg%3e", f2 = "data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%2036%2036'%3e%3cpath%20d='M%2036%2011%20C%2036%209.896%2035.104%209%2034%209%20S%2032%209.896%2032%2011%20C%2032%2011%2031.989%2014.285%2029%2014.894%20V%2012%20C%2029%205.925%2024.075%201%2018%201%20S%207%205.925%207%2012%20V%2015.237%20C%201.778%2016.806%200%2023.231%200%2027%20C%200%2028.104%200.896%2029%202%2029%20S%204%2028.104%204%2027%20C%204%2027%204.002%2023.46%207.336%2023.042%20C%207.838%2027.883%208.954%2033%2011%2033%20H%2012%20C%2016%2033%2015%2035%2019%2035%20S%2022%2033%2025%2033%20S%2027.395%2035%2031%2035%20C%2032.657%2035%2034%2033.657%2034%2032%20C%2034%2031.325%2031.726%2027.006%2030.245%2022.732%20C%2035.981%2021.348%2036%2014.58%2036%2011%20Z'%20fill='%23e1e8ed'%20id='00'%3e%3c/path%3e%3ccircle%20fill='%23292F33'%20cx='13'%20cy='12'%20r='2'%20id='01'%3e%3c/circle%3e%3ccircle%20fill='%23292F33'%20cx='23'%20cy='12'%20r='4'%20id='02'%3e%3c/circle%3e%3ccircle%20fill='%239AAAB4'%20cx='23'%20cy='13'%20r='2'%20id='03'%3e%3c/circle%3e%3cpath%20d='M%2022.192%2019.491%20C%2024.842%2021.478%2025.783%2024.701999999999998%2024.292%2026.689999999999998%20C%2022.801000000000002%2028.677999999999997%2019.443%2028.677999999999997%2016.792%2026.689999999999998%20C%2014.142000000000001%2024.702999999999996%2013.201%2021.479%2014.692000000000002%2019.491%20C%2016.184%2017.502%2019.541000000000004%2017.503%2022.192%2019.491%20Z'%20fill='%23292f33'%20id='04'%3e%3c/path%3e%3c/svg%3e", d2 = "data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%2036%2036'%3e%3ccircle%20fill='%23EA596E'%20cx='18'%20cy='18'%20r='18'%20id='00'%3e%3c/circle%3e%3cpath%20d='%20M%207%2012%20C%206.448%2012%206%2011.552%206%2011%20S%206.448%2010%207%2010%20C%2012.083%2010%2012.996%206.88%2013.033000000000001%206.747%20C%2013.178%206.218999999999999%2013.725000000000001%205.899%2014.252%206.038%20C%2014.782%206.1770000000000005%2015.103000000000002%206.711%2014.97%207.243%20C%2014.921%207.437%2013.704%2012%207%2012%20Z'%20fill='%23292f33'%20id='01'%3e%3c/path%3e%3cpath%20d='%20M%2029%2012%20C%2023.445999999999998%2012%2021.198%207.633%2021.105%207.447%20C%2020.858%206.953%2021.058%206.352%2021.552%206.105%20C%2022.044999999999998%205.8580000000000005%2022.644%206.057%2022.892%206.548%20C%2022.967%206.694%2024.713%2010%2029%2010%20C%2029.553%2010%2030%2010.448%2030%2011%20S%2029.553%2012%2029%2012%20Z'%20fill='%23292f33'%20id='02'%3e%3c/path%3e%3cpath%20d='M%2026.125%2029.261%20C%2026.097%2029.261%2026.068%2029.258%2026.041%2029.250999999999998%20C%2017.617%2027.308999999999997%2010.045%2029.229%209.969000000000001%2029.249%20C%209.858%2029.276999999999997%209.738000000000001%2029.253999999999998%209.645000000000001%2029.183%20C%209.554000000000002%2029.111%209.500000000000002%2029.002%209.500000000000002%2028.886%20C%209.500000000000002%2025.708%2013.213000000000001%2022.014%2018%2022.014%20S%2026.5%2025.708%2026.5%2028.886%20C%2026.5%2029%2026.448%2029.108999999999998%2026.358%2029.18%20C%2026.291%2029.232%2026.209%2029.261%2026.125%2029.261%20Z'%20fill='%23292f33'%20id='03'%3e%3c/path%3e%3cellipse%20fill='%23292F33'%20cx='12'%20cy='16.5'%20rx='2.5'%20ry='3.5'%20id='04'%3e%3c/ellipse%3e%3cellipse%20fill='%23292F33'%20cx='24'%20cy='16.5'%20rx='2.5'%20ry='3.5'%20id='05'%3e%3c/ellipse%3e%3cpath%20d='M%2018.629%2023.079%20V%2023.906%20L%2017.538%2023.907%20V%2023.07%20C%2015.261%2023.197%2013.347000000000001%2024.232%2012.083%2025.586%20L%2012.091%2026.046999999999997%20C%2012.177%2028.978999999999996%2014.171%2031.848999999999997%2018.083%2031.848999999999997%20C%2021.982%2031.848999999999997%2023.974999999999998%2028.997999999999998%2024.073999999999998%2026.075999999999997%20L%2024.083%2025.791999999999998%20C%2022.854%2024.377%2020.938%2023.255%2018.628999999999998%2023.078999999999997%20Z'%20fill='%23f4abba'%20id='06'%3e%3c/path%3e%3cpath%20d='M%2018%2023.049%20C%2017.843%2023.049%2017.692%2023.063%2017.538%2023.070999999999998%20V%2027.517999999999997%20C%2017.538%2027.818999999999996%2017.782%2028.063%2018.083000000000002%2028.063%20S%2018.628000000000004%2027.819%2018.628000000000004%2027.517999999999997%20V%2023.08%20C%2018.421000000000003%2023.063%2018.214000000000002%2023.049%2018.000000000000004%2023.049%20Z'%20fill='%23ea596e'%20id='07'%3e%3c/path%3e%3cpath%20d='%20M%208.573%208.438%20C%208.573%2010.751000000000001%206.698%2012.626000000000001%204.385000000000001%2012.626000000000001%20C%202.0720000000000005%2012.626000000000001%200.19700000000000095%2010.751000000000001%200.19700000000000095%208.438000000000002%20S%203.547%200.063%204.385%200.063%20S%208.573%206.125%208.573%208.438%20Z'%20fill='%235dadec'%20id='08'%3e%3c/path%3e%3cpath%20d='M%2035.906%2012.062%20C%2035.906%2014.876%2033.626%2017.156%2030.811999999999998%2017.156%20C%2027.997999999999998%2017.156%2025.717999999999996%2014.876%2025.717999999999996%2012.061999999999998%20S%2029.792999999999996%201.873999999999997%2030.811999999999998%201.873999999999997%20S%2035.906%209.248999999999997%2035.906%2012.061999999999998%20Z'%20fill='%235dadec'%20id='09'%3e%3c/path%3e%3c/svg%3e", u2 = "data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%2036%2036'%3e%3cpath%20d='M%2032.664%208.519%20C%2029.364%205.134%2023.42%204.75%2018%204.75%20S%206.636%205.134%203.336%208.519%20C%200.582%2011.344%200%2015.751%200%2019.791%20C%200%2025.054000000000002%201.982%2031.102%206.357%2034.035%20C%209.364%2036.051%2013.95%2035.871%2018%2035.871%20S%2026.636%2036.051%2029.643%2034.035000000000004%20C%2034.018%2031.101%2036%2025.054%2036%2019.791%20C%2036%2015.751000000000001%2035.418%2011.344000000000001%2032.664%208.519%20Z'%20fill='%23f4900c'%20id='00'%3e%3c/path%3e%3cpath%20d='M%2020.783%205.444%20C%2020.852%205.864%2020.561%206.208%2020.136000000000003%206.208%20H%2015.685000000000002%20C%2015.259000000000002%206.208%2014.968000000000002%205.864%2015.038000000000002%205.444%20L%2015.783000000000001%200.9719999999999995%20C%2015.853000000000002%200.5509999999999995%2016.259%200.20799999999999952%2016.685000000000002%200.20799999999999952%20H%2019.136000000000003%20C%2019.562%200.20799999999999952%2019.968000000000004%200.5519999999999995%2020.037000000000003%200.9719999999999995%20L%2020.783%205.444%20Z'%20fill='%233f7123'%20id='01'%3e%3c/path%3e%3cpath%20d='%20M%208.023999999999997%2015.421%20C%207.894999999999998%2017.548%208.807999999999998%2019.227%2011.228999999999997%2019.374%20C%2013.648999999999997%2019.52%2014.757999999999997%2017.962999999999997%2014.886999999999997%2015.837%20S%2013.654999999999998%2010.716999999999999%2011.759999999999998%2010.603%20S%208.151999999999997%2013.294%208.023999999999997%2015.421%20Z'%20fill='%23642116'%20id='02'%3e%3c/path%3e%3cpath%20d='%20M%2027.976%2015.421%20C%2028.105%2017.548%2027.192%2019.227%2024.771%2019.374%20C%2022.351%2019.52%2021.242%2017.962999999999997%2021.113%2015.837%20S%2022.345%2010.716999999999999%2024.24%2010.603%20C%2026.136%2010.487%2027.848%2013.294%2027.976%2015.421%20Z'%20fill='%23642116'%20id='03'%3e%3c/path%3e%3cpath%20d='%20M%2030.162%2024.351%20C%2030.116999999999997%2024.276%2030.035999999999998%2024.23%2029.948%2024.23%20H%2029.107%20C%2029.038999999999998%2024.23%2028.973%2024.258%2028.926%2024.307000000000002%20L%2026.695%2026.641000000000002%20L%2023.997%2024.472%20C%2023.946%2024.431%2023.88%2024.414%2023.812%2024.419%20C%2023.746000000000002%2024.426000000000002%2023.685000000000002%2024.46%2023.644000000000002%2024.513%20L%2021.236%2027.575000000000003%20L%2018.182000000000002%2024.309000000000005%20C%2018.169%2024.295000000000005%2018.149%2024.292000000000005%2018.134000000000004%2024.281000000000006%20C%2018.119000000000003%2024.271000000000004%2018.109000000000005%2024.254000000000005%2018.091000000000005%2024.247000000000007%20C%2018.085000000000004%2024.245000000000008%2018.078000000000003%2024.247000000000007%2018.072000000000006%2024.245000000000008%20C%2018.048000000000005%2024.238000000000007%2018.025000000000006%2024.24000000000001%2018.000000000000007%2024.24000000000001%20C%2017.97500000000001%2024.24000000000001%2017.95200000000001%2024.23800000000001%2017.928000000000008%2024.24600000000001%20C%2017.922000000000008%2024.248000000000008%2017.915000000000006%2024.245000000000008%2017.90800000000001%2024.248000000000008%20C%2017.890000000000008%2024.25500000000001%2017.881000000000007%2024.27200000000001%2017.86500000000001%2024.282000000000007%20C%2017.84900000000001%2024.29200000000001%2017.83000000000001%2024.29500000000001%2017.81700000000001%2024.309000000000008%20L%2014.76400000000001%2027.57500000000001%20L%2012.355000000000011%2024.51300000000001%20C%2012.31400000000001%2024.460000000000008%2012.25300000000001%2024.42600000000001%2012.187000000000012%2024.419000000000008%20C%2012.121000000000011%2024.413000000000007%2012.054000000000013%2024.431000000000008%2012.002000000000011%2024.47200000000001%20L%209.304000000000011%2026.64100000000001%20L%207.0740000000000105%2024.30700000000001%20C%207.027000000000011%2024.25800000000001%206.96200000000001%2024.230000000000008%206.8930000000000105%2024.230000000000008%20H%206.05200000000001%20C%205.9650000000000105%2024.230000000000008%205.883000000000011%2024.276000000000007%205.83800000000001%2024.351000000000006%20C%205.79300000000001%2024.426000000000005%205.79000000000001%2024.519000000000005%205.83100000000001%2024.596000000000007%20L%208.58500000000001%2029.81500000000001%20C%208.61900000000001%2029.87900000000001%208.67800000000001%2029.925000000000008%208.74900000000001%2029.942000000000007%20S%208.894000000000009%2029.944000000000006%208.952000000000009%2029.902000000000008%20L%2010.986000000000008%2028.44400000000001%20L%2013.990000000000007%2032.07700000000001%20C%2014.033000000000007%2032.13000000000001%2014.096000000000007%2032.16200000000001%2014.164000000000007%2032.167000000000016%20L%2014.183000000000007%2032.16800000000001%20C%2014.245000000000006%2032.16800000000001%2014.304000000000007%2032.146000000000015%2014.350000000000007%2032.10500000000001%20L%2018%2028.836%20L%2021.65%2032.104%20C%2021.695999999999998%2032.144999999999996%2021.755%2032.167%2021.817%2032.167%20L%2021.836%2032.166000000000004%20C%2021.904%2032.161%2021.967%2032.129000000000005%2022.009999999999998%2032.076%20L%2025.014999999999997%2028.443%20L%2027.048999999999996%2029.901%20C%2027.108999999999995%2029.944%2027.181999999999995%2029.961%2027.251999999999995%2029.941%20C%2027.321999999999996%2029.924%2027.381999999999994%2029.878999999999998%2027.414999999999996%2029.814999999999998%20L%2030.169999999999995%2024.595999999999997%20C%2030.209999999999994%2024.518999999999995%2030.207999999999995%2024.425999999999995%2030.161999999999995%2024.350999999999996%20Z'%20fill='%23642116'%20id='04'%3e%3c/path%3e%3cpath%20d='M%2020.654%2021.159%20L%2019.056%2018.563%20C%2018.765%2018.020999999999997%2018.383000000000003%2017.75%2017.999000000000002%2017.746%20C%2017.616000000000003%2017.75%2017.233000000000004%2018.020999999999997%2016.942000000000004%2018.563%20L%2015.344000000000003%2021.159%20C%2014.757000000000003%2022.252%2016.217000000000002%2022.875%2017.998000000000005%2022.875%20S%2021.241000000000003%2022.251%2020.654000000000003%2021.159%20Z'%20fill='%23642116'%20id='05'%3e%3c/path%3e%3c/svg%3e", p2 = "data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%2036%2036'%3e%3cpath%20d='M%2036%2018%20C%2036%2027.941000000000003%2027.941000000000003%2036%2018%2036%20C%208.06%2036%200%2027.941000000000003%200%2018%20C%200%208.06%208.06%200%2018%200%20C%2027.941000000000003%200%2036%208.06%2036%2018'%20fill='%23ffcc4d'%20id='00'%3e%3c/path%3e%3cpath%20d='%20M%2018%2022%20C%2014.376999999999999%2022%2011.972999999999999%2021.578%209%2021%20C%208.321%2020.869%207%2021%207%2023%20C%207%2027%2011.594999999999999%2032%2018%2032%20C%2024.404%2032%2029%2027%2029%2023%20C%2029%2021%2027.679%2020.868%2027%2021%20C%2024.027%2021.578%2021.623%2022%2018%2022%20Z'%20fill='%23664500'%20id='01'%3e%3c/path%3e%3cpath%20d='%20M%205%2016%20C%204.876%2016%204.751%2015.977%204.629%2015.928%20C%204.116%2015.723%203.8669999999999995%2015.141%204.071999999999999%2014.628%20C%206.247999999999999%209.187999999999999%2011.578%208.065000000000001%2011.803999999999998%208.02%20C%2012.346999999999998%207.914%2012.871999999999998%208.263%2012.980999999999998%208.804%20C%2013.088999999999999%209.344000000000001%2012.738999999999997%209.870000000000001%2012.199999999999998%209.98%20C%2012.014999999999997%2010.018%207.693999999999997%2010.96%205.928999999999998%2015.371%20C%205.771999999999998%2015.762%205.395999999999997%2016%204.999999999999997%2016%20Z'%20fill='%23664500'%20id='02'%3e%3c/path%3e%3cpath%20d='%20M%2031%2016%20C%2030.604%2016%2030.228%2015.762%2030.071%2015.371%20C%2028.293000000000003%2010.926%2023.848000000000003%209.99%2023.803%209.98%20C%2023.262%209.872%2022.91%209.345%2023.019000000000002%208.803%20C%2023.127000000000002%208.261000000000001%2023.654000000000003%207.912000000000001%2024.196%208.019%20C%2024.422%208.064%2029.752000000000002%209.187%2031.928%2014.626999999999999%20C%2032.133%2015.139999999999999%2031.883%2015.722%2031.37%2015.927%20C%2031.25%2015.977%2031.124000000000002%2016%2031%2016%20Z'%20fill='%23664500'%20id='03'%3e%3c/path%3e%3cpath%20d='%20M%2016.457%2017.797%20C%2016.397000000000002%2017.662%2014.958%2014.5%2012%2014.5%20C%209.043%2014.5%207.603%2017.662%207.543%2017.797%20C%207.4510000000000005%2018.004%207.511%2018.246000000000002%207.687%2018.388%20C%207.863%2018.53%208.114%2018.535%208.297%2018.402%20C%208.31%2018.393%209.559000000000001%2017.5%2012%2017.5%20C%2014.426%2017.5%2015.674%2018.381%2015.702%2018.401%20C%2015.79%2018.467%2015.896%2018.5%2016%2018.5%20C%2016.11%2018.5%2016.221%2018.463%2016.312%2018.391%20C%2016.490000000000002%2018.249%2016.549%2018.005%2016.457%2017.796999999999997%20Z'%20fill='%23664500'%20id='04'%3e%3c/path%3e%3cpath%20d='M%2028.457%2017.797%20C%2028.397000000000002%2017.662%2026.958000000000002%2014.5%2024%2014.5%20C%2021.043%2014.5%2019.603%2017.662%2019.543%2017.797%20C%2019.451%2018.004%2019.511%2018.246000000000002%2019.688%2018.388%20C%2019.863%2018.53%2020.113999999999997%2018.535%2020.298%2018.402%20C%2020.31%2018.393%2021.56%2017.5%2024%2017.5%20C%2026.426000000000002%2017.5%2027.674%2018.381%2027.701999999999998%2018.401%20C%2027.79%2018.467%2027.895999999999997%2018.5%2027.999999999999996%2018.5%20C%2028.109999999999996%2018.5%2028.220999999999997%2018.463%2028.311999999999998%2018.391%20C%2028.488999999999997%2018.249%2028.549999999999997%2018.005%2028.456999999999997%2017.796999999999997%20Z'%20fill='%23664500'%20id='05'%3e%3c/path%3e%3cpath%20d='M%209%2023%20S%2012%2024%2018%2024%20S%2027%2023%2027%2023%20S%2025%2027%2018%2027%20S%209%2023%209%2023%20Z'%20fill='%23ffffff'%20id='06'%3e%3c/path%3e%3cpath%20d='%20M%2025.133%2028.229%20C%2025.813%2030.906%2028.532999999999998%2032.524%2031.21%2031.844%20C%2033.887%2031.165000000000003%2035.506%2028.445%2034.826%2025.768%20C%2034.146%2023.091%2028.488%2017.060000000000002%2027.518%2017.306%20C%2026.55%2017.553%2024.454%2025.553%2025.133000000000003%2028.229%20Z'%20fill='%235dadec'%20id='07'%3e%3c/path%3e%3cpath%20d='M%2010.847%2028.229%20C%2010.167%2030.906%207.446999999999999%2032.524%204.77%2031.844%20C%202.0939999999999994%2031.165000000000003%200.47499999999999964%2028.445%201.1539999999999995%2025.768%20C%201.8329999999999995%2023.091%207.491%2017.060000000000002%208.461%2017.306%20C%209.431000000000001%2017.553%2011.526%2025.553%2010.847000000000001%2028.229%20Z'%20fill='%235dadec'%20id='08'%3e%3c/path%3e%3c/svg%3e", m2 = "data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%2036%2036'%20xml:space='preserve'%3e%3cpath%20d='M%2035.07%2032.558%20A%201.92%201.92%200%200%200%2035.906%2030.317%20C%2035.647%2029.507%2034.836%2029%2033.985%2029%20H%2032%20A%201%201%200%200%201%2032%2027%20H%2033.5%20A%201.5%201.5%200%201%200%2033.46%2024%20C%2032.660000000000004%2024.021%2032%2023.377%2032%2022.576999999999998%20V%2022.573999999999998%20C%2032%2022.281%2032.06%2021.996%2032.176%2021.726999999999997%20A%2015.294%2015.294%200%200%200%2033.47%2014.535999999999998%20C%2032.978%206.66%2026.411%200.269%2018.524%200.009%20C%209.724%20-0.281%202.5%206.766%202.5%2015.5%20C%202.5%2017.871%203.048%2020.109%204%2022.119%20V%2023.999%20C%204%2025.084999999999997%203.135%2026.02%202.049%2025.999%20A%202%202%200%200%200%200.015000000000000124%2028.165999999999997%20C%200.101%2029.225%201.069%2030%202.133%2030%20H%2010.172%20A%201.17%201.17%200%200%201%2011%2032%20L%207.970000000000001%2032.757%20A%201.281%201.281%200%200%200%207.970000000000001%2035.242%20C%209.902000000000001%2035.724999999999994%2011.884%2035.979%2013.875%2035.998%20L%2016.587%2036.024%20C%2017.993%2036.038000000000004%2019.39%2035.714%2020.616%2035.024%20A%208.289%208.289%200%200%201%2026.258%2034.111000000000004%20C%2029.285999999999998%2034.699000000000005%2032.425%2034.145%2035.07%2032.55800000000001%20Z'%20fill='%23ffcc4d'%20id='00'%3e%3c/path%3e%3cpath%20d='M%2018.736%2024.003%20C%2017.982%2024.003%2017.232%2023.925%2016.492%2023.769%20C%2013.799000000000001%2023.197999999999997%2011.489%2021.653999999999996%2010.154%2019.532999999999998%20A%201%201%200%200%201%2011.846%2018.467%20C%2012.879%2020.108999999999998%2014.771%2021.358999999999998%2016.906%2021.811999999999998%20C%2018.673%2022.186999999999998%2021.412999999999997%2022.205%2024.442%2020.169999999999998%20A%201%201%200%200%201%2025.558%2021.83%20C%2023.429%2023.259999999999998%2021.069%2024.003%2018.736%2024.003%20Z'%20fill='%2365471b'%20id='01'%3e%3c/path%3e%3cellipse%20fill='%2365471B'%20cx='14'%20cy='12'%20rx='2'%20ry='3'%20id='02'%3e%3c/ellipse%3e%3cellipse%20fill='%2365471B'%20cx='23'%20cy='14'%20rx='2'%20ry='3'%20id='03'%3e%3c/ellipse%3e%3c/svg%3e", g2 = "data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%2036%2036'%3e%3cpath%20d='M%2018.985%2035%20H%2017.015%20C%2010.515%2035%204.212%2030.018%204.212%2023.044%20C%204.212%2019.059%205.689%2017.066000000000003%205.689%2017.066000000000003%20S%205.197%2015.073000000000002%205.197%2013.081000000000003%20C%205.197%207.103%2011.5%202.121%2018%202.121%20C%2024.5%202.121%2030.803%208.099%2030.803%2013.081000000000001%20C%2030.803%2015.074000000000002%2030.311%2017.066000000000003%2030.311%2017.066000000000003%20S%2031.788%2019.059%2031.788%2023.044000000000004%20C%2031.788%2030.018%2025.485%2035%2018.985%2035%20Z'%20fill='%23bf6952'%20id='00'%3e%3c/path%3e%3cpath%20d='M%2029.667%2015.379%20C%2029.667%2011.572%2026.580000000000002%208.485%2022.773000000000003%208.485%20C%2020.919000000000004%208.485%2019.239000000000004%209.221%2018.000000000000004%2010.411%20C%2016.761000000000003%209.219999999999999%2015.081000000000003%208.485%2013.227000000000004%208.485%20C%209.420000000000003%208.485%206.333000000000004%2011.572%206.333000000000004%2015.379%20C%206.333000000000004%2017.688%207.473000000000003%2019.727%209.215000000000003%2020.978%20C%208.726000000000003%2022.19%208.454000000000004%2023.524%208.454000000000004%2024.924000000000003%20C%208.454000000000004%2030.489000000000004%2012.728000000000005%2033.93900000000001%2017.999000000000002%2033.93900000000001%20S%2027.544000000000004%2030.489000000000008%2027.544000000000004%2024.924000000000007%20C%2027.544000000000004%2023.523000000000007%2027.272000000000006%2022.190000000000005%2026.783000000000005%2020.978000000000005%20C%2028.527000000000005%2019.727000000000004%2029.667000000000005%2017.688000000000006%2029.667000000000005%2015.379000000000005%20Z'%20fill='%23d79e84'%20id='01'%3e%3c/path%3e%3cellipse%20fill='%23292F33'%20cx='13'%20cy='17'%20rx='2'%20ry='3'%20id='02'%3e%3c/ellipse%3e%3cellipse%20fill='%23292F33'%20cx='23'%20cy='17'%20rx='2'%20ry='3'%20id='03'%3e%3c/ellipse%3e%3cpath%20d='M%2018%2031.5%20C%2020.715%2031.5%2023.027%2030.12%2023.895%2028.191%20C%2024.253999999999998%2027.393%2023.645%2026.5%2022.738%2026.5%20H%2013.261999999999999%20C%2012.354999999999999%2026.5%2011.745999999999999%2027.393%2012.104999999999999%2028.191%20C%2012.972999999999999%2030.119999999999997%2015.284999999999998%2031.5%2018%2031.5%20Z'%20fill='%23642116'%20id='04'%3e%3c/path%3e%3cellipse%20fill='%23642116'%20cx='16.5'%20cy='22'%20rx='1'%20ry='1.061'%20id='05'%3e%3c/ellipse%3e%3ccircle%20fill='%23642116'%20cx='19.5'%20cy='22'%20r='1'%20id='06'%3e%3c/circle%3e%3cpath%20d='M%2022.242%200.17%20S%2016.939%20-0.8909999999999999%2014.818000000000001%202.291%20S%2019.060000000000002%203.352%2019.060000000000002%203.352%20S%2020.121%200.17%2022.242%200.17%20Z'%20fill='%23bf6952'%20id='07'%3e%3c/path%3e%3cpath%20d='M%2027%2031.997%20C%2026.812%2032.719%2025.25%2033.375%2025.25%2033.375%20L%2026.001%2018.996000000000002%20L%2028%2024%20S%2027.188%2031.275%2027%2031.997%20Z'%20fill='%239b3c07'%20id='08'%3e%3c/path%3e%3cpath%20d='M%209%2031.997%20C%209.125%2032.656%2010.781%2033.406%2010.781%2033.406%20L%2010%2018.996%20L%208%2024%20S%208.875%2031.337%209%2031.997%20Z'%20fill='%239b3c07'%20id='09'%3e%3c/path%3e%3cpath%20d='M%2034%2036%20H%2026%20L%2027.002%2020.167%20L%2030.999%2015.999000000000002%20Z'%20fill='%23bf6952'%20id='10'%3e%3c/path%3e%3cpath%20d='M%202%2036%20H%2010%20L%208.988%2020.167%20L%204.991%2015.999000000000002%20Z'%20fill='%23bf6952'%20id='11'%3e%3c/path%3e%3cpath%20d='M%205.3919999999999995%2015.053%20S%205.191999999999999%2012.577000000000002%204.194999999999999%2011.511000000000001%20C%202.8929999999999993%2010.118%201.3249999999999993%2011.197000000000001%201.4459999999999993%2013.151000000000002%20C%201.8859999999999992%2020.237000000000002%203.4419999999999993%2022.184%205.463999999999999%2023.347%20C%207.4849999999999985%2024.511000000000003%2010.252999999999998%2024.293000000000003%2013.181999999999999%2021.475%20S%2017.34%2016.921%2017.689999999999998%2015.678%20C%2018.04%2014.434000000000001%2016.733999999999998%2013.424000000000001%2015.619999999999997%2014.057%20C%2014.617999999999997%2014.626000000000001%2013.109999999999998%2016.365000000000002%2013.109999999999998%2016.365000000000002%20S%2015.056999999999999%2013.669000000000002%2015.332999999999998%2012.627000000000002%20C%2015.714999999999998%2011.186000000000002%2014.011%2010.326000000000002%2013.085999999999999%2011.120000000000003%20C%2012.173999999999998%2011.903000000000002%2010.293999999999999%2014.276000000000003%2010.293999999999999%2014.276000000000003%20S%2011.899999999999999%2011.812000000000003%2012.047999999999998%2010.625000000000004%20C%2012.193999999999999%209.453000000000003%2010.808999999999997%208.417000000000003%209.584999999999997%209.439000000000004%20S%206.395999999999997%2013.410000000000004%205.391999999999998%2015.053000000000004%20Z'%20fill='%23d79e84'%20id='12'%3e%3c/path%3e%3cpath%20d='M%2030.608%2015.053%20S%2030.808%2012.577000000000002%2031.805%2011.511000000000001%20C%2033.107%2010.118%2034.675%2011.197000000000001%2034.554%2013.151000000000002%20C%2034.114000000000004%2020.237000000000002%2032.558%2022.184%2030.536%2023.347%20C%2028.515%2024.511000000000003%2025.747%2024.293000000000003%2022.818%2021.475%20S%2018.66%2016.921%2018.310000000000002%2015.678%20C%2017.96%2014.434000000000001%2019.266000000000002%2013.424000000000001%2020.380000000000003%2014.057%20C%2021.382%2014.626000000000001%2022.89%2016.365000000000002%2022.89%2016.365000000000002%20S%2020.943%2013.669000000000002%2020.667%2012.627000000000002%20C%2020.285%2011.186000000000002%2021.989%2010.326000000000002%2022.914%2011.120000000000003%20C%2023.826%2011.903000000000002%2025.706000000000003%2014.276000000000003%2025.706000000000003%2014.276000000000003%20S%2024.1%2011.812000000000003%2023.952%2010.625000000000004%20C%2023.806%209.453000000000003%2025.191000000000003%208.417000000000003%2026.415000000000003%209.439000000000004%20C%2027.638%2010.462000000000003%2029.604000000000003%2013.410000000000004%2030.608000000000004%2015.053000000000004%20Z'%20fill='%23d79e84'%20id='13'%3e%3c/path%3e%3cpath%20d='M%2019.66%2014.362%20C%2019.463%2014.362%2019.269%2014.428%2019.101%2014.56%20C%2018.8%2014.796000000000001%2018.683999999999997%2015.163%2018.79%2015.543000000000001%20C%2019.145%2016.803%2020.575%2018.626%2023.163%2021.115000000000002%20C%2025.637%2023.493000000000002%2028.165%2024.132%2030.286%2022.914%20C%2031.944000000000003%2021.959000000000003%2033.601%2020.416%2034.054%2013.120000000000001%20C%2034.111000000000004%2012.199000000000002%2033.734%2011.613000000000001%2033.334%2011.441%20C%2032.979000000000006%2011.285%2032.563%2011.433000000000002%2032.169000000000004%2011.853000000000002%20C%2031.452000000000005%2012.621000000000002%2031.158000000000005%2014.453000000000001%2031.106000000000005%2015.094000000000001%20C%2031.088000000000005%2015.31%2030.934000000000005%2015.490000000000002%2030.723000000000006%2015.540000000000001%20C%2030.513000000000005%2015.591000000000001%2030.294000000000008%2015.498000000000001%2030.181000000000004%2015.314%20C%2029.218000000000004%2013.739%2027.274000000000004%2010.81%2026.093000000000004%209.824%20C%2025.573000000000004%209.39%2025.146000000000004%209.517%2024.938000000000002%209.632%20C%2024.597%209.818%2024.400000000000002%2010.192%2024.447000000000003%2010.564%20C%2024.557000000000002%2011.444%2025.695000000000004%2013.345%2026.125000000000004%2014.004%20C%2026.271000000000004%2014.228%2026.215000000000003%2014.526%2025.998000000000005%2014.683%20C%2025.783000000000005%2014.839%2025.480000000000004%2014.798%2025.314000000000004%2014.588%20C%2025.295000000000005%2014.565%2023.453000000000003%2012.242999999999999%2022.587000000000003%2011.501%20C%2022.274000000000004%2011.231%2021.822000000000003%2011.299%2021.537000000000003%2011.477%20C%2021.367%2011.584%2020.989000000000004%2011.897%2021.149%2012.5%20C%2021.356%2013.281%2022.767%2015.345%2023.294%2016.073999999999998%20C%2023.45%2016.290999999999997%2023.409%2016.592999999999996%2023.199%2016.758999999999997%20C%2022.990000000000002%2016.923%2022.686%2016.897%2022.511000000000003%2016.694999999999997%20C%2022.108000000000004%2016.228999999999996%2020.893000000000004%2014.924999999999997%2020.133000000000003%2014.493999999999996%20C%2019.980000000000004%2014.404999999999996%2019.819000000000003%2014.361999999999997%2019.660000000000004%2014.361999999999997%20Z%20M%2028.082%2024.512%20C%2026.252000000000002%2024.512%2024.308%2023.603%2022.471%2021.836%20C%2019.676000000000002%2019.148%2018.244%2017.29%2017.829%2015.813999999999998%20C%2017.612000000000002%2015.042999999999997%2017.863%2014.259999999999998%2018.485%2013.772999999999998%20C%2019.076999999999998%2013.308999999999997%2019.847%2013.232999999999997%2020.521%2013.565999999999997%20C%2020.364%2013.257999999999997%2020.243000000000002%2012.977999999999998%2020.184%2012.755999999999997%20C%2019.958000000000002%2011.904999999999998%2020.274%2011.089999999999996%2021.007%2010.629999999999997%20C%2021.733%2010.173999999999998%2022.630000000000003%2010.217999999999996%2023.240000000000002%2010.741999999999997%20C%2023.324%2010.814999999999998%2023.416%2010.898999999999997%2023.512%2010.992999999999997%20C%2023.486%2010.885999999999997%2023.466%2010.783999999999997%2023.454%2010.687999999999997%20C%2023.357%209.911999999999997%2023.761%209.134999999999998%2024.458000000000002%208.753999999999998%20C%2025.185000000000002%208.357999999999997%2026.035000000000004%208.472999999999997%2026.733%209.055999999999997%20C%2027.853%209.991999999999997%2029.415%2012.266999999999998%2030.323%2013.666999999999998%20C%2030.51%2012.832999999999998%2030.846%2011.802999999999997%2031.438%2011.168999999999997%20C%2032.119%2010.439999999999998%2032.974%2010.196999999999997%2033.73%2010.521999999999997%20C%2034.608999999999995%2010.900999999999996%2035.128%2011.944999999999997%2035.050999999999995%2013.180999999999997%20C%2034.614999999999995%2020.211999999999996%2033.09499999999999%2022.449999999999996%2030.782999999999994%2023.781%20C%2029.935999999999993%2024.270999999999997%2029.022999999999993%2024.512%2028.081999999999994%2024.512%20Z'%20fill='%23bf6952'%20id='14'%3e%3c/path%3e%3cpath%20d='M%202.954%2011.381%20C%202.854%2011.381%202.758%2011.401%202.664%2011.441%20C%202.265%2011.613000000000001%201.8880000000000001%2012.199000000000002%201.9450000000000003%2013.120000000000001%20C%202.398%2020.416%204.055%2021.959000000000003%205.713%2022.914%20C%207.834%2024.135%2010.361%2023.495%2012.835%2021.115000000000002%20C%2015.423000000000002%2018.627000000000002%2016.853%2016.804000000000002%2017.208000000000002%2015.543000000000003%20C%2017.315%2015.163000000000002%2017.199%2014.795000000000003%2016.898000000000003%2014.560000000000002%20C%2016.595000000000002%2014.322000000000003%2016.209000000000003%2014.296000000000003%2015.866000000000003%2014.492000000000003%20C%2015.105000000000004%2014.925000000000002%2013.891000000000004%2016.227000000000004%2013.487000000000004%2016.693%20C%2013.311000000000003%2016.895000000000003%2013.007000000000003%2016.922%2012.799000000000003%2016.757%20C%2012.590000000000003%2016.591%2012.548000000000004%2016.289%2012.704000000000002%2016.072000000000003%20C%2013.230000000000002%2015.343000000000004%2014.642000000000003%2013.279000000000003%2014.850000000000001%2012.498000000000003%20C%2015.010000000000002%2011.895000000000003%2014.631000000000002%2011.582000000000003%2014.461000000000002%2011.475000000000003%20C%2014.177000000000001%2011.296000000000003%2013.727000000000002%2011.227000000000004%2013.412000000000003%2011.499000000000002%20C%2012.547000000000002%2012.242000000000003%2010.705000000000002%2014.563000000000002%2010.687000000000003%2014.586000000000002%20C%2010.521000000000003%2014.794000000000002%2010.220000000000002%2014.837000000000002%2010.003000000000004%2014.681000000000003%20C%209.786000000000003%2014.525000000000002%209.730000000000004%2014.226000000000003%209.876000000000003%2014.002000000000002%20C%2010.305000000000003%2013.343000000000002%2011.444000000000003%2011.441000000000003%2011.553000000000003%2010.562000000000003%20C%2011.599000000000002%2010.190000000000003%2011.402000000000003%209.816000000000003%2011.062000000000003%209.630000000000003%20C%2010.854000000000003%209.517000000000003%2010.426000000000004%209.389000000000003%209.908000000000003%209.822000000000003%20C%208.878000000000004%2010.682000000000002%207.067000000000003%2013.271000000000003%205.819000000000003%2015.312000000000003%20C%205.706000000000002%2015.497000000000003%205.490000000000003%2015.590000000000003%205.277000000000003%2015.538000000000004%20C%205.067000000000003%2015.488000000000003%204.912000000000003%2015.308000000000003%204.894000000000003%2015.092000000000004%20C%204.842000000000003%2014.451000000000004%204.548000000000003%2012.619000000000003%203.831000000000003%2011.851000000000004%20C%203.5390000000000033%2011.542000000000005%203.237000000000003%2011.381000000000004%202.9540000000000033%2011.381000000000004%20Z%20M%207.918%2024.512%20C%206.976%2024.512%206.064%2024.271%205.214%2023.782%20C%202.9030000000000005%2022.451%201.3830000000000005%2020.214%200.9470000000000001%2013.182%20C%200.8700000000000001%2011.946%201.389%2010.902000000000001%202.269%2010.523%20C%203.019%2010.199%203.878%2010.44%204.5600000000000005%2011.17%20C%205.152%2011.803%205.489000000000001%2012.833%205.676%2013.668%20C%206.5840000000000005%2012.268999999999998%208.144%209.994%209.266%209.056999999999999%20C%209.965%208.471999999999998%2010.815%208.357999999999999%2011.54%208.754999999999999%20C%2012.238%209.135%2012.642%209.912999999999998%2012.543999999999999%2010.688999999999998%20C%2012.531999999999998%2010.784999999999998%2012.511999999999999%2010.886999999999999%2012.485999999999999%2010.993999999999998%20C%2012.582999999999998%2010.899999999999999%2012.674%2010.814999999999998%2012.758999999999999%2010.742999999999999%20C%2013.366999999999999%2010.220999999999998%2014.265999999999998%2010.175999999999998%2014.991%2010.630999999999998%20C%2015.725%2011.091%2016.041%2011.905999999999999%2015.815999999999999%2012.756999999999998%20C%2015.757%2012.978999999999997%2015.636%2013.258999999999999%2015.479999999999999%2013.567999999999998%20C%2016.151999999999997%2013.235999999999997%2016.923%2013.310999999999998%2017.514%2013.774999999999999%20C%2018.137%2014.261999999999999%2018.387999999999998%2015.044999999999998%2018.171%2015.815999999999999%20C%2017.755%2017.294%2016.323%2019.151%2013.527999999999999%2021.838%20C%2011.691999999999998%2023.603%209.748%2024.512%207.917999999999998%2024.512%20Z'%20fill='%23bf6952'%20id='16'%3e%3c/path%3e%3cpath%20d='M%205.817999999999998%2015.314%20C%207.065999999999998%2013.272%208.876999999999999%2010.684000000000001%209.906999999999998%209.824%20C%209.975999999999999%209.766%2010.037999999999998%209.741999999999999%2010.102999999999998%209.703%20C%2010.401999999999997%209.302999999999999%2010.833999999999998%208.943999999999999%2011.461999999999998%208.727%20C%2010.753999999999998%208.378%209.939999999999998%208.492%209.264999999999997%209.057%20C%208.142999999999997%209.994%206.581999999999997%2012.269%205.674999999999997%2013.668%20C%205.568999999999997%2013.196%205.407999999999997%2012.667%205.186999999999998%2012.177999999999999%20C%205.1839999999999975%2013.318999999999999%205.243999999999998%2014.505999999999998%205.451999999999997%2015.527%20C%205.599999999999997%2015.507%205.737999999999997%2015.444999999999999%205.817999999999997%2015.314%20Z'%20fill='%239b3c07'%20id='18'%3e%3c/path%3e%3cpath%20d='M%2025.988%209.758%20C%2026.024%209.783999999999999%2026.057%209.793%2026.094%209.824%20C%2027.275000000000002%2010.81%2029.219%2013.739%2030.182000000000002%2015.314%20C%2030.272000000000002%2015.46%2030.431%2015.524000000000001%2030.596000000000004%2015.529%20C%2030.812000000000005%2014.477%2030.869000000000003%2013.246%2030.862000000000002%2012.074%20C%2030.615000000000002%2012.592%2030.437%2013.161%2030.324%2013.667%20C%2029.416%2012.267%2027.854000000000003%209.992%2026.734%209.056000000000001%20C%2026.068%208.499%2025.266000000000002%208.384%2024.563000000000002%208.716000000000001%20C%2025.235000000000003%208.942000000000002%2025.683000000000003%209.331000000000001%2025.988000000000003%209.758000000000001%20Z'%20fill='%239b3c07'%20id='19'%3e%3c/path%3e%3c/svg%3e", y2 = "data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%2036%2036'%3e%3cpath%20d='M%2036%2018%20C%2036%2027.941000000000003%2027.941000000000003%2036%2018%2036%20C%208.06%2036%200%2027.941000000000003%200%2018%20C%200%208.06%208.06%200%2018%200%20C%2027.941000000000003%200%2036%208.06%2036%2018'%20fill='%23ffcc4d'%20id='00'%3e%3c/path%3e%3cpath%20d='M%207%2021.263%20C%207%2025.227%2011.596%2030.263%2018%2030.263%20S%2029%2025.263%2029%2021.263%20C%2029%2021.263%2018.667%2024.019000000000002%207%2021.263%20Z'%20fill='%23664500'%20id='01'%3e%3c/path%3e%3cpath%20d='M%2012%2023.003%20V%2029.964%20C%2012%2032.964%2014%2035.964%2018%2035.964%20S%2024%2032.964%2024%2029.964%20V%2023.043999999999997%20C%2017.709%2024.336%2012%2023.002999999999997%2012%2023.002999999999997%20Z'%20fill='%235d9040'%20id='02'%3e%3c/path%3e%3cpath%20d='M%2026.694000000000003%2014.736%20C%2026.694000000000003%2013.332%2025.279000000000003%2012.786000000000001%2024.142000000000003%2012.347000000000001%20C%2023.386000000000003%2012.055000000000001%2022.672000000000004%2011.779000000000002%2022.672000000000004%2011.379000000000001%20C%2022.672000000000004%2010.72%2023.556000000000004%2010.686000000000002%2023.733000000000004%2010.686000000000002%20C%2024.358000000000004%2010.686000000000002%2024.668000000000003%2010.920000000000002%2024.943000000000005%2011.127000000000002%20C%2025.154000000000003%2011.286000000000003%2025.371000000000006%2011.450000000000003%2025.673000000000005%2011.450000000000003%20C%2026.238000000000007%2011.450000000000003%2026.495000000000005%2011.053000000000003%2026.495000000000005%2010.684000000000003%20C%2026.495000000000005%209.947000000000003%2025.593000000000004%209.428000000000003%2024.637000000000004%209.210000000000003%20V%208.818000000000003%20C%2024.637000000000004%208.300000000000002%2024.215000000000003%207.879000000000003%2023.698000000000004%207.879000000000003%20C%2023.180000000000003%207.879000000000003%2022.758000000000003%208.300000000000002%2022.758000000000003%208.818000000000003%20V%209.244000000000003%20C%2021.615000000000002%209.577000000000004%2020.913000000000004%2010.418000000000003%2020.913000000000004%2011.479000000000003%20C%2020.913000000000004%2012.790000000000003%2022.206000000000003%2013.328000000000003%2023.347000000000005%2013.802000000000003%20C%2024.164000000000005%2014.142000000000003%2024.936000000000003%2014.463000000000003%2024.936000000000003%2014.964000000000002%20C%2024.936000000000003%2015.330000000000002%2024.477000000000004%2015.726000000000003%2023.734%2015.726000000000003%20C%2022.984%2015.726000000000003%2022.554000000000002%2015.426000000000002%2022.175%2015.162000000000003%20C%2021.912%2014.979000000000003%2021.664%2014.806000000000003%2021.369%2014.806000000000003%20C%2020.938%2014.806000000000003%2020.602%2015.168000000000003%2020.602%2015.630000000000003%20C%2020.602%2016.309%2021.533%2016.986000000000004%2022.758%2017.224000000000004%20V%2017.694000000000003%20C%2022.758%2018.211000000000002%2023.180999999999997%2018.632%2023.698999999999998%2018.632%20S%2024.636999999999997%2018.211000000000002%2024.636999999999997%2017.694000000000003%20L%2024.633999999999997%2017.196%20C%2025.928999999999995%2016.879%2026.693999999999996%2015.973%2026.693999999999996%2014.736%20Z'%20fill='%23664500'%20id='03'%3e%3c/path%3e%3cpath%20d='M%2012.284%2012.33%20C%2011.528%2012.038%2010.813%2011.762%2010.813%2011.362%20C%2010.813%2010.703%2011.697000000000001%2010.669%2011.874%2010.669%20C%2012.499%2010.669%2012.81%2010.903%2013.084%2011.110000000000001%20C%2013.294%2011.269000000000002%2013.512%2011.433000000000002%2013.815%2011.433000000000002%20C%2014.379%2011.433000000000002%2014.636%2011.036000000000001%2014.636%2010.667000000000002%20C%2014.636%209.931000000000001%2013.734%209.411000000000001%2012.777999999999999%209.193000000000001%20V%208.8%20C%2012.777999999999999%208.282%2012.357%207.861000000000001%2011.838999999999999%207.861000000000001%20S%2010.899999999999999%208.282%2010.899999999999999%208.8%20V%209.226%20C%209.755999999999998%209.559000000000001%209.054999999999998%2010.4%209.054999999999998%2011.461%20C%209.054999999999998%2012.772%2010.347999999999997%2013.31%2011.488999999999997%2013.784%20C%2012.305999999999997%2014.124%2013.077999999999998%2014.445%2013.077999999999998%2014.946000000000002%20C%2013.077999999999998%2015.312000000000001%2012.617999999999997%2015.708000000000002%2011.874999999999998%2015.708000000000002%20C%2011.124999999999998%2015.708000000000002%2010.694999999999999%2015.408000000000001%2010.314999999999998%2015.144000000000002%20C%2010.052999999999997%2014.961000000000002%209.804999999999998%2014.788000000000002%209.508999999999997%2014.788000000000002%20C%209.078999999999997%2014.788000000000002%208.742999999999997%2015.150000000000002%208.742999999999997%2015.612000000000002%20C%208.742999999999997%2016.291%209.673999999999996%2016.968000000000004%2010.899999999999997%2017.206000000000003%20V%2017.676000000000002%20C%2010.899999999999997%2018.194000000000003%2011.320999999999996%2018.614%2011.838999999999997%2018.614%20S%2012.777999999999997%2018.193%2012.777999999999997%2017.676000000000002%20L%2012.772999999999996%2017.178%20C%2014.068999999999996%2016.863%2014.834999999999996%2015.956000000000001%2014.834999999999996%2014.719000000000001%20C%2014.835999999999995%2013.315000000000001%2013.420999999999996%2012.769000000000002%2012.283999999999995%2012.330000000000002%20Z'%20fill='%23664500'%20id='04'%3e%3c/path%3e%3cpath%20d='M%2020.97%2031.069%20C%2020.97%2029.701%2019.590999999999998%2029.168%2018.482999999999997%2028.74%20C%2017.746%2028.456%2017.048999999999996%2028.186%2017.048999999999996%2027.796999999999997%20C%2017.048999999999996%2027.153999999999996%2017.909999999999997%2027.121999999999996%2018.082999999999995%2027.121999999999996%20C%2018.691999999999993%2027.121999999999996%2018.994999999999994%2027.350999999999996%2019.262999999999995%2027.551999999999996%20C%2019.467999999999993%2027.706999999999997%2019.680999999999994%2027.866999999999997%2019.975999999999996%2027.866999999999997%20C%2020.525999999999996%2027.866999999999997%2020.776999999999994%2027.478999999999996%2020.776999999999994%2027.119999999999997%20C%2020.776999999999994%2026.403%2019.897999999999993%2025.895999999999997%2018.964999999999993%2025.682999999999996%20V%2025.3%20C%2018.964999999999993%2024.795%2018.55399999999999%2024.384%2018.048999999999992%2024.384%20S%2017.132999999999992%2024.795%2017.132999999999992%2025.3%20V%2025.715%20C%2016.017999999999994%2026.039%2015.333999999999993%2026.86%2015.333999999999993%2027.894%20C%2015.333999999999993%2029.171999999999997%2016.59499999999999%2029.697%2017.706999999999994%2030.159%20C%2018.503999999999994%2030.49%2019.255999999999993%2030.802999999999997%2019.255999999999993%2031.291%20C%2019.255999999999993%2031.648%2018.807999999999993%2032.034%2018.08299999999999%2032.034%20C%2017.35199999999999%2032.034%2016.932999999999993%2031.741999999999997%2016.56299999999999%2031.483%20C%2016.307999999999993%2031.305%2016.065999999999992%2031.136%2015.777999999999992%2031.136%20C%2015.358999999999991%2031.136%2015.029999999999992%2031.49%2015.029999999999992%2031.939999999999998%20C%2015.029999999999992%2032.602999999999994%2015.936999999999992%2033.262%2017.13199999999999%2033.494%20V%2033.953%20C%2017.13199999999999%2034.457%2017.542999999999992%2034.867000000000004%2018.048999999999992%2034.867000000000004%20C%2018.55399999999999%2034.867000000000004%2018.96399999999999%2034.45700000000001%2018.96399999999999%2033.953%20L%2018.96099999999999%2033.467000000000006%20C%2020.22399999999999%2033.15800000000001%2020.96999999999999%2032.27400000000001%2020.96999999999999%2031.069000000000006%20Z'%20fill='%23ffffff'%20id='05'%3e%3c/path%3e%3c/svg%3e", w2 = "data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%2036%2036'%3e%3cpath%20d='M%2035.99%2018%20C%2035.99%2027.941000000000003%2027.931000000000004%2036%2017.990000000000002%2036%20C%208.050000000000002%2036%20-0.00999999999999801%2027.941000000000003%20-0.00999999999999801%2018%20C%20-0.00999999999999801%208.06%208.050000000000002%200%2017.990000000000002%200%20S%2035.99%208.06%2035.99%2018'%20fill='%2377b255'%20id='00'%3e%3c/path%3e%3cpath%20d='M%2014.755999999999998%2011.533999999999999%20C%2014.7%2011.533999999999999%208.172999999999998%2012.735999999999999%207.9289999999999985%2013.036%20C%207.8809999999999985%2013.094999999999999%207.860999999999999%2013.176%207.876999999999999%2013.248999999999999%20C%208.265999999999998%2015.088999999999999%209.815999999999999%2016.424999999999997%2011.562999999999999%2016.424999999999997%20C%2011.799%2016.424999999999997%2012.036999999999999%2016.4%2012.27%2016.350999999999996%20C%2014.241999999999999%2015.933999999999996%2015.481%2013.864999999999995%2015.032%2011.737999999999996%20C%2015.008000000000001%2011.622999999999996%2014.875%2011.533999999999995%2014.756%2011.533999999999995%20Z'%20fill='%23292f33'%20id='01'%3e%3c/path%3e%3cpath%20d='M%2028.028%2013.036%20C%2027.784%2012.735999999999999%2021.256999999999998%2011.533999999999999%2021.201999999999998%2011.533999999999999%20C%2021.084%2011.533999999999999%2020.950999999999997%2011.623%2020.927%2011.738999999999999%20C%2020.709%2012.765999999999998%2020.875%2013.809999999999999%2021.393%2014.68%20C%2021.914%2015.556%2022.73%2016.15%2023.689%2016.353%20C%2023.921%2016.402%2024.16%2016.427000000000003%2024.396%2016.427000000000003%20C%2026.142%2016.427000000000003%2027.692%2015.091000000000003%2028.082%2013.250000000000004%20C%2028.096%2013.175000000000004%2028.076%2013.094000000000003%2028.028000000000002%2013.036000000000003%20Z'%20fill='%23292f33'%20id='02'%3e%3c/path%3e%3cpath%20d='M%2015.364%2026.122%20L%2013.849%2023.826999999999998%20C%2015.003%2023.064999999999998%2016.455%2022.645%2017.938000000000002%2022.645%20C%2019.428%2022.645%2020.833000000000002%2023.047%2022.000000000000004%2023.807%20L%2020.498000000000005%2026.112%20C%2019.073000000000004%2025.183999999999997%2016.777000000000005%2025.188%2015.364000000000004%2026.122%20Z'%20fill='%23292f33'%20id='03'%3e%3c/path%3e%3cpath%20d='M%2024.352%2029.647%20C%2024.241%2029.647%2024.129%2029.628999999999998%2024.018%2029.592%20C%2023.859%2029.538999999999998%2020.118000000000002%2028.247999999999998%2020.118000000000002%2024.352999999999998%20S%2023.859%2019.165999999999997%2024.018%2019.113999999999997%20C%2024.577%2018.926999999999996%2025.172%2019.228999999999996%2025.357%2019.782999999999998%20C%2025.541999999999998%2020.336%2025.244%2020.933999999999997%2024.692999999999998%2021.121%20C%2024.592999999999996%2021.154999999999998%2022.235%2021.999%2022.235%2024.352999999999998%20S%2024.593%2027.551%2024.692999999999998%2027.584999999999997%20C%2025.243999999999996%2027.775999999999996%2025.54%2028.375999999999998%2025.352999999999998%2028.926999999999996%20C%2025.203%2029.368999999999996%2024.791999999999998%2029.646999999999995%2024.351999999999997%2029.646999999999995%20Z'%20fill='%233e721d'%20id='04'%3e%3c/path%3e%3cpath%20d='M%2011.647%2029.647%20C%2011.203%2029.647%2010.790000000000001%2029.366999999999997%2010.642%2028.923%20C%2010.456999999999999%2028.368%2010.757%2027.767999999999997%2011.311%2027.584%20C%2011.406%2027.551%2013.764%2026.707%2013.764%2024.353%20S%2011.405999999999999%2021.155%2011.306%2021.121000000000002%20C%2010.755999999999998%2020.930000000000003%2010.459999999999999%2020.330000000000002%2010.646999999999998%2019.779000000000003%20C%2010.833999999999998%2019.227000000000004%2011.426999999999998%2018.927000000000003%2011.980999999999998%2019.114000000000004%20C%2012.139999999999999%2019.167000000000005%2015.880999999999998%2020.458000000000006%2015.880999999999998%2024.353000000000005%20S%2012.139999999999999%2029.540000000000006%2011.980999999999998%2029.592000000000006%20C%2011.870999999999999%2029.629000000000005%2011.757999999999997%2029.647000000000006%2011.646999999999998%2029.647000000000006%20Z'%20fill='%233e721d'%20id='05'%3e%3c/path%3e%3c/svg%3e", _2 = "data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%2036%2036'%3e%3ccircle%20fill='%23FFCC4D'%20cx='18'%20cy='18'%20r='18'%20id='00'%3e%3c/circle%3e%3cpath%20d='M%2027.335%2023.629%20C%2027.157%2023.468%2026.891000000000002%2023.458000000000002%2026.7%2023.6%20C%2026.660999999999998%2023.629%2022.778%2026.5%2018%2026.5%20C%2013.234%2026.5%209.338%2023.629%209.3%2023.6%20C%209.109%2023.458000000000002%208.843%2023.470000000000002%208.665000000000001%2023.629%20C%208.488000000000001%2023.789%208.448%2024.053%208.571000000000002%2024.257%20C%208.7%2024.472%2011.788%2029.5%2018%2029.5%20S%2027.301000000000002%2024.472%2027.429000000000002%2024.256999999999998%20C%2027.552000000000003%2024.052%2027.513%2023.788999999999998%2027.335%2023.628999999999998%20Z'%20fill='%23664500'%20id='01'%3e%3c/path%3e%3cpath%20d='M%2018%2026.591%20C%2017.852%2026.591%2017.709%2026.580000000000002%2017.562%2026.575000000000003%20V%2031.091%20H%2018.437%20V%2026.574%20C%2018.292%2026.579%2018.148%2026.591%2018%2026.591%20Z'%20fill='%2365471b'%20id='02'%3e%3c/path%3e%3cpath%20d='M%2014%2026%20C%2013.984%2025.996%2015.45%2026.378%2016.446%2026.486%20C%2016.812%2026.528000000000002%2017.183%2026.562%2017.563000000000002%2026.575%20V%2031.092%20H%2016%20C%2014.9%2031.092%2014%2030.192%2014%2029.092%20V%2026%20Z'%20fill='%23ffffff'%20id='03'%3e%3c/path%3e%3cpath%20d='M%2022%2026%20C%2022.016%2025.996%2020.55%2026.378%2019.554%2026.486%20C%2019.188%2026.528000000000002%2018.817%2026.562%2018.436999999999998%2026.575%20V%2031.092%20H%2020%20C%2021.1%2031.092%2022%2030.192%2022%2029.092%20V%2026%20Z'%20fill='%23ffffff'%20id='04'%3e%3c/path%3e%3cpath%20d='M%209.457%2014.024000000000001%20C%209.457%2015.738000000000001%2010.395000000000001%2017.128%2011.553%2017.128%20C%2012.71%2017.128%2013.649000000000001%2015.738%2013.649000000000001%2014.024000000000001%20S%2012.711%2010.920000000000002%2011.553%2010.920000000000002%20C%2010.395000000000001%2010.920000000000002%209.457%2012.310000000000002%209.457%2014.024000000000001%20Z'%20fill='%2365471b'%20id='05'%3e%3c/path%3e%3cpath%20d='M%2026.624000000000002%2014.024000000000001%20C%2026.624000000000002%2015.738000000000001%2025.686000000000003%2017.128%2024.528000000000002%2017.128%20C%2023.371000000000002%2017.128%2022.432000000000002%2015.738%2022.432000000000002%2014.024000000000001%20S%2023.37%2010.920000000000002%2024.528000000000002%2010.920000000000002%20C%2025.686000000000003%2010.920000000000002%2026.624000000000002%2012.310000000000002%2026.624000000000002%2014.024000000000001%20Z'%20fill='%2365471b'%20id='06'%3e%3c/path%3e%3cpath%20d='M%2027.335%2023.629%20C%2027.157%2023.468%2026.891000000000002%2023.458000000000002%2026.7%2023.6%20C%2026.669999999999998%2023.622%2024.441%2025.268%2021.289%2026.07%20C%2020.846%2026.183%2019.425%2026.5%2018.003%2026.501%20C%2016.579%2026.501%2015.154%2026.183%2014.711%2026.07%20C%2011.559000000000001%2025.268%209.33%2023.622%209.3%2023.6%20C%209.110000000000001%2023.458000000000002%208.843%2023.468%208.665000000000001%2023.629%20C%208.487%2023.789%208.448%2024.052%208.571000000000002%2024.257%20C%208.668000000000001%2024.419%2010.456000000000001%2027.324%2014.000000000000002%2028.738%20V%2026.909%20C%2013.984000000000002%2026.904999999999998%2015.450000000000001%2027.287%2016.446%2027.395%20C%2016.812%2027.437%2017.183%2027.471%2017.563000000000002%2027.483999999999998%20C%2017.709000000000003%2027.488999999999997%2017.852000000000004%2027.499999999999996%2018.000000000000004%2027.499999999999996%20C%2018.148000000000003%2027.499999999999996%2018.291000000000004%2027.488999999999997%2018.438000000000002%2027.483999999999998%20C%2018.818%2027.470999999999997%2019.189000000000004%2027.438%2019.555000000000003%2027.395%20C%2020.551000000000002%2027.287%2022.017000000000003%2026.905%2022.001000000000005%2026.909%20V%2028.738%20C%2025.545000000000005%2027.323999999999998%2027.333000000000006%2024.419%2027.430000000000007%2024.256999999999998%20C%2027.552000000000007%2024.052%2027.513000000000005%2023.788999999999998%2027.335000000000008%2023.628999999999998%20Z'%20fill='%2365471b'%20id='07'%3e%3c/path%3e%3cpath%20d='M%2030.892%2013.024000000000001%20C%2030.773%2013.978000000000002%2030.457%2016.539%2029.627%2017.158%20C%2028.962999999999997%2017.653000000000002%2027.265%2018%2026.04%2018%20H%2026.038999999999998%20C%2024.932%2018%2023.875999999999998%2017.719%2023.063999999999997%2017.257%20C%2021.740999999999996%2016.505000000000003%2021.543999999999997%2014.396%2021.466999999999995%2013.291%20C%2021.424999999999994%2012.683%2021.290999999999997%2011.440000000000001%2022.295999999999996%2010.823%20C%2023.430999999999997%2010.125%2025.757999999999996%2010.077%2026.450999999999997%2010.077%20C%2027.964%2010.077%2029.441999999999997%2010.354%2030.502999999999997%2010.715%20C%2031.170999999999996%2010.943%2030.967999999999996%2012.417%2030.891999999999996%2013.024000000000001%20Z%20M%2014.614%2013.277000000000001%20C%2014.537%2014.382000000000001%2014.34%2016.504%2013.017000000000001%2017.257%20C%2012.206000000000001%2017.719%2011.149000000000001%2018%2010.043000000000001%2018%20H%2010.042000000000002%20C%208.817000000000002%2018%207.1190000000000015%2017.653%206.455000000000002%2017.158%20C%205.625000000000002%2016.539%205.309000000000002%2013.991000000000001%205.190000000000002%2013.038%20C%205.1140000000000025%2012.431000000000001%204.910000000000002%2010.948%205.578000000000002%2010.72%20C%206.638000000000002%2010.359%208.117000000000003%2010.077%209.630000000000003%2010.077%20C%2010.323000000000002%2010.077%2012.651000000000003%2010.12%2013.785000000000004%2010.818%20C%2014.790000000000003%2011.434999999999999%2014.657000000000004%2012.669%2014.614000000000004%2013.277%20Z%20M%2034.808%209.627%20C%2034.637%209.461%2033.541%209.901%2032.432%209.336%20C%2030.144000000000002%208.17%2024.362000000000002%207.045%2020.598000000000003%209.712%20C%2020.195000000000004%209.997%2018.511000000000003%2010.045%2018.040000000000003%2010.025%20C%2017.569000000000003%2010.046000000000001%2015.885000000000003%209.998000000000001%2015.482000000000003%209.712%20C%2011.719000000000003%207.045%205.937000000000003%208.17%203.6490000000000027%209.336%20C%202.5400000000000027%209.901%201.4440000000000026%209.461%201.2730000000000028%209.627%20C%201.026000000000003%209.866000000000001%201.026000000000003%2010.823%201.2740000000000027%2011.063%20C%201.5200000000000027%2011.302000000000001%202.751000000000003%2011.578000000000001%202.9960000000000027%2012.295%20C%203.2430000000000025%2013.013%203.2450000000000028%2017.253%205.209000000000003%2018.719%20C%207.048000000000004%2020.091%2011.338000000000003%2020.504%2014.057000000000004%2018.957%20C%2016.429000000000002%2017.608%2016.346000000000004%2014.768%2016.781000000000006%2013.076%20C%2016.936000000000007%2012.473%2017.373000000000005%2012.169%2018.041000000000007%2012.169%20S%2019.146000000000008%2012.473%2019.30100000000001%2013.076%20C%2019.736000000000008%2014.767000000000001%2019.652000000000008%2017.608%2022.02500000000001%2018.957%20C%2024.74400000000001%2020.503%2029.03400000000001%2020.09%2030.872000000000007%2018.719%20C%2032.83700000000001%2017.254%2032.839000000000006%2013.013000000000002%2033.08500000000001%2012.295000000000002%20C%2033.330000000000005%2011.578000000000001%2034.56100000000001%2011.301000000000002%2034.80700000000001%2011.063000000000002%20C%2035.05500000000001%2010.823000000000002%2035.05600000000001%209.866000000000003%2034.80800000000001%209.627000000000002%20Z'%20fill='%23292f33'%20id='08'%3e%3c/path%3e%3c/svg%3e", x2 = "data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%2036%2036'%3e%3cpath%20d='M%2036%2018%20C%2036%2027.939999999999998%2027.939999999999998%2036%2018%2036%20C%208.059%2036%200%2027.939999999999998%200%2018%20C%200%208.059%208.059%200%2018%200%20C%2027.939999999999998%200%2036%208.059%2036%2018'%20fill='%2366757f'%20id='00'%3e%3c/path%3e%3cg%20fill='%235B6876'%20id='01'%3e%3ccircle%20cx='9.5'%20cy='7.5'%20r='3.5'%3e%3c/circle%3e%3ccircle%20cx='24.5'%20cy='28.5'%20r='3.5'%3e%3c/circle%3e%3ccircle%20cx='22'%20cy='5'%20r='2'%3e%3c/circle%3e%3ccircle%20cx='3'%20cy='18'%20r='1'%3e%3c/circle%3e%3ccircle%20cx='30'%20cy='9'%20r='1'%3e%3c/circle%3e%3ccircle%20cx='16'%20cy='31'%20r='1'%3e%3c/circle%3e%3ccircle%20cx='32'%20cy='19'%20r='2'%3e%3c/circle%3e%3ccircle%20cx='6'%20cy='26'%20r='2'%3e%3c/circle%3e%3c/g%3e%3cpath%20d='M%2018%2024.904%20C%2011%2024.904%209%2022.286%209%2023.523%20C%209%2024.762%2013%2028%2018%2028%20S%2027%2024.762%2027%2023.523%20C%2027%2022.286%2025%2024.904%2018%2024.904'%20fill='%23292f33'%20id='02'%3e%3c/path%3e%3cpath%20d='M%2027%2015%20C%2027%2016.657%2025.656%2018%2024%2018%20S%2021%2016.657%2021%2015%20S%2022.344%2012%2024%2012%20S%2027%2013.343%2027%2015'%20fill='%23292f33'%20id='03'%3e%3c/path%3e%3cpath%20d='M%2015%2015%20C%2015%2016.657%2013.656%2018%2012%2018%20S%209%2016.657%209%2015%20S%2010.344%2012%2012%2012%20S%2015%2013.343%2015%2015'%20fill='%23292f33'%20id='04'%3e%3c/path%3e%3c/svg%3e", b2 = "data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%2036%2036'%3e%3ccircle%20fill='%23FFCC4D'%20cx='17'%20cy='19'%20r='17'%20id='00'%3e%3c/circle%3e%3cellipse%20fill='%23664500'%20cx='17.999'%20cy='26'%20rx='2'%20ry='2.5'%20id='01'%3e%3c/ellipse%3e%3cpath%20d='%20M%2020.084000000000003%2017.641%20C%2019.794000000000004%2017.641%2019.508000000000003%2017.516%2019.310000000000002%2017.275%20C%2018.96%2016.848%2019.022000000000002%2016.217%2019.450000000000003%2015.866999999999999%20C%2022.626000000000005%2013.262999999999998%2026.212000000000003%2014.305%2027.665000000000003%2015.220999999999998%20C%2028.132%2015.514999999999999%2028.272000000000002%2016.133%2027.977000000000004%2016.599999999999998%20C%2027.684000000000005%2017.064999999999998%2027.069000000000003%2017.206999999999997%2026.601000000000003%2016.915%20C%2026.463%2016.831%2023.549000000000003%2015.091999999999999%2020.717000000000002%2017.413999999999998%20C%2020.531000000000002%2017.566999999999997%2020.307000000000002%2017.641%2020.084000000000003%2017.641%20Z'%20fill='%23664500'%20id='02'%3e%3c/path%3e%3cpath%20d='M%208.111%2021.383%20C%207.929%2021.383%207.744000000000001%2021.333%207.579000000000001%2021.229%20C%207.112000000000001%2020.935%206.972%2020.317999999999998%207.266000000000001%2019.849999999999998%20C%208.182%2018.397%2010.967%2015.911999999999997%2014.956000000000001%2016.887999999999998%20C%2015.492%2017.019%2015.820000000000002%2017.561%2015.689000000000002%2018.096999999999998%20C%2015.557000000000002%2018.633%2015.013000000000002%2018.958999999999996%2014.480000000000002%2018.83%20C%2010.876000000000001%2017.947999999999997%208.978000000000002%2020.886%208.959000000000003%2020.915999999999997%20C%208.768000000000002%2021.217999999999996%208.443000000000003%2021.382999999999996%208.111000000000002%2021.382999999999996%20Z'%20fill='%23664500'%20id='03'%3e%3c/path%3e%3cpath%20d='%20M%2024.383000000000003%2028.212%20C%2024.241000000000003%2028.212%2024.098000000000003%2028.172%2023.971000000000004%2028.088%20C%2022.804000000000002%2027.318%2022.151000000000003%2025.971%2022.179000000000002%2024.393%20C%2022.208000000000002%2022.758%2022.988000000000003%2021.240000000000002%2024.163000000000004%2020.524%20C%2024.516000000000005%2020.308%2024.977000000000004%2020.42%2025.193000000000005%2020.775000000000002%20C%2025.409000000000006%2021.129%2025.297000000000004%2021.589000000000002%2024.942000000000004%2021.805000000000003%20C%2024.207000000000004%2022.253000000000004%2023.698000000000004%2023.304000000000002%2023.678000000000004%2024.419000000000004%20C%2023.658000000000005%2025.474000000000004%2024.067000000000004%2026.355000000000004%2024.796000000000003%2026.836000000000006%20C%2025.142000000000003%2027.064000000000007%2025.237000000000002%2027.529000000000007%2025.009000000000004%2027.875000000000007%20C%2024.865000000000006%2028.09400000000001%2024.627000000000002%2028.212000000000007%2024.383000000000003%2028.212000000000007%20Z'%20fill='%23e2a62d'%20id='04'%3e%3c/path%3e%3cpath%20d='M%2013.346%2031.273%20C%2013.278%2031.273%2013.209%2031.264%2013.141%2031.245%20C%2012.743%2031.132%2012.511%2030.718%2012.624%2030.319000000000003%20C%2013.061%2028.779000000000003%2012.882000000000001%2027.290000000000003%2012.134%2026.233000000000004%20C%2011.637%2025.531000000000006%2010.929%2025.102000000000004%2010.191%2025.055000000000003%20C%209.777000000000001%2025.030000000000005%209.463000000000001%2024.673000000000002%209.489%2024.26%20S%209.870000000000001%2023.509%2010.284%2023.559%20C%2011.477%2023.633000000000003%2012.597000000000001%2024.292%2013.357000000000001%2025.366%20C%2014.368%2026.794999999999998%2014.627%2028.749%2014.066%2030.727%20C%2013.973%2031.058%2013.672%2031.273%2013.346%2031.273%20Z'%20fill='%23e2a62d'%20id='05'%3e%3c/path%3e%3cpath%20d='M%2017.179%202.72%20C%2017.136%202.6710000000000003%2017.069%202.644%2016.99%202.629%20C%2016.99%202.629%201.065999999999999%20-0.39400000000000013%200.3769999999999989%200.21399999999999997%20C%20-0.311%200.823%200.74%2016.998%200.74%2016.998%20C%200.745%2017.079%200.763%2017.148%200.8069999999999999%2017.197000000000003%20C%201.411%2017.881000000000004%205.5649999999999995%2015.193000000000003%2010.086%2011.196000000000002%20C%2014.608%207.198000000000001%2017.783%203.4040000000000017%2017.179000000000002%202.7200000000000006%20Z'%20fill='%23dd2e44'%20id='06'%3e%3c/path%3e%3cpath%20d='M%200.349%200.271%20C%200.334%200.301%200.321%200.342%200.311%200.394%20C%200.47%201.765%202.006%2013.046%202.963%2016.572%20C%204.399%2015.768999999999998%205.8580000000000005%2014.677999999999999%207.572%2013.318999999999999%20C%206.116%2010.654%201.158%200.146%200.349%200.271%20Z'%20fill='%23ea596e'%20id='07'%3e%3c/path%3e%3cpath%20d='M%2029.902%2029.229%20L%2019.329%2027.926%20C%2018.199%2027.823999999999998%2016.212%2027.814%2016.314%2026.023999999999997%20C%2016.407%2024.400999999999996%2018.354%2024.650999999999996%2019.793%2024.863999999999997%20L%2030.430999999999997%2026.637999999999998%20L%2029.901999999999997%2029.229%20Z'%20fill='%233b88c3'%20id='08'%3e%3c/path%3e%3cpath%20d='M%2030.43%2026.639%20L%2026.208%2025.915%20C%2025.714%2025.826%2025.273999999999997%2026.561999999999998%2025.252%2027.340999999999998%20C%2025.227%2028.206999999999997%2025.479%2028.644999999999996%2025.977999999999998%2028.746999999999996%20L%2030.122%2029.258999999999997%20L%2030.43%2026.638999999999996%20Z'%20fill='%2388c9f9'%20id='09'%3e%3c/path%3e%3cpath%20d='M%2034.918%2026.341%20L%2032.296%2028.752000000000002%20L%2027.608999999999998%2023.655%20L%2030.230999999999998%2021.244%20C%2031.592%2019.992%2033.73%2020.082%2034.982%2021.443%20L%2035.117%2021.59%20C%2036.367999999999995%2022.951999999999998%2036.278999999999996%2025.089%2034.918%2026.341%20Z'%20fill='%233b88c3'%20id='10'%3e%3c/path%3e%3cellipse%20transform='rotate(-42.597%2029.954%2026.205)'%20fill='%2388C9F9'%20cx='29.952'%20cy='26.203'%20rx='2.77'%20ry='3.462'%20id='11'%3e%3c/ellipse%3e%3cellipse%20transform='rotate(-42.597%2029.954%2026.205)'%20fill='%23269'%20cx='29.952'%20cy='26.203'%20rx='1.385'%20ry='2.077'%20id='12'%3e%3c/ellipse%3e%3ccircle%20fill='%2355ACEE'%20cx='2.5'%20cy='33.5'%20r='1.5'%20id='13'%3e%3c/circle%3e%3ccircle%20fill='%2355ACEE'%20cx='29'%20cy='2'%20r='2'%20id='14'%3e%3c/circle%3e%3cpath%20d='%20M%2026%205%20L%2022%206%20L%2023%202%20Z'%20fill='%23ea596e'%20id='15'%3e%3c/path%3e%3cpath%20d='M%204.864%2029.246%20L%202.526%2023.63%20L%200.412%2029.675%20Z'%20fill='%23ea596e'%20id='16'%3e%3c/path%3e%3cpath%20d='M%2031.999%2013%20L%2036%207.999%20L%2033%206%20Z'%20fill='%2377b255'%20id='17'%3e%3c/path%3e%3c/svg%3e", v2 = "data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%2036%2036'%3e%3ccircle%20fill='%23FFCC4D'%20cx='18'%20cy='18'%20r='18'%20id='00'%3e%3c/circle%3e%3cpath%20d='M%2020.996%2027%20C%2020.892999999999997%2027%2020.79%2026.984%2020.686999999999998%2026.951%20C%2018.926999999999996%2026.38%2017.071999999999996%2026.38%2015.311999999999998%2026.951%20C%2014.787999999999997%2027.12%2014.222999999999997%2026.834%2014.051999999999998%2026.309%20C%2013.880999999999998%2025.784000000000002%2014.168999999999999%2025.220000000000002%2014.694999999999999%2025.049%20C%2016.857%2024.347%2019.142%2024.347%2021.304%2025.049%20C%2021.828999999999997%2025.22%2022.116999999999997%2025.784%2021.947%2026.309%20C%2021.81%2026.73%2021.418%2027%2020.996%2027%20Z'%20fill='%2365471b'%20id='01'%3e%3c/path%3e%3cpath%20d='M%2030.335%2012.068%20C%2029.432000000000002%2014.812999999999999%2026.85%2016.783%2023.841%2016.783%20C%2023.697000000000003%2016.783%2023.552%2016.778000000000002%2023.406000000000002%2016.769000000000002%20C%2021.929000000000002%2016.676000000000002%2020.564000000000004%2016.114%2019.456000000000003%2015.185000000000002%20C%2019.492000000000004%2015.680000000000001%2019.532000000000004%2016.182000000000002%2019.592000000000002%2016.725%20C%2019.744000000000003%2018.113%2020.476000000000003%2019.207%2021.708000000000002%2019.888%20C%2022.528000000000002%2020.342000000000002%2023.508000000000003%2020.576%2024.521%2020.64%20C%2026.255000000000003%2020.749000000000002%2028.091%2020.36%2029.394000000000002%2019.731%20C%2030.771%2019.066000000000003%2031.666%2017.869%2031.85%2016.446%20C%2032.033%2015.031000000000002%2031.496000000000002%2013.522000000000002%2030.335%2012.068000000000001%20Z'%20fill='%23ffffff'%20id='02'%3e%3c/path%3e%3cpath%20d='M%2021.351%207.583%20C%2020.054%208.133000000000001%2019.404%209.884%2019.374%2012.872%20L%2019.413%2012.94%20C%2020.31%2014.259%2021.786%2015.164%2023.501%2015.271999999999998%20C%2023.615000000000002%2015.278999999999998%2023.729000000000003%2015.282999999999998%2023.842000000000002%2015.282999999999998%20C%2026.476000000000003%2015.282999999999998%2028.691000000000003%2013.345999999999998%2029.095000000000002%2010.758999999999997%20C%2028.980000000000004%2010.653999999999996%2028.874000000000002%2010.546999999999997%2028.752000000000002%2010.442999999999996%20C%2025.037000000000003%207.272999999999996%2022.285000000000004%207.185999999999996%2021.351000000000003%207.582999999999997%20Z'%20fill='%2365471b'%20id='03'%3e%3c/path%3e%3cpath%20d='M%2023.841%2016.783%20C%2026.85%2016.783%2029.432000000000002%2014.813%2030.335%2012.068000000000001%20C%2029.981%2011.625000000000002%2029.564%2011.188%2029.094%2010.759000000000002%20C%2028.69%2013.346000000000002%2026.475%2015.283000000000001%2023.841%2015.283000000000001%20C%2023.728%2015.283000000000001%2023.614%2015.279000000000002%2023.5%2015.272000000000002%20C%2021.785%2015.164000000000001%2020.309%2014.259000000000002%2019.412%2012.940000000000001%20L%2019.372999999999998%2012.872000000000002%20C%2019.365999999999996%2013.573000000000002%2019.394%2014.345000000000002%2019.455999999999996%2015.185000000000002%20C%2020.563999999999997%2016.114%2021.928999999999995%2016.676000000000002%2023.405999999999995%2016.769000000000002%20C%2023.551999999999996%2016.779000000000003%2023.696999999999996%2016.783%2023.840999999999994%2016.783%20Z'%20fill='%23f4900c'%20id='04'%3e%3c/path%3e%3ccircle%20fill='%23FFF'%20cx='21.413'%20cy='10.705'%20r='1.107'%20id='05'%3e%3c/circle%3e%3cpath%20d='M%2012.159%2016.783%20C%209.15%2016.783%206.5680000000000005%2014.813%205.665000000000001%2012.068000000000001%20C%204.504000000000001%2013.522000000000002%203.968000000000001%2015.031000000000002%204.150000000000001%2016.445%20C%204.335000000000001%2017.868000000000002%205.229000000000001%2019.066%206.606000000000002%2019.73%20C%207.909000000000002%2020.359%209.744000000000002%2020.748%2011.479000000000003%2020.639%20C%2012.492000000000003%2020.575%2013.472000000000003%2020.342%2014.292000000000003%2019.887%20C%2015.523000000000003%2019.206%2016.255000000000003%2018.112000000000002%2016.408000000000005%2016.724%20C%2016.468000000000004%2016.182%2016.508000000000006%2015.682%2016.544000000000004%2015.188%20C%2015.441000000000004%2016.111%2014.074000000000003%2016.675%2012.594000000000005%2016.768%20C%2012.448000000000004%2016.779%2012.303000000000004%2016.783%2012.159000000000004%2016.783%20Z'%20fill='%23ffffff'%20id='06'%3e%3c/path%3e%3cpath%20d='M%2012.159%2015.283%20C%2012.272%2015.283%2012.386000000000001%2015.279%2012.5%2015.272%20C%2014.215%2015.164%2015.690999999999999%2014.259%2016.588%2012.940000000000001%20L%2016.627000000000002%2012.872000000000002%20C%2016.596000000000004%209.884000000000002%2015.947000000000003%208.133000000000003%2014.650000000000002%207.583000000000002%20C%2013.716000000000003%207.186000000000002%2010.963000000000003%207.273000000000002%207.249000000000002%2010.442000000000002%20C%207.1270000000000024%2010.546000000000001%207.022000000000002%2010.653000000000002%206.906000000000002%2010.758000000000003%20C%207.310000000000002%2013.346000000000004%209.525000000000002%2015.283000000000003%2012.159000000000002%2015.283000000000003%20Z'%20fill='%2365471b'%20id='07'%3e%3c/path%3e%3cpath%20d='M%2016.626%2012.872%20L%2016.587%2012.94%20C%2015.69%2014.259%2014.213999999999999%2015.164%2012.498999999999999%2015.271999999999998%20C%2012.384999999999998%2015.278999999999998%2012.270999999999999%2015.282999999999998%2012.158%2015.282999999999998%20C%209.524%2015.282999999999998%207.308999999999999%2013.345999999999998%206.904999999999999%2010.758999999999997%20C%206.435%2011.187999999999997%206.017999999999999%2011.624999999999996%205.664%2012.067999999999996%20C%206.567%2014.812999999999995%209.149%2016.782999999999994%2012.158%2016.782999999999994%20C%2012.302%2016.782999999999994%2012.447%2016.777999999999995%2012.593%2016.768999999999995%20C%2014.073%2016.675999999999995%2015.44%2016.111999999999995%2016.543%2015.188999999999995%20C%2016.605%2014.347999999999995%2016.634%2013.574999999999994%2016.625999999999998%2012.871999999999995%20Z'%20fill='%23f4900c'%20id='08'%3e%3c/path%3e%3cpath%20d='M%209.781%2011.81%20C%2010.391%2011.772%2010.855%2011.246%2010.816%2010.636000000000001%20C%2010.778%2010.026000000000002%2010.252%209.562000000000001%209.642000000000001%209.600000000000001%20C%209.032000000000002%209.638000000000002%208.568000000000001%2010.164000000000001%208.606000000000002%2010.774000000000001%20C%208.645000000000001%2011.384%209.171000000000001%2011.848%209.781000000000002%2011.81%20Z'%20fill='%23ffffff'%20id='09'%3e%3c/path%3e%3c/svg%3e", M2 = "data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%2036%2036'%3e%3cpath%20d='M%2033.541%2023.198%20C%2033.904999999999994%2021.62%2033.784%2019.932000000000002%2033.083%2018.252000000000002%20C%2032.405%2016.627000000000002%2031.235999999999997%2015.342000000000002%2029.811999999999998%2014.479000000000003%20C%2030.13%2013.287000000000003%2030.046%2012.004000000000003%2029.487999999999996%2010.729000000000003%20C%2028.646999999999995%208.809000000000003%2026.827999999999996%207.528000000000002%2024.775999999999996%207.167000000000003%20C%2025.024999999999995%206.595000000000003%2025.104999999999997%205.878000000000004%2024.811999999999998%205.0000000000000036%20C%2023.811999999999998%202.0000000000000036%2019.811999999999998%204.0000000000000036%2016.811999999999998%200.0010000000000038867%20C%2014.371999999999998%201.4650000000000039%2013.841999999999997%203.641000000000004%2013.933999999999997%205.488000000000004%20C%2011.512999999999998%205.900000000000004%2010.133999999999997%206.424000000000004%2010.133999999999997%206.424000000000004%20V%206.426000000000004%20C%208.773999999999997%206.9760000000000035%207.811999999999997%208.309000000000005%207.811999999999997%209.868000000000004%20C%207.811999999999997%2010.747000000000003%208.129999999999997%2011.544000000000004%208.639999999999997%2012.180000000000003%20L%207.947999999999997%2012.438000000000002%20L%207.948999999999997%2012.441000000000003%20C%205.618999999999997%2013.312000000000003%203.973999999999997%2015.417000000000002%203.973999999999997%2017.880000000000003%20C%203.973999999999997%2018.927000000000003%204.273999999999997%2019.907000000000004%204.793999999999997%2020.758000000000003%20C%201.971%2022.027%200%2024.781%200%2028%20C%200%2032.418%203.691%2036%208.244%2036%20C%2011.513%2036%2014.803%2035.297%2017.775%2034.335%20C%2020.018%2035.375%2023.47%2036%2028.667%2036%20C%2032.717%2036%2036%2032.717%2036%2028.667%20C%2036%2026.491%2035.047%2024.542%2033.541%2023.198%20Z'%20fill='%23bf6952'%20id='00'%3e%3c/path%3e%3cellipse%20fill='%23F5F8FA'%20cx='13.5'%20cy='15.5'%20rx='3.5'%20ry='4.5'%20id='01'%3e%3c/ellipse%3e%3cellipse%20fill='%23F5F8FA'%20cx='23.5'%20cy='15.5'%20rx='3.5'%20ry='4.5'%20id='02'%3e%3c/ellipse%3e%3cellipse%20fill='%23292F33'%20cx='14'%20cy='15.5'%20rx='2'%20ry='2.5'%20id='03'%3e%3c/ellipse%3e%3cellipse%20fill='%23292F33'%20cx='23'%20cy='15.5'%20rx='2'%20ry='2.5'%20id='04'%3e%3c/ellipse%3e%3cpath%20d='M%209.447%2024.895%20C%209.201%2024.402%209.45%2024%2010%2024%20H%2028%20C%2028.55%2024%2028.799%2024.402%2028.553%2024.895%20C%2028.553%2024.895%2026%2030%2019%2030%20S%209.447%2024.895%209.447%2024.895%20Z'%20fill='%23292f33'%20id='05'%3e%3c/path%3e%3cpath%20d='M%2019%2026%20C%2016.229%2026%2013.843%2026.922%2012.708%2028.256%20C%2014.2%2029.211%2016.253%2030%2019%2030%20S%2023.801000000000002%2029.211%2025.292%2028.256%20C%2024.157%2026.922%2021.771%2026%2019%2026%20Z'%20fill='%23f2abba'%20id='06'%3e%3c/path%3e%3c/svg%3e", S2 = "data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%2036%2036'%3e%3cellipse%20fill='%23F4900C'%20cx='33.5'%20cy='14.5'%20rx='2.5'%20ry='3.5'%20id='00'%3e%3c/ellipse%3e%3cellipse%20fill='%23F4900C'%20cx='2.5'%20cy='14.5'%20rx='2.5'%20ry='3.5'%20id='01'%3e%3c/ellipse%3e%3cpath%20d='%20M%207%2019%20C%207%2019.553%206.552%2020%206%2020%20H%203%20C%202.448%2020%202%2019.553%202%2019%20V%2010%20C%202%209.448%202.448%209%203%209%20H%206%20C%206.552%209%207%209.448%207%2010%20V%2019%20Z'%20fill='%23ffac33'%20id='02'%3e%3c/path%3e%3cpath%20d='M%2034%2019%20C%2034%2019.553%2033.553%2020%2033%2020%20H%2030%20C%2029.447%2020%2029%2019.553%2029%2019%20V%2010%20C%2029%209.448%2029.447%209%2030%209%20H%2033%20C%2033.553%209%2034%209.448%2034%2010%20V%2019%20Z'%20fill='%23ffac33'%20id='03'%3e%3c/path%3e%3cpath%20d='M%2028%205%20C%2028%207.761%2023.522%209%2018%209%20C%2012.477%209%208%207.761%208%205%20S%2012.477%200%2018%200%20C%2023.522%200%2028%202.239%2028%205%20Z'%20fill='%23ffcc4d'%20id='04'%3e%3c/path%3e%3cpath%20d='M%2025%204.083%20C%2025%205.694%2021.865%207%2018%207%20C%2014.134%207%2011%205.694%2011%204.083%20C%2011%202.4720000000000004%2014.134%201.1660000000000004%2018%201.1660000000000004%20C%2021.865000000000002%201.1660000000000004%2025%202.4720000000000004%2025%204.083%20Z'%20fill='%23f4900c'%20id='05'%3e%3c/path%3e%3cpath%20d='M%2030%205.5%20C%2030%206.881%2028.881%207%2027.5%207%20H%208.5%20C%207.119%207%206%206.881%206%205.5%20S%207.119%203%208.5%203%20H%2027.5%20C%2028.881%203%2030%204.119%2030%205.5%20Z'%20fill='%23226699'%20id='06'%3e%3c/path%3e%3cpath%20d='M%2030%206%20H%206%20C%204.896%206%204%206.896%204%208%20V%2034%20H%2032%20V%208%20C%2032%206.896%2031.104%206%2030%206%20Z'%20fill='%2355acee'%20id='07'%3e%3c/path%3e%3cpath%20d='M%2035%2033%20V%2032%20C%2035%2030.896%2034.104%2030%2033%2030%20H%2022.071%20L%2018.707%2033.364%20C%2018.316000000000003%2033.754999999999995%2017.684%2033.754999999999995%2017.293%2033.364%20L%2013.929%2030%20H%203%20C%201.896%2030%201%2030.896%201%2032%20V%2033%20C%201%2034.104%200.896%2035%202%2035%20H%2034%20C%2035.104%2035%2035%2034.104%2035%2033%20Z'%20fill='%233b88c3'%20id='08'%3e%3c/path%3e%3ccircle%20fill='%23FFF'%20cx='24.5'%20cy='14.5'%20r='4.5'%20id='09'%3e%3c/circle%3e%3ccircle%20fill='%23DD2E44'%20cx='24.5'%20cy='14.5'%20r='2.721'%20id='10'%3e%3c/circle%3e%3ccircle%20fill='%23FFF'%20cx='11.5'%20cy='14.5'%20r='4.5'%20id='11'%3e%3c/circle%3e%3cpath%20d='M%2029%2025.5%20C%2029%2026.881%2027.881%2028%2026.5%2028%20H%209.5%20C%208.119%2028%207%2026.881%207%2025.5%20S%208.119%2023%209.5%2023%20H%2026.5%20C%2027.881%2023%2029%2024.119%2029%2025.5%20Z'%20fill='%23f5f8fa'%20id='12'%3e%3c/path%3e%3cpath%20d='%20M%2027%2023.05%20V%2027.949%20C%2028.141%2027.717000000000002%2029%2026.709000000000003%2029%2025.499000000000002%20S%2028.141%2023.282000000000004%2027%2023.050000000000004%20Z'%20fill='%23ccd6dd'%20id='13'%3e%3c/path%3e%3cpath%20d='%20M%207%2025.5%20C%207%2026.71%207.859%2027.718%209%2027.95%20V%2023.049999999999997%20C%207.859%2023.281999999999996%207%2024.289999999999996%207%2025.499999999999996%20Z'%20fill='%23ccd6dd'%20id='14'%3e%3c/path%3e%3cpath%20d='%20M%2022%2023%20H%2024%20V%2028%20H%2022%20Z'%20fill='%23ccd6dd'%20id='15'%3e%3c/path%3e%3cpath%20d='%20M%2012%2023%20H%2014%20V%2028%20H%2012%20Z'%20fill='%23ccd6dd'%20id='16'%3e%3c/path%3e%3cpath%20d='M%2017%2023%20H%2019%20V%2028%20H%2017%20Z'%20fill='%23ccd6dd'%20id='17'%3e%3c/path%3e%3ccircle%20fill='%23DD2E44'%20cx='11.5'%20cy='14.5'%20r='2.721'%20id='18'%3e%3c/circle%3e%3c/svg%3e", Z2 = "data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%2036%2036'%3e%3cpath%20d='M%2018%200%20C%208.06%200%200%208.06%200%2018%20C%200%2024.051000000000002%202.996%2029.392%207.574%2032.655%20C%207.678%2026.217%205.337%2019%201.404%2019%20C%200.94%2019%200.564%2019.066%200.2509999999999999%2019.183%20C%200.554%2018.426%201.211%2018%202.44%2018%20C%206.709999999999999%2018%209.106%2026.506%208.532%2033.288%20C%2011.286%2034.997%2014.522%2036%2018%2036%20C%2021.479%2036%2024.716%2034.996%2027.47%2033.287%20C%2026.893%2026.48%2029.288%2018%2033.561%2018%20C%2034.794%2018%2035.453%2018.426%2035.753%2019.183%20C%2035.439%2019.066%2035.062%2019%2034.596000000000004%2019%20C%2030.658000000000005%2019%2028.318000000000005%2026.198999999999998%2028.426000000000002%2032.655%20C%2033.005%2029.392%2036%2024.051%2036%2018%20C%2036%208.06%2027.941000000000003%200%2018%200%20Z'%20fill='%23ffcc4d'%20id='00'%3e%3c/path%3e%3cpath%20d='M%2018%200%20C%208.06%200%200%208.06%200%2018%20C%200%2019.192%200.123%2020.356%200.344%2021.484%20C%200.578%2020.621000000000002%200.944%2019.793000000000003%201.4020000000000001%2019%20C%200.9390000000000001%2019%200.5640000000000002%2019.066%200.2520000000000002%2019.183%20C%200.5160000000000002%2018.524%201.0740000000000003%2018.134999999999998%202.0200000000000005%2018.041%20C%205.012%2013.862%2011.037%2011%2018%2011%20C%2024.964%2011%2030.988%2013.861%2033.980000000000004%2018.04%20C%2034.93000000000001%2018.134%2035.49%2018.522%2035.752%2019.183%20C%2035.440000000000005%2019.066%2035.063%2019%2034.599000000000004%2019%20C%2035.057%2019.793%2035.422000000000004%2020.621%2035.657000000000004%2021.484%20C%2035.878%2020.356%2036.00000000000001%2019.192%2036.00000000000001%2018%20C%2036.00000000000001%208.06%2027.94100000000001%200%2018.000000000000007%200%20Z'%20fill='%23bdddf4'%20id='01'%3e%3c/path%3e%3cpath%20d='M%2028.652%2011.91%20C%2029.598000000000003%2015.086%2028.545%2018.203%2026.3%2018.872%20C%2024.054000000000002%2019.542%2021.466%2017.509999999999998%2020.521%2014.334%20C%2019.575%2011.158999999999999%2020.628%208.041%2022.872%207.372%20C%2025.117%206.702999999999999%2027.705%208.735%2028.652%2011.91%20Z'%20fill='%23f5f8fa'%20id='02'%3e%3c/path%3e%3cpath%20d='M%207.347%2011.91%20C%206.401000000000001%2015.086%207.454000000000001%2018.203%209.700000000000001%2018.872%20C%2011.946000000000002%2019.542%2014.534%2017.509999999999998%2015.479000000000001%2014.334%20C%2016.425%2011.158999999999999%2015.373000000000001%208.041%2013.128%207.372%20C%2010.882%206.702999999999999%208.294%208.735%207.347%2011.91%20Z'%20fill='%23f5f8fa'%20id='03'%3e%3c/path%3e%3cpath%20d='M%2018%2018%20C%2015.243%2018%2013%2020.243%2013%2023%20V%2029%20C%2013%2031.757%2015.243%2034%2018%2034%20S%2023%2031.757%2023%2029%20V%2023%20C%2023%2020.243%2020.757%2018%2018%2018%20Z'%20fill='%23664500'%20id='04'%3e%3c/path%3e%3cpath%20d='M%2035.753%2019.183%20C%2035.439%2019.066%2035.062%2019%2034.596000000000004%2019%20C%2029.955000000000005%2019%2027.531000000000002%2029.002000000000002%2028.723000000000003%2036%20H%2035.183%20C%2033.277%2028.955%2036.839%2021.911%2035.753%2019.183%20Z'%20fill='%23fcab40'%20id='05'%3e%3c/path%3e%3cpath%20d='M%201.404%2019%20C%200.94%2019%200.564%2019.066%200.2509999999999999%2019.183%20C%200.3229999999999999%2019.004%200.4179999999999999%2018.847%200.5319999999999999%2018.707%20C%20-1.33%2020.998%202.849%2028.54%200.818%2036%20H%207.278%20C%208.468%2029.04%206.042999999999999%2019%201.404%2019%20Z'%20fill='%23fcab40'%20id='06'%3e%3c/path%3e%3c/svg%3e", L2 = "data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%2036%2036'%3e%3cpath%20d='M%2035%2017%20C%2035%2026.389%2027.389%2034%2018%2034%20S%201%2026.389%201%2017%20S%208.611%200%2018%200%20S%2035%207.611%2035%2017'%20fill='%23ffcb4c'%20id='00'%3e%3c/path%3e%3cellipse%20fill='%2365471B'%20cx='17.812'%20cy='23.125'%20rx='4.062'%20ry='1.93'%20id='01'%3e%3c/ellipse%3e%3cpath%20d='M%2025.35%2025.981%20L%2025.317%2025.961000000000002%20C%2024.478%2025.446%2023.37%2025.711000000000002%2022.855%2026.55%20L%2022.704%2026.795%20C%2022.162%2026.233%2021.454%2025.821%2020.636%2025.654000000000003%20L%2019.237%2025.368000000000002%20L%2020.508999999999997%2019.144000000000002%20C%2020.705999999999996%2018.179000000000002%2020.077999999999996%2017.229000000000003%2019.113999999999997%2017.032000000000004%20L%2019.075999999999997%2017.024000000000004%20C%2018.110999999999997%2016.827000000000005%2017.160999999999998%2017.455000000000005%2016.964%2018.419000000000004%20L%2015.290999999999999%2026.602000000000004%20L%2015.275999999999998%2026.676000000000005%20L%2014.962999999999997%2028.207000000000004%20L%2014.961999999999998%2028.217000000000006%20L%2013.833999999999998%2033.75000000000001%20C%2013.613999999999997%2034.82800000000001%2014.103999999999997%2036.00000000000001%2015.728999999999997%2036.00000000000001%20H%2019%20C%2021.804%2036.00000000000001%2022.634999999999998%2034.99000000000001%2023.198%2032.90700000000001%20L%2025.939%2028.44400000000001%20C%2026.453%2027.60500000000001%2026.189%2026.49700000000001%2025.35%2025.98100000000001%20Z'%20fill='%23f19020'%20id='02'%3e%3c/path%3e%3cpath%20d='M%206.114%2010.271%20C%205.8919999999999995%2010.271%205.669%2010.202%205.477%2010.058000000000002%20C%205.008%209.706000000000001%204.913%209.040000000000001%205.265000000000001%208.571000000000002%20C%208.731000000000002%203.9490000000000016%2013.357000000000001%203.8960000000000017%2013.552000000000001%203.8960000000000017%20C%2014.139000000000001%203.8960000000000017%2014.614%204.372000000000002%2014.614%204.959000000000001%20C%2014.614%205.544000000000001%2014.141%206.019000000000002%2013.556000000000001%206.021000000000002%20C%2013.39%206.0230000000000015%209.764000000000001%206.112000000000002%206.964000000000001%209.846000000000002%20C%206.756000000000001%2010.124000000000002%206.437000000000001%2010.271000000000003%206.114000000000002%2010.271000000000003%20Z'%20fill='%2365471b'%20id='03'%3e%3c/path%3e%3cpath%20d='M%2021.777999999999995%2013.221999999999998%20C%2021.777999999999995%2014.612999999999998%2022.623999999999995%2015.740999999999998%2023.666999999999994%2015.740999999999998%20C%2024.709999999999994%2015.740999999999998%2025.555999999999994%2014.613999999999997%2025.555999999999994%2013.221999999999998%20C%2025.555999999999994%2011.830999999999998%2024.710999999999995%2010.702999999999998%2023.666999999999994%2010.702999999999998%20C%2022.622999999999994%2010.703999999999997%2021.777999999999995%2011.830999999999998%2021.777999999999995%2013.221999999999998%20Z'%20fill='%2365471b'%20id='04'%3e%3c/path%3e%3cpath%20d='M%2029.885999999999996%2010.270999999999997%20C%2030.107999999999997%2010.270999999999997%2030.330999999999996%2010.201999999999996%2030.522999999999996%2010.057999999999998%20C%2030.992999999999995%209.705999999999998%2031.086999999999996%209.039999999999997%2030.734999999999996%208.570999999999998%20C%2027.268999999999995%203.948999999999998%2022.642999999999994%203.895999999999998%2022.447999999999993%203.895999999999998%20C%2021.860999999999994%203.895999999999998%2021.385999999999992%204.371999999999998%2021.385999999999992%204.958999999999998%20C%2021.385999999999992%205.543999999999998%2021.85899999999999%206.018999999999998%2022.443999999999992%206.020999999999998%20C%2022.609999999999992%206.022999999999998%2026.23599999999999%206.111999999999998%2029.03599999999999%209.845999999999998%20C%2029.24399999999999%2010.123999999999999%2029.56299999999999%2010.270999999999999%2029.885999999999992%2010.270999999999999%20Z'%20fill='%2365471b'%20id='05'%3e%3c/path%3e%3cpath%20d='M%2014.221999999999998%2013.221999999999998%20C%2014.221999999999998%2014.612999999999998%2013.375999999999998%2015.740999999999998%2012.332999999999998%2015.740999999999998%20C%2011.29%2015.740999999999998%2010.443999999999999%2014.613999999999997%2010.443999999999999%2013.221999999999998%20C%2010.443999999999999%2011.830999999999998%2011.289%2010.702999999999998%2012.332999999999998%2010.702999999999998%20C%2013.375999999999998%2010.703999999999997%2014.221999999999998%2011.830999999999998%2014.221999999999998%2013.221999999999998%20Z'%20fill='%2365471b'%20id='06'%3e%3c/path%3e%3cpath%20d='M%2019.15%2035.473%20C%2018.897%2035.473%2018.619999999999997%2035.442%2018.317%2035.371%20C%2017.707%2035.227000000000004%2017.277%2034.872%2017.137%2034.396%20C%2017.019000000000002%2033.995%2017.127%2033.571%2017.426000000000002%2033.261%20C%2017.814000000000004%2032.859%2018.429000000000002%2032.727000000000004%2019.121000000000002%2032.903000000000006%20C%2019.302000000000003%2032.949000000000005%2019.412000000000003%2033.13400000000001%2019.366000000000003%2033.316%20C%2019.320000000000004%2033.496%2019.137000000000004%2033.607%2018.953000000000003%2033.561%20C%2018.508000000000003%2033.447%2018.128000000000004%2033.511%2017.915000000000003%2033.732%20C%2017.787000000000003%2033.864%2017.740000000000002%2034.041%2017.788000000000004%2034.205%20C%2017.857000000000003%2034.440999999999995%2018.107000000000003%2034.626%2018.473000000000003%2034.711%20C%2019.653000000000002%2034.988%2020.306%2034.525%2020.647000000000002%2034.086%20C%2021.155%2033.433%2021.215000000000003%2032.548%2021.034000000000002%2032.201%20C%2020.612000000000002%2031.389%2018.985000000000003%2031.209%2018.394000000000002%2031.208000000000002%20C%2018.207%2031.208000000000002%2018.055000000000003%2031.056%2018.055000000000003%2030.869000000000003%20C%2018.055000000000003%2030.682000000000002%2018.207000000000004%2030.530000000000005%2018.394000000000002%2030.530000000000005%20C%2018.497000000000003%2030.530000000000005%2020.936%2030.545000000000005%2021.636000000000003%2031.889000000000003%20C%2021.941000000000003%2032.474000000000004%2021.854000000000003%2033.64%2021.182000000000002%2034.503%20C%2020.874000000000002%2034.897%2020.239%2035.473%2019.150000000000002%2035.473%20Z'%20fill='%2365471b'%20id='07'%3e%3c/path%3e%3cpath%20d='M%2022.409%2030.743%20C%2022.389%2030.743%2022.366999999999997%2030.741%2022.345%2030.737%20C%2022.160999999999998%2030.703%2022.04%2030.525%2022.076%2030.34%20C%2022.135%2030.028%2022.074%2029.753%2021.889%2029.501%20C%2021.299%2028.693%2019.599999999999998%2028.326%2018.994999999999997%2028.253%20C%2018.808999999999997%2028.231%2018.676%2028.061%2018.698999999999998%2027.876%20C%2018.720999999999997%2027.69%2018.883%2027.555%2019.075999999999997%2027.580000000000002%20C%2019.176999999999996%2027.591%2021.549999999999997%2027.89%2022.435999999999996%2029.101000000000003%20C%2022.733999999999995%2029.508000000000003%2022.836999999999996%2029.969%2022.741999999999997%2030.469%20C%2022.711%2030.630000000000003%2022.569%2030.743000000000002%2022.409%2030.743000000000002%20Z'%20fill='%2365471b'%20id='08'%3e%3c/path%3e%3c/svg%3e", A2 = "data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%2036%2036'%3e%3cpath%20d='M%2034%2016%20C%2034%206%2026.837%200%2018%200%20C%209.164%200%202%206%202%2016%20C%202%2021.573999999999998%202.002%2026.387999999999998%208%2028.64%20V%2033%20C%208%2034.657%209.343%2036%2011%2036%20S%2014%2034.657%2014%2033%20V%2029.845%20C%2014.324%2029.872%2014.659%2029.895%2015%2029.915%20V%2033%20C%2015%2034.657%2016.343%2036%2018%2036%20S%2021%2034.657%2021%2033%20V%2029.915%20C%2021.342%2029.894%2021.676%2029.872%2022%2029.845%20V%2033%20C%2022%2034.657%2023.344%2036%2025%2036%20C%2026.657%2036%2028%2034.657%2028%2033%20V%2028.64%20C%2033.998%2026.388%2034%2021.574%2034%2016%20Z'%20fill='%23ccd6dd'%20id='00'%3e%3c/path%3e%3ccircle%20fill='%23292F33'%20cx='11'%20cy='14'%20r='5'%20id='01'%3e%3c/circle%3e%3ccircle%20fill='%23292F33'%20cx='25'%20cy='14'%20r='5'%20id='02'%3e%3c/circle%3e%3cpath%20d='M%2019.903%2023.062%20C%2019.651%2022.449%2018.9%2022%2018%2022%20S%2016.348%2022.449%2016.097%2023.062%20C%2015.465000000000002%2023.238%2015.000000000000002%2023.812%2015.000000000000002%2024.5%20C%2015.000000000000002%2025.328%2015.671000000000001%2026%2016.5%2026%20C%2017.155%2026%2017.706%2025.578%2017.91%2024.993%20C%2017.94%2024.994%2017.969%2025%2018%2025%20S%2018.06%2024.994%2018.09%2024.993%20C%2018.294999999999998%2025.578%2018.846%2026%2019.5%2026%20C%2020.328%2026%2021%2025.328%2021%2024.5%20C%2021%2023.812%2020.534%2023.239%2019.903%2023.062%20Z'%20fill='%23292f33'%20id='03'%3e%3c/path%3e%3c/svg%3e", j2 = "data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%2036%2036'%3e%3ccircle%20fill='%23FFCC4D'%20cx='18'%20cy='18'%20r='18'%20id='00'%3e%3c/circle%3e%3ccircle%20fill='%23664500'%20cx='18'%20cy='26'%20r='3'%20id='01'%3e%3c/circle%3e%3cpath%20d='%20M%2027.312%2016.612%20C%2027.136000000000003%2016.468999999999998%2026.886000000000003%2016.464%2026.702%2016.598%20C%2026.69%2016.607%2025.441000000000003%2017.5%2023%2017.5%20C%2020.56%2017.5%2019.31%2016.607%2019.3%2016.6%20C%2019.117%2016.463%2018.866%2016.467000000000002%2018.689%2016.609%20C%2018.511%2016.751%2018.451%2016.995%2018.543%2017.203000000000003%20C%2018.602999999999998%2017.338000000000005%2020.043%2020.500000000000004%2023%2020.500000000000004%20C%2025.958%2020.500000000000004%2027.397%2017.338000000000005%2027.457%2017.203000000000003%20C%2027.549%2016.996000000000002%2027.489%2016.754%2027.312%2016.612000000000002%20Z'%20fill='%23664500'%20id='02'%3e%3c/path%3e%3cpath%20d='M%2017.312%2016.612%20C%2017.136000000000003%2016.468999999999998%2016.885%2016.465%2016.702%2016.598%20C%2016.69%2016.607%2015.442000000000002%2017.5%2013.000000000000002%2017.5%20C%2010.559000000000001%2017.5%209.310000000000002%2016.607%209.3%2016.6%20C%209.117%2016.463%208.865%2016.467000000000002%208.689%2016.609%20C%208.511%2016.751%208.451%2016.995%208.543%2017.203000000000003%20C%208.603%2017.338000000000005%2010.043%2020.500000000000004%2013%2020.500000000000004%20C%2015.958%2020.500000000000004%2017.397%2017.338000000000005%2017.457%2017.203000000000003%20C%2017.549%2016.996000000000002%2017.489%2016.754%2017.312%2016.612000000000002%20Z'%20fill='%23664500'%20id='03'%3e%3c/path%3e%3cpath%20d='M%2034.43%2012.534%20C%2034.434%2012.49%2034.453%2012.457%2034.453%2012.411000000000001%20C%2034.453%2011.657000000000002%2033.905%2011.223%2033.228%2011.223%20H%2029.646%20L%2033.925%205.23%20C%2034.131%204.947%2034.206999999999994%204.777%2034.206999999999994%204.4190000000000005%20C%2034.206999999999994%203.6840000000000006%2033.56699999999999%203.5700000000000003%2033.321999999999996%203.5700000000000003%20H%2027.972999999999995%20L%2027.940999999999995%202.8820000000000006%20S%2026.531999999999996%203.7130000000000005%2026.437999999999995%203.7700000000000005%20S%2025.932999999999996%204.142%2025.932999999999996%204.757000000000001%20C%2025.932999999999996%205.511000000000001%2026.478999999999996%205.944000000000001%2027.157999999999998%205.944000000000001%20H%2030.307%20L%2026.046%2011.937000000000001%20C%2025.951999999999998%2012.088000000000001%2025.802%2012.370000000000001%2025.802%2012.672%20C%2025.802%2013.294%2026.31%2013.596%2026.913%2013.596%20H%2033.228%20C%2033.486000000000004%2013.596%2033.743%2013.52%2033.909%2013.42%20L%2035.412%2012.532%20H%2034.43%20Z'%20fill='%23ffac33'%20id='04'%3e%3c/path%3e%3cpath%20d='M%2031.771%205.084%20H%2028.622%20C%2027.943%205.084%2027.397%204.651%2027.397%203.8969999999999994%20S%2027.942999999999998%202.7089999999999996%2028.622%202.7089999999999996%20H%2034.786%20C%2035.031%202.7089999999999996%2035.671%202.8219999999999996%2035.671%203.5569999999999995%20C%2035.671%203.9149999999999996%2035.595%204.084999999999999%2035.389%204.367999999999999%20L%2031.110000000000003%2010.361%20H%2034.692%20C%2035.369%2010.361%2035.917%2010.794%2035.917%2011.548%20S%2035.369%2012.735%2034.692%2012.735%20H%2028.377%20C%2027.773999999999997%2012.735%2027.266%2012.433%2027.266%2011.811%20C%2027.266%2011.509%2027.415999999999997%2011.227%2027.509999999999998%2011.076%20L%2031.770999999999997%205.0840000000000005%20Z'%20fill='%232a6797'%20id='05'%3e%3c/path%3e%3cpath%20d='M%2024.886%207.48%20C%2024.889%207.447%2024.904%207.422000000000001%2024.904%207.388000000000001%20C%2024.904%206.824000000000001%2024.494%206.4990000000000006%2023.987%206.4990000000000006%20H%2021.305%20L%2024.508%202.0120000000000005%20C%2024.663999999999998%201.8000000000000005%2024.72%201.6730000000000005%2024.72%201.4060000000000006%20C%2024.72%200.8560000000000005%2024.241%200.7710000000000006%2024.057%200.7710000000000006%20H%2020.052999999999997%20L%2020.028999999999996%200.25600000000000056%20S%2018.973999999999997%200.8780000000000006%2018.903999999999996%200.9210000000000006%20C%2018.833999999999996%200.9640000000000006%2018.525999999999996%201.2000000000000006%2018.525999999999996%201.6600000000000006%20C%2018.525999999999996%202.2240000000000006%2018.934999999999995%202.5490000000000004%2019.442999999999998%202.5490000000000004%20H%2021.8%20L%2018.61%207.0360000000000005%20C%2018.54%207.149000000000001%2018.427%207.36%2018.427%207.586%20C%2018.427%208.052%2018.807%208.277000000000001%2019.259%208.277000000000001%20H%2023.987000000000002%20C%2024.180000000000003%208.277000000000001%2024.372000000000003%208.22%2024.497000000000003%208.145000000000001%20L%2025.622000000000003%207.480000000000001%20H%2024.886000000000003%20Z'%20fill='%23ffac33'%20id='06'%3e%3c/path%3e%3cpath%20d='M%2022.896%201.903%20H%2020.539%20C%2020.031000000000002%201.903%2019.622%201.579%2019.622%201.014%20C%2019.622%200.45000000000000007%2020.031%200.125%2020.539%200.125%20H%2025.154000000000003%20C%2025.338000000000005%200.125%2025.817000000000004%200.21000000000000002%2025.817000000000004%200.76%20C%2025.817000000000004%201.028%2025.760000000000005%201.155%2025.606000000000005%201.367%20L%2022.403000000000006%205.854%20H%2025.085000000000004%20C%2025.590000000000003%205.854%2026.000000000000004%206.178%2026.000000000000004%206.743%20S%2025.590000000000003%207.632000000000001%2025.083000000000002%207.632000000000001%20H%2020.355000000000004%20C%2019.903000000000002%207.632000000000001%2019.523000000000003%207.406000000000001%2019.523000000000003%206.941000000000001%20C%2019.523000000000003%206.715000000000001%2019.636000000000003%206.5040000000000004%2019.706000000000003%206.391000000000001%20L%2022.896000000000004%201.9030000000000005%20Z'%20fill='%232a6797'%20id='07'%3e%3c/path%3e%3cpath%20d='M%2017.741%2010.425%20C%2017.744%2010.397%2017.756%2010.376000000000001%2017.756%2010.346%20C%2017.756%209.863%2017.405%209.585%2016.971%209.585%20H%2014.676%20L%2017.418%205.745000000000001%20C%2017.55%205.564000000000001%2017.599%205.455000000000001%2017.599%205.226000000000001%20C%2017.599%204.755000000000001%2017.189%204.682%2017.032%204.682%20H%2013.605%20L%2013.584%204.2410000000000005%20L%2012.621%204.8100000000000005%20C%2012.561%204.847%2012.297%205.048%2012.297%205.4430000000000005%20C%2012.297%205.926%2012.647%206.204000000000001%2013.082%206.204000000000001%20H%2015.099%20L%2012.369%2010.044%20C%2012.309%2010.141%2012.212%2010.322000000000001%2012.212%2010.515%20C%2012.212%2010.914000000000001%2012.538%2011.107000000000001%2012.924%2011.107000000000001%20H%2016.971%20C%2017.136%2011.107000000000001%2017.301%2011.058000000000002%2017.407%2010.994000000000002%20L%2018.37%2010.425%20H%2017.741%20Z'%20fill='%23ffac33'%20id='08'%3e%3c/path%3e%3cpath%20d='M%2016.037%205.652%20H%2014.02%20C%2013.584999999999999%205.652%2013.235%205.3740000000000006%2013.235%204.891%20S%2013.584999999999999%204.13%2014.02%204.13%20H%2017.97%20C%2018.127%204.13%2018.537%204.203%2018.537%204.6739999999999995%20C%2018.537%204.903%2018.489%205.012%2018.355999999999998%205.193%20L%2015.613999999999997%209.033%20H%2017.909%20C%2018.343%209.033%2018.694%209.311%2018.694%209.793999999999999%20S%2018.343%2010.554999999999998%2017.909%2010.554999999999998%20H%2013.861999999999998%20C%2013.475999999999999%2010.554999999999998%2013.149999999999999%2010.361999999999998%2013.149999999999999%209.962999999999997%20C%2013.149999999999999%209.769999999999998%2013.245999999999999%209.588999999999997%2013.306999999999999%209.491999999999997%20L%2016.037%205.6519999999999975%20Z'%20fill='%232a6797'%20id='09'%3e%3c/path%3e%3c/svg%3e", H2 = "data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%2036%2036'%3e%3ccircle%20fill='%23FFCC4D'%20cx='18'%20cy='18'%20r='18'%20id='00'%3e%3c/circle%3e%3cpath%20d='%20M%2027.335%2020.691%20C%2027.157%2020.529999999999998%2026.891000000000002%2020.52%2026.7%2020.662%20C%2026.660999999999998%2020.691%2022.778%2023.561999999999998%2018%2023.561999999999998%20C%2013.234%2023.561999999999998%209.338%2020.691%209.3%2020.662%20C%209.109%2020.52%208.843%2020.532%208.665000000000001%2020.691%20C%208.488000000000001%2020.851%208.448%2021.115%208.571000000000002%2021.319%20C%208.700000000000001%2021.534%2011.788000000000002%2026.561999999999998%2018%2026.561999999999998%20S%2027.301000000000002%2021.534%2027.429000000000002%2021.318999999999996%20C%2027.552000000000003%2021.113999999999997%2027.513%2020.851999999999997%2027.335%2020.690999999999995%20Z'%20fill='%23664500'%20id='01'%3e%3c/path%3e%3cpath%20d='%20M%2026%2016.958%20C%2025.581%2016.958%2025.191%2016.692999999999998%2025.052%2016.273999999999997%20C%2024.849%2015.674999999999997%2024.033%2013.957999999999998%2023%2013.957999999999998%20C%2021.938%2013.957999999999998%2021.111%2015.784999999999998%2020.948%2016.273999999999997%20C%2020.773%2016.796999999999997%2020.212%2017.081999999999997%2019.683%2016.906%20C%2019.16%2016.732%2018.876%2016.165%2019.051%2015.640999999999998%20C%2019.176%2015.263999999999998%2020.354999999999997%2011.956999999999997%2022.999%2011.956999999999997%20S%2026.822%2015.263999999999998%2026.947%2015.640999999999998%20C%2027.122%2016.165%2026.839%2016.732%2026.314999999999998%2016.906%20C%2026.211%2016.942%2026.104999999999997%2016.958%2025.999999999999996%2016.958%20Z'%20fill='%23664500'%20id='02'%3e%3c/path%3e%3cpath%20d='M%2016%2016.958%20C%2015.581%2016.958%2015.191%2016.692999999999998%2015.051%2016.273999999999997%20C%2014.848%2015.674999999999997%2014.033%2013.957999999999998%2013%2013.957999999999998%20C%2011.938%2013.957999999999998%2011.112%2015.784999999999998%2010.949%2016.273999999999997%20C%2010.774%2016.796999999999997%2010.211%2017.081999999999997%209.684%2016.906%20C%209.16%2016.732%208.876999999999999%2016.165%209.052%2015.640999999999998%20C%209.177%2015.263999999999998%2010.356%2011.956999999999997%2013.001%2011.956999999999997%20S%2016.823999999999998%2015.263999999999998%2016.95%2015.640999999999998%20C%2017.125%2016.165%2016.842%2016.732%2016.317999999999998%2016.906%20C%2016.211999999999996%2016.942%2016.104999999999997%2016.958%2015.999999999999998%2016.958%20Z'%20fill='%23664500'%20id='03'%3e%3c/path%3e%3cpath%20d='%20M%2034.301%2025.642%20C%2034.019000000000005%2024.692%2033.149%2023.995%2032.107%2023.995%20C%2031.336%2023.995%2030.656%2024.375%2030.239%2024.957%20C%2029.822%2024.375%2029.142%2023.995%2028.371000000000002%2023.995%20C%2027.101000000000003%2023.995%2026.072000000000003%2025.024%2026.072000000000003%2026.294%20C%2026.072000000000003%2026.474%2026.095000000000002%2026.648%2026.134000000000004%2026.816%20C%2026.441000000000003%2028.721%2028.482000000000003%2030.712%2030.043000000000003%2031.377%20C%2031.819000000000003%2029.776999999999997%2033.274%2027.83%2034.301%2025.642%20Z'%20fill='%23ffac33'%20id='04'%3e%3c/path%3e%3cpath%20d='%20M%2013.742999999999999%2029.078%20C%2013.799999999999999%2028.836%2013.832999999999998%2028.584%2013.832999999999998%2028.323999999999998%20C%2013.832999999999998%2026.491%2012.346999999999998%2025.005%2010.514%2025.005%20C%209.401%2025.005%208.42%2025.554%207.816999999999999%2026.394%20C%207.214999999999999%2025.555%206.232999999999999%2025.005%205.119999999999999%2025.005%20C%203.878999999999999%2025.005%202.8089999999999993%2025.694%202.2399999999999993%2026.703%20C%204.063999999999999%2029.997999999999998%206.89%2032.66%2010.308%2034.277%20C%2011.945%2032.926%2013.439%2030.970000000000002%2013.743%2029.078000000000003%20Z'%20fill='%23ffac33'%20id='05'%3e%3c/path%3e%3cpath%20d='M%2021.229%203.947%20C%2021.229%204.187%2021.259%204.4190000000000005%2021.311%204.643%20C%2021.736%207.286%2024.675%2010.074%2026.781%2010.84%20C%2028.445999999999998%2010.235%2030.627%208.364%2031.679%206.301%20C%2029.59%203.861%2026.86%201.987%2023.75%200.939%20C%2022.318%201.196%2021.229%202.441%2021.229%203.947%20Z'%20fill='%23ffac33'%20id='06'%3e%3c/path%3e%3cpath%20d='%20M%2035.948%2026.127000000000002%20C%2035.948%2024.857000000000003%2034.919%2023.828000000000003%2033.649%2023.828000000000003%20C%2032.878%2023.828000000000003%2032.198%2024.208000000000002%2031.781000000000002%2024.790000000000003%20C%2031.364%2024.208000000000002%2030.684%2023.828000000000003%2029.913000000000004%2023.828000000000003%20C%2028.643000000000004%2023.828000000000003%2027.614000000000004%2024.857000000000003%2027.614000000000004%2026.127000000000002%20C%2027.614000000000004%2026.307000000000002%2027.637000000000004%2026.481%2027.676000000000005%2026.649%20C%2027.995000000000005%2028.632%2030.200000000000006%2030.725%2031.781000000000006%2031.299%20C%2033.361000000000004%2030.724999999999998%2035.56700000000001%2028.631999999999998%2035.885000000000005%2026.649%20C%2035.925000000000004%2026.481%2035.94800000000001%2026.307000000000002%2035.94800000000001%2026.127000000000002%20Z'%20fill='%23dd2e44'%20id='07'%3e%3c/path%3e%3cpath%20d='%20M%2012.208%2028.408%20C%2012.208%2026.575000000000003%2010.722%2025.089000000000002%208.889%2025.089000000000002%20C%207.776%2025.089000000000002%206.795%2025.638%206.191999999999999%2026.478%20C%205.589999999999999%2025.638%204.607999999999999%2025.089000000000002%203.494999999999999%2025.089000000000002%20C%201.6619999999999993%2025.089000000000002%200.17599999999999927%2026.575000000000003%200.17599999999999927%2028.408%20C%200.17599999999999927%2028.668000000000003%200.20899999999999927%2028.919%200.26499999999999924%2029.162000000000003%20C%200.7259999999999993%2032.025000000000006%203.9089999999999994%2035.04600000000001%206.190999999999999%2035.876000000000005%20C%208.472999999999999%2035.047000000000004%2011.655999999999999%2032.026%2012.116999999999999%2029.163000000000004%20C%2012.174999999999999%2028.919000000000004%2012.207999999999998%2028.667000000000005%2012.207999999999998%2028.408000000000005%20Z'%20fill='%23dd2e44'%20id='08'%3e%3c/path%3e%3cpath%20d='M%2033.625%203.269%20C%2033.625%201.5770000000000002%2032.253%200.20599999999999996%2030.562%200.20599999999999996%20C%2029.535%200.20599999999999996%2028.629%200.713%2028.073%201.488%20C%2027.517%200.713%2026.611%200.206%2025.584%200.206%20C%2023.892%200.206%2022.521%201.577%2022.521%203.269%20C%2022.521%203.5090000000000003%2022.551000000000002%203.741%2022.603%203.965%20C%2023.029%206.608%2025.967000000000002%209.396%2028.073%2010.161999999999999%20C%2030.179000000000002%209.395999999999999%2033.117%206.607999999999999%2033.542%203.9659999999999993%20C%2033.595%203.740999999999999%2033.625%203.5089999999999995%2033.625%203.2689999999999992%20Z'%20fill='%23dd2e44'%20id='09'%3e%3c/path%3e%3c/svg%3e", T2 = "data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%2036%2036'%3e%3ccircle%20fill='%23FFCC4D'%20cx='18'%20cy='18'%20r='18'%20id='00'%3e%3c/circle%3e%3cpath%20d='M%2016%2019%20C%2015.581%2019%2015.191%2018.735%2015.051%2018.316%20C%2014.848%2017.717%2014.034%2016%2013%2016%20C%2011.938%2016%2011.112%2017.826999999999998%2010.949%2018.316%20C%2010.774%2018.839%2010.211%2019.124%209.684%2018.948%20C%209.16%2018.774%208.876999999999999%2018.208000000000002%209.052%2017.683%20C%209.177%2017.307%2010.355%2014%2013%2014%20S%2016.823%2017.307%2016.948999999999998%2017.684%20C%2017.124%2018.208000000000002%2016.840999999999998%2018.775000000000002%2016.316999999999997%2018.949%20C%2016.210999999999995%2018.983%2016.103999999999996%2019%2015.999999999999996%2019%20Z'%20fill='%23664500'%20id='01'%3e%3c/path%3e%3cpath%20d='M%2026%2019%20C%2025.581%2019%2025.191%2018.735%2025.052%2018.316%20C%2024.849%2017.717%2024.033%2016%2023%2016%20C%2021.938%2016%2021.111%2017.826999999999998%2020.948%2018.316%20C%2020.773%2018.839%2020.212%2019.124%2019.683%2018.948%20C%2019.16%2018.774%2018.876%2018.208000000000002%2019.051%2017.683%20C%2019.177%2017.307%2020.355%2014%2023%2014%20S%2026.823%2017.307%2026.948%2017.684%20C%2027.123%2018.208000000000002%2026.84%2018.775000000000002%2026.316%2018.949%20C%2026.211%2018.983%2026.104%2019%2026%2019%20Z'%20fill='%23664500'%20id='02'%3e%3c/path%3e%3cpath%20d='M%2027.335%2022.629%20C%2027.157%2022.468%2026.891000000000002%2022.458000000000002%2026.7%2022.6%20C%2026.660999999999998%2022.629%2022.778%2025.5%2018%2025.5%20C%2013.234%2025.5%209.338%2022.629%209.3%2022.6%20C%209.109%2022.458000000000002%208.843%2022.470000000000002%208.665000000000001%2022.629%20C%208.488000000000001%2022.789%208.448%2023.053%208.571000000000002%2023.257%20C%208.7%2023.472%2011.788%2028.5%2018%2028.5%20S%2027.301000000000002%2023.472%2027.429000000000002%2023.256999999999998%20C%2027.552000000000003%2023.052%2027.513%2022.788999999999998%2027.335%2022.628999999999998%20Z'%20fill='%23664500'%20id='03'%3e%3c/path%3e%3cpath%20d='M%2033.175%208.316%20S%2024.132999999999996%208.477%2017.999999999999996%208.477%20C%2014.094999999999997%208.477%202.793999999999997%208.359%202.793999999999997%208.359%20L%202.272999999999997%209.235%20C%205.315999999999997%2011.091%2011.336999999999996%2012.152%2017.999999999999996%2012.152%20C%2024.595999999999997%2012.152%2030.575999999999997%2011.111999999999998%2033.651999999999994%209.292%20L%2033.73%209.245%20S%2033.355999999999995%208.581%2033.175%208.315999999999999%20Z'%20fill='%23ffac33'%20id='04'%3e%3c/path%3e%3cpath%20d='M%2018%207.383%20C%2011.139%207.383%205.09%206.55%205.09%204.647%20C%205.09%204.111000000000001%205.584%203.6240000000000006%206.429%203.1980000000000004%20C%207.582000000000001%202.6170000000000004%209.407%202.1540000000000004%2011.618%201.8490000000000004%20C%2013.529%201.5870000000000004%2015.716000000000001%201.4390000000000005%2018%201.4390000000000005%20C%2020.291%201.4390000000000005%2022.485%201.5870000000000004%2024.4%201.8520000000000005%20C%2026.642%202.1620000000000004%2028.485999999999997%202.6350000000000007%2029.631999999999998%203.2290000000000005%20C%2030.438999999999997%203.6470000000000007%2030.909999999999997%204.123%2030.909999999999997%204.647%20C%2030.909999999999997%206.550000000000001%2024.860999999999997%207.383000000000001%2017.999999999999996%207.383000000000001%20Z%20M%2023.777%200.345%20C%2022.565%200.251%2021.304000000000002%200.18599999999999997%2020.004%200.15499999999999997%20C%2019.343%200.139%2018.676%200.129%2018%200.129%20C%2017.328%200.129%2016.664%200.139%2016.007%200.154%20C%2014.705000000000002%200.185%2013.443000000000001%200.25%2012.23%200.344%20C%205.34%200.88%200.169%202.451%200.169%205.287%20C%200.169%208.875%208.433%2011.058%2018%2011.058%20S%2035.831%208.875%2035.831%205.287%20C%2035.831%202.452%2030.663000000000004%200.8819999999999997%2023.777%200.34499999999999975%20Z'%20fill='%235dadec'%20id='05'%3e%3c/path%3e%3cpath%20d='M%206.429%203.199%20C%207.582000000000001%202.618%209.407%202.155%2011.618%201.8499999999999999%20L%2015.984%200.162%20L%2016.007%200.154%20C%2014.705000000000002%200.185%2013.443000000000001%200.25%2012.23%200.344%20C%2010.883000000000001%200.6859999999999999%208.597000000000001%201.5710000000000002%206.311000000000001%203.246%20L%206.429000000000001%203.199%20Z'%20fill='%233b94d9'%20id='07'%3e%3c/path%3e%3cpath%20d='M%2024.4%201.853%20C%2026.642%202.163%2028.485999999999997%202.636%2029.631999999999998%203.23%20L%2029.694%203.247%20C%2027.409%201.573%2025.124%200.6869999999999998%2023.777%200.34499999999999975%20C%2022.565%200.2509999999999998%2021.304000000000002%200.18599999999999975%2020.004%200.15499999999999975%20L%2020.022000000000002%200.16199999999999976%20L%2024.4%201.853%20Z'%20fill='%233b94d9'%20id='08'%3e%3c/path%3e%3cpath%20d='M%2028.472%203.375%20C%2027.812%202.932%2027.126%202.465%2026.471%202.115%20C%2023.947%200.765%2021.063%200%2018%200%20C%2015.071%200%2012.305%200.7%209.86%201.941%20C%208.770999999999999%202.494%207.978999999999999%202.94%207.6899999999999995%203.375%20H%2028.472%20Z'%20fill='%23ffcc4d'%20id='09'%3e%3c/path%3e%3c/svg%3e", k2 = "data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%2036%2036'%3e%3ccircle%20fill='%23FFCC4D'%20cx='18'%20cy='18'%20r='18'%20id='00'%3e%3c/circle%3e%3cellipse%20fill='%23664500'%20cx='12'%20cy='13.5'%20rx='2.5'%20ry='3.5'%20id='01'%3e%3c/ellipse%3e%3cellipse%20fill='%23664500'%20cx='24'%20cy='13.5'%20rx='2.5'%20ry='3.5'%20id='02'%3e%3c/ellipse%3e%3cpath%20d='M%2027.335%2022.629%20C%2027.157%2022.468%2026.891000000000002%2022.458000000000002%2026.7%2022.6%20C%2026.660999999999998%2022.629%2022.778%2025.5%2018%2025.5%20C%2013.234%2025.5%209.338%2022.629%209.3%2022.6%20C%209.109%2022.458000000000002%208.843%2022.470000000000002%208.665000000000001%2022.629%20C%208.488000000000001%2022.789%208.448%2023.053%208.571000000000002%2023.257%20C%208.7%2023.472%2011.788%2028.5%2018%2028.5%20S%2027.301000000000002%2023.472%2027.429000000000002%2023.256999999999998%20C%2027.552000000000003%2023.052%2027.513%2022.788999999999998%2027.335%2022.628999999999998%20Z'%20fill='%23664500'%20id='03'%3e%3c/path%3e%3cpath%20d='M%2029.5%2027.5%20C%2029.5%2030.262%2027.262%2032.5%2024.5%2032.5%20S%2019.5%2030.262%2019.5%2027.5%20S%2023.5%2017.5%2024.5%2017.5%20S%2029.5%2024.738%2029.5%2027.5%20Z'%20fill='%235dadec'%20id='04'%3e%3c/path%3e%3c/svg%3e", F2 = "data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%2036%2036'%3e%3ccircle%20fill='%23AA8DD8'%20cx='18'%20cy='18'%20r='18'%20id='00'%3e%3c/circle%3e%3cpath%20d='%20M%2034.766%200.153%20C%2034.016%20-0.158%2033.159%200.013999999999999985%2032.586%200.587%20C%2031.7%201.472%2028.589%204%2026%204%20C%2025.307%204%2024.663%204.359%2024.299%204.949%20C%2023.935%205.538%2023.902%206.275%2024.211%206.895%20L%2026.211%2010.895%20C%2026.55%2011.572%2027.242%2012%2028%2012%20C%2034.328%2012%2036%205.459%2036%202%20C%2036%201.1909999999999998%2035.513%200.46199999999999997%2034.766%200.15300000000000002%20Z'%20fill='%23aa8dd8'%20id='01'%3e%3c/path%3e%3cpath%20d='M%2010%204%20C%207.42%204%204.369%201.534%203.414%200.586%20C%202.843%200.014%201.981%20-0.157%201.235%200.153%20C%200.487%200.462%200%201.191%200%202%20C%200%205.459%201.672%2012%208%2012%20C%208.757%2012%209.45%2011.572%209.789%2010.894%20L%2011.789%206.894%20C%2012.099%206.274%2012.065999999999999%205.538%2011.701%204.948%20C%2011.337%204.359%2010.693%204%2010%204%20Z'%20fill='%23aa8dd8'%20id='02'%3e%3c/path%3e%3cpath%20d='%20M%2029%2015%20C%2028.779%2015%2023.549%2015.038%2020.293%2018.293%20C%2019.902%2018.683999999999997%2019.902%2019.316%2020.293%2019.707%20C%2020.488%2019.902%2020.744%2020%2021%2020%20C%2021.013%2020%2021.024%2019.993%2021.036%2019.993%20C%2021.020000000000003%2020.16%2021%2020.325999999999997%2021%2020.5%20C%2021%2022.434%2022.119%2024%2023.5%2024%20S%2026%2022.434%2026%2020.5%20C%2026%2019.371%2025.611%2018.377%2025.018%2017.737000000000002%20C%2027.076%2017.022000000000002%2028.972%2017.000000000000004%2029.002000000000002%2017.000000000000004%20C%2029.553%2016.999000000000002%2030.000000000000004%2016.550000000000004%2029.999000000000002%2015.998000000000003%20C%2029.998%2015.447000000000003%2029.552000000000003%2015.000000000000004%2029.000000000000004%2015.000000000000004%20Z'%20fill='%23553986'%20id='03'%3e%3c/path%3e%3cpath%20d='%20M%2015.707%2018.293%20C%2012.452%2015.038%207.221%2015%207%2015%20C%206.448%2015%206.001%2015.447%206.001%2015.998%20C%206%2016.55%206.447%2016.999%206.9990000000000006%2017%20C%207.0280000000000005%2017%208.924000000000001%2017.022%2010.982000000000001%2017.737%20C%2010.389000000000001%2018.377%2010.000000000000002%2019.371%2010.000000000000002%2020.5%20C%2010.000000000000002%2022.434%2011.119000000000002%2024%2012.500000000000002%2024%20S%2015.000000000000002%2022.434%2015.000000000000002%2020.5%20C%2015.000000000000002%2020.326%2014.981000000000002%2020.16%2014.963000000000001%2019.993%20C%2014.976%2019.993%2014.988000000000001%2020%2015.000000000000002%2020%20C%2015.256000000000002%2020%2015.512000000000002%2019.902%2015.707000000000003%2019.707%20C%2016.098000000000003%2019.316000000000003%2016.098000000000003%2018.684%2015.707000000000003%2018.293%20Z'%20fill='%23553986'%20id='04'%3e%3c/path%3e%3cpath%20d='M%2027.335%2025.629%20C%2027.157%2025.468%2026.891000000000002%2025.458000000000002%2026.7%2025.6%20C%2026.660999999999998%2025.629%2022.778%2028.5%2018%2028.5%20C%2013.234%2028.5%209.338%2025.629%209.3%2025.6%20C%209.109%2025.458000000000002%208.843%2025.470000000000002%208.665000000000001%2025.629%20C%208.488000000000001%2025.789%208.448%2026.053%208.571000000000002%2026.257%20C%208.7%2026.472%2011.788%2031.5%2018%2031.5%20S%2027.301000000000002%2026.472%2027.429000000000002%2026.256999999999998%20C%2027.552000000000003%2026.052%2027.513%2025.788999999999998%2027.335%2025.628999999999998%20Z'%20fill='%23553986'%20id='05'%3e%3c/path%3e%3c/svg%3e", V2 = "data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%2036%2036'%3e%3cpath%20d='M%2035.734%2019.929%20C%2035.375%2016.66%2035%2015%2034%2013%20C%2034%2013%2037%204%2035%200.3000000000000007%20C%2034.326%20-0.9459999999999993%2027.596%201.9880000000000007%2025%204.000000000000001%20C%2025%204.000000000000001%2021%203.0020000000000007%2018%203.0020000000000007%20S%2011%204%2011%204%20C%208.404%201.988%201.674%20-0.946%201%200.3%20C%20-1%204%202%2013%202%2013%20C%201%2015%200.625%2016.66%200.266%2019.929%20C%20-0.129%2023.513%200.657%2026.37%201%2027%20C%201.3900000000000001%2027.716%203.367%2030.025%206%2032%20C%2010%2035%2016%2036%2018%2036%20S%2026%2035%2030%2032%20C%2032.633%2030.025%2034.61%2027.716%2035%2027%20C%2035.343%2026.37%2036.129%2023.512999999999998%2035.734%2019.929000000000002%20Z'%20fill='%23ffcc4d'%20id='00'%3e%3c/path%3e%3cpath%20d='M%2018%2019.5%20C%2021%2019.5%2021%2020%2021%2021%20S%2019.5%2024%2018%2024%20S%2015%2022%2015%2021%20S%2014.999%2019.5%2018%2019.5%20Z'%20fill='%23e75a70'%20id='01'%3e%3c/path%3e%3cpath%20d='%20M%2034%203%20C%2033.553%201.658%2028.36%204%2027.36%205%20C%2027.36%205%2032%208%2033%2011%20C%2033%2011%2035%206%2034%203%20Z'%20fill='%23f18f26'%20id='02'%3e%3c/path%3e%3cpath%20d='M%202%203%20C%202.447%201.658%207.64%204%208.64%205%20C%208.64%205%204%208%203%2011%20C%203%2011%201%206%202%203%20Z'%20fill='%23f18f26'%20id='03'%3e%3c/path%3e%3cpath%20d='%20M%2031.066000000000003%205.603%20C%2031.066%204.189%2025%207%2026%208%20S%2028%209.603%2029%2010.603%20S%2031.066%206.603%2031.066%205.603%20Z'%20fill='%23ffcc4d'%20id='04'%3e%3c/path%3e%3cpath%20d='M%204.934%205.603%20C%204.934%204.189%2011%207%2010%208%20S%208%209.603%207%2010.603%20S%204.934%206.603%204.934%205.603%20Z'%20fill='%23ffcc4d'%20id='05'%3e%3c/path%3e%3cpath%20d='%20M%2026.430999999999997%2020.337%20C%2026.479999999999997%2020.337%2026.531%2020.33%2026.58%2020.315%20C%2031.369999999999997%2018.818%2035.317%2019.968%2035.357%2019.979000000000003%20C%2035.622%2020.060000000000002%2035.9%2019.909000000000002%2035.98%2019.644000000000002%20C%2036.059%2019.379%2035.909%2019.101000000000003%2035.644999999999996%2019.022000000000002%20C%2035.471999999999994%2018.970000000000002%2031.358999999999995%2017.775000000000002%2026.282999999999994%2019.360000000000003%20C%2026.018999999999995%2019.443%2025.871999999999993%2019.723000000000003%2025.954999999999995%2019.987000000000002%20C%2026.019999999999996%2020.200000000000003%2026.217999999999996%2020.337000000000003%2026.430999999999994%2020.337000000000003%20Z'%20fill='%23fee7b8'%20id='06'%3e%3c/path%3e%3cpath%20d='%20M%2035.299%2025%20C%2035.447%2025%2035.592999999999996%2024.935%2035.692%2024.81%20C%2035.863%2024.593%2035.826%2024.279%2035.609%2024.107999999999997%20C%2035.447%2023.980999999999998%2031.589000000000002%2020.987999999999996%2024.961000000000002%2021.502999999999997%20C%2024.686000000000003%2021.522999999999996%2024.48%2021.763999999999996%2024.501%2022.038999999999998%20C%2024.522000000000002%2022.313999999999997%2024.758000000000003%2022.54%2025.038%2022.499%20C%2031.271%2022.025%2034.953%2024.865%2034.989000000000004%2024.894%20C%2035.08200000000001%2024.965%2035.191%2025%2035.29900000000001%2025%20Z'%20fill='%23fee7b8'%20id='07'%3e%3c/path%3e%3cpath%20d='%20M%209.569%2020.337%20C%209.520000000000001%2020.337%209.469000000000001%2020.33%209.420000000000002%2020.315%20C%204.630000000000002%2018.818%200.6830000000000016%2019.968%200.6430000000000025%2019.979000000000003%20C%200.37800000000000245%2020.060000000000002%200.10000000000000242%2019.909000000000002%200.02000000000000246%2019.644000000000002%20C%20-0.05899999999999754%2019.379%200.09100000000000245%2019.101000000000003%200.3550000000000025%2019.022000000000002%20C%200.5280000000000025%2018.970000000000002%204.641000000000002%2017.775000000000002%209.717000000000002%2019.360000000000003%20C%209.981000000000002%2019.443%2010.128000000000002%2019.723000000000003%2010.045000000000002%2019.987000000000002%20C%209.979000000000001%2020.200000000000003%209.782000000000002%2020.337000000000003%209.569000000000003%2020.337000000000003%20Z'%20fill='%23fee7b8'%20id='08'%3e%3c/path%3e%3cpath%20d='M%200.701%2025%20C%200.5529999999999999%2025%200.407%2024.935%200.30799999999999994%2024.81%20C%200.13699999999999993%2024.593%200.17399999999999993%2024.279%200.39099999999999996%2024.107999999999997%20C%200.5529999999999999%2023.980999999999998%204.411%2020.987999999999996%2011.039%2021.502999999999997%20C%2011.314%2021.522999999999996%2011.52%2021.763999999999996%2011.499%2022.038999999999998%20C%2011.478%2022.313999999999997%2011.242%2022.54%2010.962%2022.499%20C%204.729%2022.025%201.0470000000000006%2024.865%201.0109999999999992%2024.894%20C%200.9179999999999993%2024.965%200.8089999999999993%2025%200.7009999999999992%2025%20Z'%20fill='%23fee7b8'%20id='09'%3e%3c/path%3e%3cpath%20d='M%2025.327%2025.622%20C%2025.175%2025.49%2024.958000000000002%2025.463%2024.776000000000003%2025.553%20L%2020.776000000000003%2027.553%20C%2018.905000000000005%2028.488%2014.049000000000003%2028.5%2014.000000000000004%2028.5%20C%2013.724000000000004%2028.5%2013.500000000000004%2028.724%2013.500000000000004%2029%20C%2013.500000000000004%2029.185%2013.601000000000004%2029.347%2013.750000000000004%2029.433%20V%2029.434%20H%2013.751000000000003%20V%2029.435000000000002%20C%2013.822000000000003%2029.475%2013.904000000000003%2029.498%2013.991000000000003%2029.500000000000004%20H%2020.999000000000002%20C%2023.657000000000004%2029.500000000000004%2025.088%2027.314000000000004%2025.474000000000004%2026.158000000000005%20C%2025.538000000000004%2025.966000000000005%2025.480000000000004%2025.755000000000006%2025.327000000000005%2025.622000000000003%20Z'%20fill='%23292f33'%20id='10'%3e%3c/path%3e%3cg%20fill='%23292F33'%20id='11'%3e%3cellipse%20cx='12'%20cy='14.5'%20rx='2'%20ry='3.5'%3e%3c/ellipse%3e%3cellipse%20cx='24'%20cy='14.5'%20rx='2'%20ry='3.5'%3e%3c/ellipse%3e%3cpath%20d='%20M%2015%2012%20C%2014.744%2012%2014.488%2011.902%2014.293%2011.707%20C%2010.667%208.082%207.031%208%206.995%208%20C%206.444%207.994%206%207.545%206.003%206.995%20C%206.006%206.444%206.45%206%207%206%20C%207.18%206%2011.463000000000001%206.049%2015.707%2010.293%20C%2016.098%2010.684%2016.098%2011.315999999999999%2015.707%2011.706999999999999%20C%2015.512%2011.902%2015.256%2011.999999999999998%2015%2011.999999999999998%20Z'%20fill='%23000000'%3e%3c/path%3e%3cpath%20d='M%2021%2012%20C%2020.744%2012%2020.488%2011.902%2020.293%2011.707%20C%2019.902%2011.316%2019.902%2010.684000000000001%2020.293%2010.293000000000001%20C%2024.537%206.049%2028.819%206%2029%206%20C%2029.553%206%2030%206.448%2030%207%20C%2030%207.551%2029.555%207.998%2029.005%208%20C%2028.939999999999998%208.001%2025.317999999999998%208.096%2021.707%2011.707%20C%2021.512%2011.902000000000001%2021.256%2012%2021%2012%20Z'%20fill='%23000000'%3e%3c/path%3e%3c/g%3e%3c/svg%3e", E2 = "data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%2036%2036'%3e%3cpath%20d='M%2036%2018%20C%2036%2027.941000000000003%2027.941000000000003%2036%2018%2036%20S%200%2027.941%200%2018%20S%208.059%200%2018%200%20S%2036%208.059%2036%2018'%20fill='%23ffcc4d'%20id='00'%3e%3c/path%3e%3cpath%20d='%20M%206%2015%20C%205.603%2015%205.228%2014.762%205.071%2014.371%20C%204.866%2013.858%205.114999999999999%2013.276%205.628%2013.071%20C%2010.24%2011.227%2012.151%208.469%2012.17%208.442%20C%2012.478%207.986%2013.099%207.865%2013.557%208.172%20C%2014.014000000000001%208.48%2014.138%209.097000000000001%2013.832%209.555%20C%2013.743%209.687999999999999%2011.600000000000001%2012.838%206.372000000000001%2014.928999999999998%20C%206.25%2014.977%206.124%2015%206%2015%20Z'%20fill='%23664500'%20id='01'%3e%3c/path%3e%3cpath%20d='%20M%2030%2015%20C%2029.876%2015%2029.75%2014.977%2029.629%2014.928%20C%2024.400000000000002%2012.837%2022.257%209.687000000000001%2022.168%209.554000000000002%20C%2021.861%209.094000000000001%2021.985%208.473000000000003%2022.445%208.167000000000002%20C%2022.904%207.8610000000000015%2023.522%207.983000000000001%2023.830000000000002%208.441000000000003%20C%2023.849%208.468000000000002%2025.76%2011.226000000000003%2030.371000000000002%2013.070000000000002%20C%2030.884000000000004%2013.276000000000002%2031.134000000000004%2013.857000000000003%2030.929000000000002%2014.370000000000003%20C%2030.772000000000002%2014.762000000000002%2030.396%2015.000000000000004%2030.000000000000004%2015.000000000000004%20Z'%20fill='%23664500'%20id='02'%3e%3c/path%3e%3cpath%20d='M%2022%2027%20C%2022%2029.762999999999998%2020.209%2030%2018%2030%20C%2015.79%2030%2014%2029.763%2014%2027%20C%2014%2024.239%2015.79%2021%2018%2021%20C%2020.209%2021%2022%2024.239%2022%2027%20Z'%20fill='%23664500'%20id='03'%3e%3c/path%3e%3cpath%20d='%20M%208%2035%20L%2012%2034.954%20V%2016%20H%208%20V%2035%20Z'%20fill='%235dadec'%20id='04'%3e%3c/path%3e%3cpath%20d='M%2024%2016%20H%2028%20V%2035%20L%2024%2034.954%20V%2016%20Z'%20fill='%235dadec'%20id='05'%3e%3c/path%3e%3cpath%20d='%20M%2028.999000000000002%2018%20C%2028.849000000000004%2018%2028.696%2017.966%2028.553%2017.895%20C%2025.04%2016.139%2021.483%2017.877%2021.448%2017.895%20C%2020.954%2018.143%2020.354%2017.942%2020.106%2017.448%20C%2019.859%2016.954%2020.059%2016.353%2020.553%2016.106%20C%2020.735%2016.016000000000002%2025.054000000000002%2013.910000000000002%2029.448%2016.106%20C%2029.942%2016.353%2030.142%2016.954%2029.895%2017.448%20C%2029.719%2017.798000000000002%2029.366%2018%2028.999%2018%20Z'%20fill='%23664500'%20id='06'%3e%3c/path%3e%3cpath%20d='M%2014.999%2018%20C%2014.849%2018%2014.696%2017.966%2014.553%2017.895%20C%2011.041%2016.139%207.4830000000000005%2017.877%207.448%2017.895%20C%206.953%2018.144%206.353000000000001%2017.941%206.106%2017.448%20C%205.859%2016.954%206.059%2016.353%206.553%2016.106%20C%206.735%2016.016000000000002%2011.051%2013.909000000000002%2015.448%2016.106%20C%2015.942%2016.353%2016.142%2016.954%2015.895%2017.448%20C%2015.719%2017.798000000000002%2015.366%2018%2014.998999999999999%2018%20Z'%20fill='%23664500'%20id='07'%3e%3c/path%3e%3cellipse%20fill='%235DADEC'%20cx='18'%20cy='34'%20rx='18'%20ry='2'%20id='08'%3e%3c/ellipse%3e%3cellipse%20fill='%23E75A70'%20cx='18'%20cy='27'%20rx='3'%20ry='2'%20id='09'%3e%3c/ellipse%3e%3c/svg%3e", O2 = "data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%2036%2036'%3e%3cpath%20d='M%2036%2018%20C%2036%2027.941000000000003%2027.941000000000003%2036%2018%2036%20S%200%2027.941%200%2018%20S%208.059%200%2018%200%20S%2036%208.059%2036%2018'%20fill='%23ffcc4d'%20id='00'%3e%3c/path%3e%3cpath%20d='M%2018%2021%20C%2014.376999999999999%2021%2011.972999999999999%2020.578%209%2020%20C%208.321%2019.869%207%2020%207%2022%20C%207%2026%2011.594999999999999%2031%2018%2031%20C%2024.404%2031%2029%2026%2029%2022%20C%2029%2020%2027.679%2019.868%2027%2020%20C%2024.027%2020.578%2021.623%2021%2018%2021%20Z'%20fill='%23664500'%20id='01'%3e%3c/path%3e%3cpath%20d='M%209%2022%20S%2012%2023%2018%2023%20S%2027%2022%2027%2022%20S%2025%2026%2018%2026%20S%209%2022%209%2022%20Z'%20fill='%23ffffff'%20id='02'%3e%3c/path%3e%3cpath%20d='%20M%2020.318%204.413%20L%2024.86%205.214%20L%2027.2%200.961%20C%2027.458%200.492%2027.988%200.241%2028.512%200.33299999999999996%20C%2029.038%200.42599999999999993%2029.448%200.844%2029.53%201.3719999999999999%20L%2030.275000000000002%206.169%20L%2034.817%206.97%20C%2035.353%207.064%2035.766%207.494%2035.838%208.033%20S%2035.627%209.096%2035.135%209.33%20L%2031.064999999999998%2011.262%20L%2031.813%2016.074%20C%2031.895999999999997%2016.610000000000003%2031.624%2017.138%2031.14%2017.383000000000003%20C%2030.961000000000002%2017.473000000000003%2030.769000000000002%2017.516000000000002%2030.578%2017.516000000000002%20C%2030.250999999999998%2017.516000000000002%2029.928%2017.388%2029.686999999999998%2017.144000000000002%20L%2026.174999999999997%2013.583000000000002%20L%2021.656999999999996%2015.728000000000002%20C%2021.166999999999998%2015.96%2020.582999999999995%2015.851%2020.210999999999995%2015.456000000000001%20C%2019.838999999999995%2015.061000000000002%2019.764999999999993%2014.472000000000001%2020.025999999999996%2013.997000000000002%20L%2022.373999999999995%209.73%20L%2019.208999999999996%206.522%20C%2018.826999999999995%206.135%2018.739999999999995%205.545%2018.991999999999997%205.063000000000001%20C%2019.246999999999996%204.581%2019.785999999999998%204.32%2020.317999999999998%204.413%20Z'%20fill='%23e95f28'%20id='03'%3e%3c/path%3e%3cpath%20d='M%2015.682%204.413%20L%2011.14%205.214%20L%208.8%200.961%20C%208.542%200.492%208.012%200.241%207.488%200.333%20C%206.961%200.42600000000000005%206.551%200.8440000000000001%206.469%201.3719999999999999%20L%205.724%206.169%20L%201.1820000000000004%206.97%20C%200.6470000000000004%207.064%200.23400000000000043%207.495%200.16100000000000048%208.033999999999999%20S%200.37200000000000044%209.097%200.8640000000000004%209.331%20L%204.934000000000001%2011.263%20L%204.186000000000001%2016.075%20C%204.103000000000001%2016.611%204.375000000000001%2017.139%204.859000000000001%2017.384%20C%205.038000000000001%2017.474%205.23%2017.517%205.421000000000001%2017.517%20C%205.748000000000001%2017.517%206.0710000000000015%2017.389%206.312000000000001%2017.145%20L%209.824000000000002%2013.584%20L%2014.342000000000002%2015.729%20C%2014.832000000000003%2015.960999999999999%2015.416000000000002%2015.851999999999999%2015.788000000000002%2015.456999999999999%20C%2016.160000000000004%2015.062%2016.234%2014.472999999999999%2015.973000000000003%2013.998%20L%2013.625%209.73%20L%2016.79%206.522%20C%2017.172%206.135%2017.259%205.545%2017.006999999999998%205.063000000000001%20C%2016.752999999999997%204.581%2016.214%204.32%2015.681999999999999%204.413%20Z'%20fill='%23e95f28'%20id='04'%3e%3c/path%3e%3c/svg%3e", D2 = "data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%2036%2036'%3e%3cpath%20d='M%2036%2018%20C%2036%2027.941000000000003%2027.941000000000003%2036%2018%2036%20S%200%2027.941%200%2018%20S%208.059%200%2018%200%20S%2036%208.059%2036%2018'%20fill='%23ffcc4d'%20id='00'%3e%3c/path%3e%3cpath%20d='M%201.24%2011.018%20C%201.48%2011.257000000000001%202.678%2011.975000000000001%202.917%2012.693000000000001%20C%203.157%2013.410000000000002%203.6369999999999996%2017.477%205.074999999999999%2018.674%20C%206.558%2019.906%2012.152%2019.448%2013.222999999999999%2018.913999999999998%20C%2015.62%2017.718999999999998%2015.913999999999998%2014.383%2016.338%2012.692999999999998%20C%2016.577%2011.735999999999997%2018.015%2011.735999999999997%2018.015%2011.735999999999997%20S%2019.453%2011.735999999999997%2019.693%2012.691999999999997%20C%2020.117%2014.382999999999997%2020.413%2017.718999999999998%2022.808%2018.912999999999997%20C%2023.88%2019.447999999999997%2029.474%2019.906999999999996%2030.959%2018.674999999999997%20C%2032.394999999999996%2017.477999999999998%2032.874%2013.410999999999998%2033.114%2012.692999999999998%20C%2033.352%2011.975999999999997%2034.552%2011.257999999999997%2034.791%2011.018999999999998%20C%2035.032%2010.779999999999998%2035.032%209.822999999999999%2034.791%209.582999999999998%20C%2034.312%209.104999999999999%2028.656999999999996%208.678999999999998%2022.567999999999998%209.343999999999998%20C%2021.352999999999998%209.476999999999997%2020.891%209.821999999999997%2018.013999999999996%209.821999999999997%20C%2015.138999999999996%209.821999999999997%2014.674999999999995%209.475999999999997%2013.460999999999995%209.343999999999998%20C%207.375999999999995%208.677999999999997%201.7199999999999953%209.103999999999997%201.2399999999999949%209.581999999999997%20C%201.000999999999995%209.820999999999998%201.000999999999995%2010.778999999999996%201.2399999999999949%2011.017999999999997%20Z'%20fill='%23292f33'%20id='01'%3e%3c/path%3e%3cpath%20d='M%2027.335%2023.629%20C%2027.157%2023.468%2026.891000000000002%2023.458000000000002%2026.7%2023.6%20C%2026.660999999999998%2023.629%2022.778%2026.5%2018%2026.5%20C%2013.234%2026.5%209.338%2023.629%209.3%2023.6%20C%209.109%2023.458000000000002%208.843%2023.470000000000002%208.665000000000001%2023.629%20C%208.488000000000001%2023.789%208.448%2024.053%208.571000000000002%2024.257%20C%208.7%2024.472%2011.788%2029.5%2018%2029.5%20S%2027.301000000000002%2024.472%2027.429000000000002%2024.256999999999998%20C%2027.552000000000003%2024.052%2027.513%2023.788999999999998%2027.335%2023.628999999999998%20Z'%20fill='%23664500'%20id='02'%3e%3c/path%3e%3c/svg%3e", N2 = "data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%2036%2036'%3e%3ccircle%20fill='%23FFCB4C'%20cx='18'%20cy='17.018'%20r='17'%20id='00'%3e%3c/circle%3e%3cpath%20d='M%2014.524%2021.036%20C%2014.379%2020.92%2014.265999999999998%2020.762%2014.212%2020.572000000000003%20C%2014.078%2020.112000000000002%2014.342%2019.654000000000003%2014.802%2019.551000000000002%20C%2019.33%2018.53%2022.378999999999998%2020.914%2022.508%2021.016000000000002%20C%2022.892%2021.322000000000003%2022.967%2021.861%2022.680999999999997%2022.221000000000004%20C%2022.394999999999996%2022.579000000000004%2021.852999999999998%2022.622000000000003%2021.47%2022.318000000000005%20C%2021.36%2022.234000000000005%2018.947%2020.395000000000003%2015.287999999999998%2021.220000000000006%20C%2015.014%2021.281000000000006%2014.733999999999998%2021.204000000000008%2014.524%2021.036000000000005%20Z'%20fill='%2365471b'%20id='01'%3e%3c/path%3e%3cellipse%20fill='%2365471B'%20cx='13.119'%20cy='11.174'%20rx='2.125'%20ry='2.656'%20id='02'%3e%3c/ellipse%3e%3cellipse%20fill='%2365471B'%20cx='24.375'%20cy='12.236'%20rx='2.125'%20ry='2.656'%20id='03'%3e%3c/ellipse%3e%3cpath%20d='M%2017.276%2035.149%20S%2018.541%2034.738%2018.705%2033.797000000000004%20C%2018.877999999999997%2032.825%2018.081%2032.63%2018.081%2032.63%20S%2019.122%2032.422000000000004%2019.253%2031.254%20C%2019.376%2030.153000000000002%2018.392%2029.891000000000002%2018.392%2029.891000000000002%20S%2019.362%2029.491000000000003%2019.408%2028.352%20C%2019.446%2027.393%2018.413%2026.924%2018.413%2026.924%20S%2023.451%2025.703%2023.969%2025.583%20C%2024.485%2025.462999999999997%2025.289%2024.968%2025.038%2023.889%20C%2024.789%2022.808999999999997%2023.834%2022.771%2023.341%2022.886%20C%2022.847%2023.000999999999998%2016.597%2024.451999999999998%2014.441%2024.954%20L%2013.002%2025.288%20C%2012.462%2025.415%2012.217%2025.178%2012.598%2024.776%20C%2013.106000000000002%2024.24%2013.431000000000001%2023.647%2013.544%2022.663%20C%2013.663%2021.628%2013.312000000000001%2020.35%2013.111%2019.854%20C%2012.737%2018.933%2012.106000000000002%2018.205%2011.377%2017.955%20C%2010.24%2017.564999999999998%209.432%2018.276%209.835%2019.516%20C%2010.439%2021.369999999999997%2010.043000000000001%2022.891%209.002%2023.808999999999997%20C%206.553000000000001%2025.965999999999998%205.414000000000001%2027.503999999999998%206.172000000000001%2030.781999999999996%20C%207.000000000000001%2034.357%2010.549%2036.657999999999994%2014.124%2035.83%20L%2017.276%2035.149%20Z'%20fill='%23f19020'%20id='04'%3e%3c/path%3e%3cpath%20d='%20M%2021.430999999999997%2010.100999999999999%20C%2021.275%2010.002999999999998%2021.144999999999996%209.857999999999999%2021.069%209.677%20C%2020.881999999999998%209.235%2021.092%208.75%2021.537%208.593%20C%2025.918%207.057%2029.221999999999998%209.073%2029.36%209.16%20C%2029.775%209.42%2029.915%209.947000000000001%2029.672%2010.338000000000001%20C%2029.43%2010.728000000000002%2028.896%2010.833%2028.481%2010.576%20C%2028.361%2010.504000000000001%2025.754%208.955%2022.214000000000002%2010.197000000000001%20C%2021.948%2010.288%2021.661%2010.243%2021.431%2010.101%20Z'%20fill='%2365471b'%20id='05'%3e%3c/path%3e%3cpath%20d='M%209.296%206.351%20C%209.132%206.263%208.992999999999999%206.127%208.905%205.952%20C%208.689%205.524%208.865%205.025%209.298%204.84%20C%2013.564%203.009%2016.997%204.797%2017.141%204.874%20C%2017.573999999999998%205.1049999999999995%2017.749%205.6209999999999996%2017.531999999999996%206.028%20C%2017.315999999999995%206.433%2016.791999999999998%206.574%2016.358999999999995%206.345999999999999%20C%2016.235999999999994%206.2829999999999995%2013.526999999999994%204.914%2010.080999999999996%206.392999999999999%20C%209.823999999999996%206.501999999999999%209.533999999999995%206.477999999999999%209.295999999999996%206.350999999999999%20Z'%20fill='%2365471b'%20id='06'%3e%3c/path%3e%3c/svg%3e", B2 = "data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%2036%2036'%3e%3cpath%20d='M%2036%2018%20C%2036%2027.941000000000003%2027.941000000000003%2036%2018%2036%20S%200%2027.941%200%2018%20S%208.059%200%2018%200%20S%2036%208.059%2036%2018'%20fill='%23ffcc4d'%20id='00'%3e%3c/path%3e%3cpath%20d='M%2026.001%2027%20C%2025.696%2027%2025.397000000000002%2026.862%2025.200000000000003%2026.6%20C%2025.175000000000004%2026.566000000000003%2022.418000000000003%2023%2018.000000000000004%2023%20C%2013.583000000000004%2023%2010.826000000000004%2026.566%2010.798000000000004%2026.603%20C%2010.465000000000003%2027.041%209.837000000000003%2027.128%209.398000000000003%2026.797%20C%208.958000000000004%2026.465%208.869000000000003%2025.841%209.200000000000003%2025.400000000000002%20C%209.335000000000003%2025.220000000000002%2012.562000000000003%2021%2018.000000000000004%2021%20S%2026.665000000000003%2025.221%2026.800000000000004%2025.4%20C%2027.132000000000005%2025.840999999999998%2027.042000000000005%2026.468%2026.600000000000005%2026.799%20C%2026.420000000000005%2026.935%2026.210000000000004%2027%2026.001000000000005%2027%20Z'%20fill='%23664500'%20id='01'%3e%3c/path%3e%3cpath%20d='M%2024.591%2017.892%20C%2023.419%2017.892%2022.046%2017.641%2020.553%2016.894%20C%2020.059%2016.647%2019.859%2016.046%2020.106%2015.551999999999998%20C%2020.354000000000003%2015.057999999999998%2020.954%2014.857999999999997%2021.448%2015.104999999999999%20C%2024.848%2016.805%2027.347%2015.230999999999998%2027.451999999999998%2015.163999999999998%20C%2027.912%2014.865999999999998%2028.532999999999998%2014.993999999999998%2028.834%2015.452999999999998%20C%2029.136%2015.911999999999997%2029.012999999999998%2016.526999999999997%2028.556%2016.831999999999997%20C%2028.46%2016.894999999999996%2026.925%2017.891999999999996%2024.591%2017.891999999999996%20Z'%20fill='%23664500'%20id='02'%3e%3c/path%3e%3cpath%20d='M%2011.410000000000002%2017.892%20C%209.075000000000003%2017.892%207.540000000000002%2016.895%207.4460000000000015%2016.832%20C%206.987000000000002%2016.526%206.863000000000001%2015.905000000000001%207.169000000000001%2015.445%20C%207.475000000000001%2014.985%208.095%2014.86%208.556000000000001%2015.168000000000001%20C%208.655000000000001%2015.232000000000001%2011.158000000000001%2016.804000000000002%2014.554000000000002%2015.106000000000002%20C%2015.049000000000001%2014.859000000000002%2015.649000000000003%2015.060000000000002%2015.896000000000003%2015.553%20C%2016.143000000000004%2016.047%2015.943000000000003%2016.648%2015.449000000000003%2016.895%20C%2013.954000000000004%2017.641%2012.581000000000003%2017.892%2011.410000000000004%2017.892%20Z'%20fill='%23664500'%20id='03'%3e%3c/path%3e%3cpath%20d='M%2015.999000000000002%2013%20C%2015.520000000000003%2013%2015.097000000000003%2012.655%2015.014000000000003%2012.167%20C%2014.977%2011.957%2014.059%207%209%207%20C%208.448%207%208%206.552%208%206%20S%208.448%205%209%205%20C%2014.416%205%2016.592%209.471%2016.986%2011.835%20C%2017.077%2012.38%2016.709%2012.895000000000001%2016.164%2012.986%20C%2016.109%2012.996%2016.053%2013%2015.999000000000002%2013%20Z'%20fill='%23664500'%20id='04'%3e%3c/path%3e%3cpath%20d='M%2020.001%2013%20C%2019.946%2013%2019.892%2012.996%2019.836000000000002%2012.986%20C%2019.291%2012.895000000000001%2018.923000000000002%2012.38%2019.014000000000003%2011.835%20C%2019.407%209.471%2021.584%205%2027%205%20C%2027.553%205%2028%205.448%2028%206%20S%2027.553%207%2027%207%20C%2021.905%207%2021.021%2011.954%2020.986%2012.165%20C%2020.905%2012.652999999999999%2020.481%2013%2020.001%2013%20Z'%20fill='%23664500'%20id='05'%3e%3c/path%3e%3cpath%20d='M%2026.848%2028.47%20L%2021.848%2020.47%20C%2021.586%2020.052%2021.061%2019.886%2020.61%2020.08%20C%2020.157%2020.272%2019.910999999999998%2020.766%2020.031%2021.241999999999997%20L%2022.031%2029.241999999999997%20C%2022.142%2029.688%2022.541%2029.999999999999996%2023%2029.999999999999996%20H%2026%20C%2026.363%2029.999999999999996%2026.698%2029.802999999999997%2026.875%2029.483999999999995%20C%2027.051%2029.166999999999994%2027.041%2028.777999999999995%2026.848%2028.469999999999995%20Z'%20fill='%23f5f8fa'%20id='06'%3e%3c/path%3e%3cpath%20d='M%2015.391%2020.08%20C%2014.938%2019.884999999999998%2014.412%2020.052999999999997%2014.152%2020.47%20L%209.152%2028.47%20C%208.959999999999999%2028.779%208.949%2029.166999999999998%209.126%2029.485%20C%209.302%2029.803%209.636%2030%2010%2030%20H%2013%20C%2013.459%2030%2013.859%2029.688%2013.97%2029.242%20L%2015.97%2021.242%20C%2016.089000000000002%2020.766000000000002%2015.844000000000001%2020.272000000000002%2015.391%2020.080000000000002%20Z'%20fill='%23f5f8fa'%20id='07'%3e%3c/path%3e%3cpath%20d='M%2011%2028%20C%2010.458%2028%209.943999999999999%2028.11%209.473%2028.305%20C%208.932%2027.518%208.027%2027%207%2027%20C%205.344%2027%204%2028.344%204%2030%20C%204%2030.061%204.014%2030.118%204.018%2030.178%20C%202.846%2030.586%202%2031.688%202%2033%20C%202%2034.657%203.343%2036%205%2036%20C%206.202%2036%207.231%2035.289%207.709%2034.269%20C%208.432%2035.313%209.634%2036%2011%2036%20C%2013.209%2036%2015%2034.209%2015%2032%20S%2013.209%2028%2011%2028%20Z'%20fill='%23e1e8ed'%20id='08'%3e%3c/path%3e%3cpath%20d='M%2031.982%2030.178%20C%2031.985%2030.118000000000002%2032%2030.061%2032%2030%20C%2032%2028.344%2030.656%2027%2029%2027%20C%2027.973%2027%2027.068%2027.518%2026.527%2028.305%20C%2026.057%2028.11%2025.541%2028%2025%2028%20C%2022.791%2028%2021%2029.791%2021%2032%20S%2022.791%2036%2025%2036%20C%2026.365%2036%2027.568%2035.313%2028.29%2034.269%20C%2028.77%2035.289%2029.798%2036%2031%2036%20C%2032.657%2036%2034%2034.657%2034%2033%20C%2034%2031.688%2033.154%2030.586%2031.982%2030.178%20Z'%20fill='%23e1e8ed'%20id='09'%3e%3c/path%3e%3c/svg%3e", z2 = "data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%2036%2036'%3e%3ccircle%20fill='%23FFCC4D'%20cx='18'%20cy='18'%20r='18'%20id='00'%3e%3c/circle%3e%3cpath%20d='%20M%2030.987000000000002%2013.393%20C%2031.115000000000002%2013.930000000000001%2030.783%2014.47%2030.246000000000002%2014.598%20C%2029.71%2014.726%2029.172%2014.396%2029.042%2013.861%20C%2029.004%2013.71%2028.131%2010.409%2024.101000000000003%208.66%20C%2023.596000000000004%208.44%2023.362000000000002%207.852%2023.582000000000004%207.345000000000001%20C%2023.802000000000003%206.838000000000001%2024.391000000000005%206.606000000000001%2024.897000000000006%206.8260000000000005%20C%2029.886000000000006%208.991%2030.944000000000006%2013.214%2030.987000000000005%2013.393%20Z'%20fill='%2365471b'%20id='01'%3e%3c/path%3e%3cpath%20d='M%206.001%2011%20C%205.449%2011%205.001%2010.552%205.001%2010%20C%205.001%209.449%205.446000000000001%209.002%205.997%209%20C%206.153%208.998%209.565999999999999%208.914%2012.202%205.4%20C%2012.533%204.96%2013.159%204.868%2013.602%205.2%20C%2014.044%205.531000000000001%2014.133000000000001%206.158%2013.802%206.6%20C%2010.539%2010.95%206.185%2011%206.0009999999999994%2011%20Z'%20fill='%2365471b'%20id='02'%3e%3c/path%3e%3cpath%20d='M%2023.186%2029.526%20C%2022.193%2029.526%2021.234%2029.071%2020.398%2028.187%20C%2017.582%2025.202%2016.829%2025.854%2015.581%2026.936%20C%2014.799999999999999%2027.615%2013.827%2028.459%2012.376%2028.459%20C%2010.024999999999999%2028.459%208.407%2026.157%208.34%2026.059%20C%208.026%2025.605%208.14%2024.982%208.594%2024.668%20C%209.045%2024.355999999999998%209.668%2024.468%209.984%2024.919%20C%2010.285%2025.348%2011.301%2026.459%2012.376999999999999%2026.459%20C%2013.081%2026.459%2013.633%2025.98%2014.271999999999998%2025.426%20C%2016.087999999999997%2023.848%2018.035999999999998%2022.770999999999997%2021.854999999999997%2026.814%20C%2022.677999999999997%2027.687%2023.306999999999995%2027.588%2023.762999999999998%2027.406%20C%2025.421999999999997%2026.741%2026.967999999999996%2023.708%2026.959999999999997%2022.256%20C%2026.956999999999997%2021.704%2027.401999999999997%2021.254%2027.953999999999997%2021.251%20H%2027.959999999999997%20C%2028.509999999999998%2021.251%2028.956999999999997%2021.695%2028.959999999999997%2022.246000000000002%20C%2028.971999999999998%2024.349000000000004%2027.105999999999998%2028.222%2024.505999999999997%2029.263%20C%2024.062999999999995%2029.438000000000002%2023.620999999999995%2029.525000000000002%2023.185999999999996%2029.526000000000003%20Z'%20fill='%23664500'%20id='03'%3e%3c/path%3e%3cpath%20d='%20M%2026.231%2014.62%20C%2026.704%2016.761%2025.556%2019.458%2024.027%2019.796%20S%2020.747%2018.076999999999998%2020.274%2015.936%20C%2019.801000000000002%2013.796%2020.693%2011.965%2022.222%2011.626999999999999%20S%2025.758000000000003%2012.479999999999999%2026.231%2014.62%20Z'%20fill='%2365471b'%20id='04'%3e%3c/path%3e%3cpath%20d='M%2014.815%2015.375%20C%2014.231%2017.489%2013.173%2018.458%2011.663%2018.041%20C%2010.154%2017.624%209.32%2016.132%209.903%2014.018%20C%2010.486%2011.906%2012.078%2010.655000000000001%2013.587%2011.072000000000001%20C%2015.097999999999999%2011.489%2015.399%2013.262%2014.815%2015.375%20Z'%20fill='%2365471b'%20id='05'%3e%3c/path%3e%3c/svg%3e", I2 = "data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%2036%2036'%3e%3cpath%20d='M%2035.597%2014.232%20C%2037.68%2023.951999999999998%2031.489%2033.521%2021.769000000000002%2035.604%20C%2012.049%2037.687%202.48%2031.496%200.397%2021.776%20C%20-1.686%2012.056%204.506%202.487%2014.225%200.404%20C%2023.945%20-1.6800000000000002%2033.514%204.512%2035.597%2014.232'%20fill='%23ffcb4c'%20id='00'%3e%3c/path%3e%3cpath%20d='M%2029.284%209.012%20C%2030.063%2012.648%2027.747%2016.228%2024.110999999999997%2017.007%20C%2020.474999999999998%2017.786%2016.894999999999996%2015.470000000000002%2016.114999999999995%2011.834000000000001%20C%2015.335999999999995%208.198%2017.651999999999994%204.618000000000001%2021.287999999999997%203.8390000000000013%20S%2028.504999999999995%205.375000000000002%2029.284%209.012%20Z'%20fill='%23f4f7f9'%20id='01'%3e%3c/path%3e%3ccircle%20fill='%23292F33'%20cx='22.306'%20cy='9.291'%20r='2.037'%20id='02'%3e%3c/circle%3e%3cpath%20d='M%2014.088%2014.282%20C%2014.543999999999999%2016.408%2013.189%2018.501%2011.062999999999999%2018.957%20S%206.8439999999999985%2018.058%206.387999999999999%2015.932%20C%205.931999999999999%2013.806000000000001%207.286999999999999%2011.713000000000001%209.412999999999998%2011.257000000000001%20S%2013.631999999999998%2012.156000000000002%2014.087999999999997%2014.282000000000002%20Z'%20fill='%23f4f7f9'%20id='03'%3e%3c/path%3e%3cellipse%20transform='rotate(-12.095%2010.236%2015.853)'%20fill='%23292F33'%20cx='10.238'%20cy='15.857'%20rx='1.942'%20ry='1.942'%20id='04'%3e%3c/ellipse%3e%3cpath%20d='M%2018.625%2020.937%20C%2015.082%2021.696%2012.644%2021.787000000000003%209.615%2021.845000000000002%20C%208.924%2021.860000000000003%207.66%2022.264000000000003%208.079%2024.220000000000002%20C%208.917%2028.131000000000004%2014.458%2032.057%2020.721%2030.715000000000003%20C%2026.983%2029.373000000000005%2030.429000000000002%2023.521000000000004%2029.591%2019.610000000000003%20C%2029.172%2017.654000000000003%2027.852%2017.802000000000003%2027.216%2018.074%20C%2024.43%2019.261000000000003%2022.168%2020.178%2018.625%2020.937%20Z'%20fill='%2365471b'%20id='05'%3e%3c/path%3e%3cpath%20d='M%2011%2024.004%20V%2030.004%20C%2011%2033.004000000000005%2013%2036.004000000000005%2017%2036.004000000000005%20S%2023%2033.004000000000005%2023%2030.004000000000005%20V%2024.004000000000005%20H%2011%20Z'%20fill='%23e8596e'%20id='06'%3e%3c/path%3e%3cpath%20d='M%2017%2031.883%20C%2017.301%2031.883%2017.545%2031.639%2017.545%2031.337999999999997%20V%2025.043%20H%2016.454%20V%2031.338%20C%2016.455000000000002%2031.639%2016.699%2031.883000000000003%2017%2031.883000000000003%20Z'%20fill='%23dd2f45'%20id='07'%3e%3c/path%3e%3cpath%20d='M%2010.034%2023.801%20S%2013.177%2024.15%2019.044%2022.892999999999997%20C%2024.911%2021.635999999999996%2027.634999999999998%2020.028999999999996%2027.634999999999998%2020.028999999999996%20S%2026.517999999999997%2024.358999999999995%2019.673%2025.825999999999997%20C%2012.828%2027.292999999999996%2010.033999999999999%2023.801%2010.033999999999999%2023.801%20Z'%20fill='%23ffffff'%20id='08'%3e%3c/path%3e%3c/svg%3e", R2 = "data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%2036%2036'%3e%3ccircle%20fill='%23FFCC4D'%20cx='18'%20cy='18'%20r='18'%20id='00'%3e%3c/circle%3e%3cpath%20d='M%2014.034%2014.499%20C%2014.034%2016.433%2012.915000000000001%2017.999000000000002%2011.534%2017.999000000000002%20S%209.034%2016.433000000000003%209.034%2014.499000000000002%20C%209.034%2012.566000000000003%2010.153%2010.999000000000002%2011.534%2010.999000000000002%20S%2014.034%2012.566000000000003%2014.034%2014.499000000000002'%20fill='%23664500'%20id='01'%3e%3c/path%3e%3cpath%20d='M%2027.034%2014.499000000000002%20C%2027.034%2016.433000000000003%2025.915%2017.999000000000002%2024.534%2017.999000000000002%20S%2022.034%2016.433000000000003%2022.034%2014.499000000000002%20C%2022.034%2012.566000000000003%2023.153%2010.999000000000002%2024.534%2010.999000000000002%20S%2027.034%2012.566000000000003%2027.034%2014.499000000000002'%20fill='%23664500'%20id='02'%3e%3c/path%3e%3cpath%20d='M%2025.000999999999998%2027.004000000000005%20H%2010%20C%209%2027.004000000000005%209%2026.004000000000005%209%2026.004000000000005%20V%2025.004000000000005%20S%209%2024.001000000000005%2010%2024.001000000000005%20L%2025.000999999999998%2024.004000000000005%20V%2027.004000000000005%20Z'%20fill='%23664500'%20id='03'%3e%3c/path%3e%3cpath%20d='M%2031.483000000000004%2032.155%20L%2028.839000000000006%2029.907%20L%2030.453000000000007%2026.838%20L%2033.791000000000004%2027.970000000000002%20L%2031.483000000000004%2032.155%20Z'%20fill='%2399aab5'%20id='04'%3e%3c/path%3e%3cpath%20d='M%2035.255%2026.084%20L%2027.542%2023.963%20C%2026.822000000000003%2023.766000000000002%2026.493000000000002%2024.25%2026.371000000000002%2024.51%20L%2024.731%2023.726000000000003%20L%2024%2025.255%20V%2023.000999999999998%20H%2022%20V%2025.000999999999998%20H%2020%20V%2023.000999999999998%20H%2017.999%20V%2025.000999999999998%20H%2016%20V%2023.000999999999998%20H%2014%20V%2025.000999999999998%20H%2012%20V%2023.000999999999998%20H%2010%20V%2026.000999999999998%20H%2012%20V%2028.000999999999998%20H%2014%20V%2026.000999999999998%20H%2015.999%20V%2028.000999999999998%20H%2017.999000000000002%20V%2026.000999999999998%20H%2020%20V%2028.000999999999998%20H%2022%20V%2026.000999999999998%20H%2023.643%20L%2023.063000000000002%2027.212999999999997%20L%2024.711000000000002%2028.000999999999998%20L%2024.612000000000002%2028.208%20S%2024.364%2028.944999999999997%2024.985000000000003%2029.482999999999997%20C%2025.606%2030.019999999999996%2030.270000000000003%2034.217999999999996%2030.270000000000003%2034.217999999999996%20S%2031.169000000000004%2035.083999999999996%2032.039%2034.297%20C%2032.777%2033.626999999999995%2035.688%2028.276999999999997%2035.953%2027.313999999999997%20C%2036.219%2026.349999999999998%2035.255%2026.083999999999996%2035.255%2026.083999999999996%20Z'%20fill='%2399aab5'%20id='05'%3e%3c/path%3e%3c/svg%3e", E0 = {}, y9 = [];
function u(e, t) {
  if (Array.isArray(e)) {
    for (const i of e)
      u(i, t);
    return;
  }
  if (typeof e == "object") {
    for (const i in e)
      u(i, e[i]);
    return;
  }
  w9(Object.getOwnPropertyNames(t)), E0[e] = Object.assign(E0[e] || {}, t);
}
function T(e) {
  return E0[e] || {};
}
function P2() {
  return [...new Set(y9)];
}
function w9(e) {
  y9.push(...e);
}
function U0(e, t) {
  let i;
  const s = e.length, n = [];
  for (i = 0; i < s; i++)
    n.push(t(e[i]));
  return n;
}
function q2(e, t) {
  let i;
  const s = e.length, n = [];
  for (i = 0; i < s; i++)
    t(e[i]) && n.push(e[i]);
  return n;
}
function j0(e) {
  return e % 360 * Math.PI / 180;
}
function $2(e) {
  return e.replace(/([A-Z])/g, function(t, i) {
    return "-" + i.toLowerCase();
  });
}
function _9(e) {
  return e.charAt(0).toUpperCase() + e.slice(1);
}
function s0(e, t, i, s) {
  return (t == null || i == null) && (s = s || e.bbox(), t == null ? t = s.width / s.height * i : i == null && (i = s.height / s.width * t)), {
    width: t,
    height: i
  };
}
function O0(e, t) {
  const i = e.origin;
  let s = e.ox != null ? e.ox : e.originX != null ? e.originX : "center", n = e.oy != null ? e.oy : e.originY != null ? e.originY : "center";
  i != null && ([s, n] = Array.isArray(i) ? i : typeof i == "object" ? [i.x, i.y] : [i, i]);
  const r = typeof s == "string", c = typeof n == "string";
  if (r || c) {
    const { height: l, width: a, x: o, y: h } = t.bbox();
    r && (s = s.includes("left") ? o : s.includes("right") ? o + a : o + a / 2), c && (n = n.includes("top") ? h : n.includes("bottom") ? h + l : h + l / 2);
  }
  return [s, n];
}
const Y2 = /* @__PURE__ */ new Set(["desc", "metadata", "title"]), D0 = (e) => Y2.has(e.nodeName), x9 = (e, t, i = {}) => {
  const s = { ...t };
  for (const n in s)
    s[n].valueOf() === i[n] && delete s[n];
  Object.keys(s).length ? e.node.setAttribute("data-svgjs", JSON.stringify(s)) : (e.node.removeAttribute("data-svgjs"), e.node.removeAttribute("svgjs:data"));
}, G0 = "http://www.w3.org/2000/svg", X2 = "http://www.w3.org/1999/xhtml", H0 = "http://www.w3.org/2000/xmlns/", f0 = "http://www.w3.org/1999/xlink", m = {
  window: typeof window > "u" ? null : window,
  document: typeof document > "u" ? null : document
};
function U2() {
  return m.window;
}
class Q0 {
  // constructor (node/*, {extensions = []} */) {
  //   // this.tags = []
  //   //
  //   // for (let extension of extensions) {
  //   //   extension.setup.call(this, node)
  //   //   this.tags.push(extension.name)
  //   // }
  // }
}
const G = {}, W0 = "___SYMBOL___ROOT___";
function a0(e, t = G0) {
  return m.document.createElementNS(t, e);
}
function H(e, t = !1) {
  if (e instanceof Q0) return e;
  if (typeof e == "object")
    return T0(e);
  if (e == null)
    return new G[W0]();
  if (typeof e == "string" && e.charAt(0) !== "<")
    return T0(m.document.querySelector(e));
  const i = t ? m.document.createElement("div") : a0("svg");
  return i.innerHTML = e, e = T0(i.firstChild), i.removeChild(i.firstChild), e;
}
function v(e, t) {
  return t && (t instanceof m.window.Node || t.ownerDocument && t instanceof t.ownerDocument.defaultView.Node) ? t : a0(e);
}
function E(e) {
  if (!e) return null;
  if (e.instance instanceof Q0) return e.instance;
  if (e.nodeName === "#document-fragment")
    return new G.Fragment(e);
  let t = _9(e.nodeName || "Dom");
  return t === "LinearGradient" || t === "RadialGradient" ? t = "Gradient" : G[t] || (t = "Dom"), new G[t](e);
}
let T0 = E;
function g(e, t = e.name, i = !1) {
  return G[t] = e, i && (G[W0] = e), w9(Object.getOwnPropertyNames(e.prototype)), e;
}
function G2(e) {
  return G[e];
}
let Q2 = 1e3;
function b9(e) {
  return "Svgjs" + _9(e) + Q2++;
}
function v9(e) {
  for (let t = e.children.length - 1; t >= 0; t--)
    v9(e.children[t]);
  return e.id && (e.id = b9(e.nodeName)), e;
}
function p(e, t) {
  let i, s;
  for (e = Array.isArray(e) ? e : [e], s = e.length - 1; s >= 0; s--)
    for (i in t)
      e[s].prototype[i] = t[i];
}
function b(e) {
  return function(...t) {
    const i = t[t.length - 1];
    return i && i.constructor === Object && !(i instanceof Array) ? e.apply(this, t.slice(0, -1)).attr(i) : e.apply(this, t);
  };
}
function W2() {
  return this.parent().children();
}
function J2() {
  return this.parent().index(this);
}
function K2() {
  return this.siblings()[this.position() + 1];
}
function t1() {
  return this.siblings()[this.position() - 1];
}
function e1() {
  const e = this.position();
  return this.parent().add(this.remove(), e + 1), this;
}
function i1() {
  const e = this.position();
  return this.parent().add(this.remove(), e ? e - 1 : 0), this;
}
function s1() {
  return this.parent().add(this.remove()), this;
}
function n1() {
  return this.parent().add(this.remove(), 0), this;
}
function r1(e) {
  e = H(e), e.remove();
  const t = this.position();
  return this.parent().add(e, t), this;
}
function c1(e) {
  e = H(e), e.remove();
  const t = this.position();
  return this.parent().add(e, t + 1), this;
}
function l1(e) {
  return e = H(e), e.before(this), this;
}
function a1(e) {
  return e = H(e), e.after(this), this;
}
u("Dom", {
  siblings: W2,
  position: J2,
  next: K2,
  prev: t1,
  forward: e1,
  backward: i1,
  front: s1,
  back: n1,
  before: r1,
  after: c1,
  insertBefore: l1,
  insertAfter: a1
});
const M9 = /^([+-]?(\d+(\.\d*)?|\.\d+)(e[+-]?\d+)?)([a-z%]*)$/i, o1 = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i, h1 = /rgb\((\d+),(\d+),(\d+)\)/, C1 = /(#[a-z_][a-z0-9\-_]*)/i, f1 = /\)\s*,?\s*/, d1 = /\s/g, f9 = /^#[a-f0-9]{3}$|^#[a-f0-9]{6}$/i, d9 = /^rgb\(/, u9 = /^(\s+)?$/, p9 = /^[+-]?(\d+(\.\d*)?|\.\d+)(e[+-]?\d+)?$/i, u1 = /\.(jpg|jpeg|png|gif|svg)(\?[^=]+.*)?/i, z = /[\s,]+/, J0 = /[MLHVCSQTAZ]/i;
function p1() {
  const e = this.attr("class");
  return e == null ? [] : e.trim().split(z);
}
function m1(e) {
  return this.classes().indexOf(e) !== -1;
}
function g1(e) {
  if (!this.hasClass(e)) {
    const t = this.classes();
    t.push(e), this.attr("class", t.join(" "));
  }
  return this;
}
function y1(e) {
  return this.hasClass(e) && this.attr(
    "class",
    this.classes().filter(function(t) {
      return t !== e;
    }).join(" ")
  ), this;
}
function w1(e) {
  return this.hasClass(e) ? this.removeClass(e) : this.addClass(e);
}
u("Dom", {
  classes: p1,
  hasClass: m1,
  addClass: g1,
  removeClass: y1,
  toggleClass: w1
});
function _1(e, t) {
  const i = {};
  if (arguments.length === 0)
    return this.node.style.cssText.split(/\s*;\s*/).filter(function(s) {
      return !!s.length;
    }).forEach(function(s) {
      const n = s.split(/\s*:\s*/);
      i[n[0]] = n[1];
    }), i;
  if (arguments.length < 2) {
    if (Array.isArray(e)) {
      for (const s of e) {
        const n = s;
        i[s] = this.node.style.getPropertyValue(n);
      }
      return i;
    }
    if (typeof e == "string")
      return this.node.style.getPropertyValue(e);
    if (typeof e == "object")
      for (const s in e)
        this.node.style.setProperty(
          s,
          e[s] == null || u9.test(e[s]) ? "" : e[s]
        );
  }
  return arguments.length === 2 && this.node.style.setProperty(
    e,
    t == null || u9.test(t) ? "" : t
  ), this;
}
function x1() {
  return this.css("display", "");
}
function b1() {
  return this.css("display", "none");
}
function v1() {
  return this.css("display") !== "none";
}
u("Dom", {
  css: _1,
  show: x1,
  hide: b1,
  visible: v1
});
function M1(e, t, i) {
  if (e == null)
    return this.data(
      U0(
        q2(
          this.node.attributes,
          (s) => s.nodeName.indexOf("data-") === 0
        ),
        (s) => s.nodeName.slice(5)
      )
    );
  if (e instanceof Array) {
    const s = {};
    for (const n of e)
      s[n] = this.data(n);
    return s;
  } else if (typeof e == "object")
    for (t in e)
      this.data(t, e[t]);
  else if (arguments.length < 2)
    try {
      return JSON.parse(this.attr("data-" + e));
    } catch {
      return this.attr("data-" + e);
    }
  else
    this.attr(
      "data-" + e,
      t === null ? null : i === !0 || typeof t == "string" || typeof t == "number" ? t : JSON.stringify(t)
    );
  return this;
}
u("Dom", { data: M1 });
function S1(e, t) {
  if (typeof arguments[0] == "object")
    for (const i in e)
      this.remember(i, e[i]);
  else {
    if (arguments.length === 1)
      return this.memory()[e];
    this.memory()[e] = t;
  }
  return this;
}
function Z1() {
  if (arguments.length === 0)
    this._memory = {};
  else
    for (let e = arguments.length - 1; e >= 0; e--)
      delete this.memory()[arguments[e]];
  return this;
}
function L1() {
  return this._memory = this._memory || {};
}
u("Dom", { remember: S1, forget: Z1, memory: L1 });
function A1(e) {
  return e.length === 4 ? [
    "#",
    e.substring(1, 2),
    e.substring(1, 2),
    e.substring(2, 3),
    e.substring(2, 3),
    e.substring(3, 4),
    e.substring(3, 4)
  ].join("") : e;
}
function j1(e) {
  const t = Math.round(e), s = Math.max(0, Math.min(255, t)).toString(16);
  return s.length === 1 ? "0" + s : s;
}
function J(e, t) {
  for (let i = t.length; i--; )
    if (e[t[i]] == null)
      return !1;
  return !0;
}
function H1(e, t) {
  const i = J(e, "rgb") ? { _a: e.r, _b: e.g, _c: e.b, _d: 0, space: "rgb" } : J(e, "xyz") ? { _a: e.x, _b: e.y, _c: e.z, _d: 0, space: "xyz" } : J(e, "hsl") ? { _a: e.h, _b: e.s, _c: e.l, _d: 0, space: "hsl" } : J(e, "lab") ? { _a: e.l, _b: e.a, _c: e.b, _d: 0, space: "lab" } : J(e, "lch") ? { _a: e.l, _b: e.c, _c: e.h, _d: 0, space: "lch" } : J(e, "cmyk") ? { _a: e.c, _b: e.m, _c: e.y, _d: e.k, space: "cmyk" } : { _a: 0, _b: 0, _c: 0, space: "rgb" };
  return i.space = t || i.space, i;
}
function T1(e) {
  return e === "lab" || e === "xyz" || e === "lch";
}
function k0(e, t, i) {
  return i < 0 && (i += 1), i > 1 && (i -= 1), i < 1 / 6 ? e + (t - e) * 6 * i : i < 1 / 2 ? t : i < 2 / 3 ? e + (t - e) * (2 / 3 - i) * 6 : e;
}
class _ {
  constructor(...t) {
    this.init(...t);
  }
  // Test if given value is a color
  static isColor(t) {
    return t && (t instanceof _ || this.isRgb(t) || this.test(t));
  }
  // Test if given value is an rgb object
  static isRgb(t) {
    return t && typeof t.r == "number" && typeof t.g == "number" && typeof t.b == "number";
  }
  /*
  Generating random colors
  */
  static random(t = "vibrant", i) {
    const { random: s, round: n, sin: r, PI: c } = Math;
    if (t === "vibrant") {
      const l = 24 * s() + 57, a = 38 * s() + 45, o = 360 * s();
      return new _(l, a, o, "lch");
    } else if (t === "sine") {
      i = i ?? s();
      const l = n(80 * r(2 * c * i / 0.5 + 0.01) + 150), a = n(50 * r(2 * c * i / 0.5 + 4.6) + 200), o = n(100 * r(2 * c * i / 0.5 + 2.3) + 150);
      return new _(l, a, o);
    } else if (t === "pastel") {
      const l = 8 * s() + 86, a = 17 * s() + 9, o = 360 * s();
      return new _(l, a, o, "lch");
    } else if (t === "dark") {
      const l = 10 + 10 * s(), a = 50 * s() + 86, o = 360 * s();
      return new _(l, a, o, "lch");
    } else if (t === "rgb") {
      const l = 255 * s(), a = 255 * s(), o = 255 * s();
      return new _(l, a, o);
    } else if (t === "lab") {
      const l = 100 * s(), a = 256 * s() - 128, o = 256 * s() - 128;
      return new _(l, a, o, "lab");
    } else if (t === "grey") {
      const l = 255 * s();
      return new _(l, l, l);
    } else
      throw new Error("Unsupported random color mode");
  }
  // Test if given value is a color string
  static test(t) {
    return typeof t == "string" && (f9.test(t) || d9.test(t));
  }
  cmyk() {
    const { _a: t, _b: i, _c: s } = this.rgb(), [n, r, c] = [t, i, s].map((y) => y / 255), l = Math.min(1 - n, 1 - r, 1 - c);
    if (l === 1)
      return new _(0, 0, 0, 1, "cmyk");
    const a = (1 - n - l) / (1 - l), o = (1 - r - l) / (1 - l), h = (1 - c - l) / (1 - l);
    return new _(a, o, h, l, "cmyk");
  }
  hsl() {
    const { _a: t, _b: i, _c: s } = this.rgb(), [n, r, c] = [t, i, s].map((Z) => Z / 255), l = Math.max(n, r, c), a = Math.min(n, r, c), o = (l + a) / 2, h = l === a, C = l - a, y = h ? 0 : o > 0.5 ? C / (2 - l - a) : C / (l + a), x = h ? 0 : l === n ? ((r - c) / C + (r < c ? 6 : 0)) / 6 : l === r ? ((c - n) / C + 2) / 6 : l === c ? ((n - r) / C + 4) / 6 : 0;
    return new _(360 * x, 100 * y, 100 * o, "hsl");
  }
  init(t = 0, i = 0, s = 0, n = 0, r = "rgb") {
    if (t = t || 0, this.space)
      for (const C in this.space)
        delete this[this.space[C]];
    if (typeof t == "number")
      r = typeof n == "string" ? n : r, n = typeof n == "string" ? 0 : n, Object.assign(this, { _a: t, _b: i, _c: s, _d: n, space: r });
    else if (t instanceof Array)
      this.space = i || (typeof t[3] == "string" ? t[3] : t[4]) || "rgb", Object.assign(this, { _a: t[0], _b: t[1], _c: t[2], _d: t[3] || 0 });
    else if (t instanceof Object) {
      const C = H1(t, i);
      Object.assign(this, C);
    } else if (typeof t == "string")
      if (d9.test(t)) {
        const C = t.replace(d1, ""), [y, x, S] = h1.exec(C).slice(1, 4).map((Z) => parseInt(Z));
        Object.assign(this, { _a: y, _b: x, _c: S, _d: 0, space: "rgb" });
      } else if (f9.test(t)) {
        const C = (Z) => parseInt(Z, 16), [, y, x, S] = o1.exec(A1(t)).map(C);
        Object.assign(this, { _a: y, _b: x, _c: S, _d: 0, space: "rgb" });
      } else throw Error("Unsupported string format, can't construct Color");
    const { _a: c, _b: l, _c: a, _d: o } = this, h = this.space === "rgb" ? { r: c, g: l, b: a } : this.space === "xyz" ? { x: c, y: l, z: a } : this.space === "hsl" ? { h: c, s: l, l: a } : this.space === "lab" ? { l: c, a: l, b: a } : this.space === "lch" ? { l: c, c: l, h: a } : this.space === "cmyk" ? { c, m: l, y: a, k: o } : {};
    Object.assign(this, h);
  }
  lab() {
    const { x: t, y: i, z: s } = this.xyz(), n = 116 * i - 16, r = 500 * (t - i), c = 200 * (i - s);
    return new _(n, r, c, "lab");
  }
  lch() {
    const { l: t, a: i, b: s } = this.lab(), n = Math.sqrt(i ** 2 + s ** 2);
    let r = 180 * Math.atan2(s, i) / Math.PI;
    return r < 0 && (r *= -1, r = 360 - r), new _(t, n, r, "lch");
  }
  /*
  Conversion Methods
  */
  rgb() {
    if (this.space === "rgb")
      return this;
    if (T1(this.space)) {
      let { x: t, y: i, z: s } = this;
      if (this.space === "lab" || this.space === "lch") {
        let { l: x, a: S, b: Z } = this;
        if (this.space === "lch") {
          const { c: Y, h: y0 } = this, w0 = Math.PI / 180;
          S = Y * Math.cos(w0 * y0), Z = Y * Math.sin(w0 * y0);
        }
        const M = (x + 16) / 116, A = S / 500 + M, O = M - Z / 200, D = 16 / 116, I = 8856e-6, R = 7.787;
        t = 0.95047 * (A ** 3 > I ? A ** 3 : (A - D) / R), i = 1 * (M ** 3 > I ? M ** 3 : (M - D) / R), s = 1.08883 * (O ** 3 > I ? O ** 3 : (O - D) / R);
      }
      const n = t * 3.2406 + i * -1.5372 + s * -0.4986, r = t * -0.9689 + i * 1.8758 + s * 0.0415, c = t * 0.0557 + i * -0.204 + s * 1.057, l = Math.pow, a = 31308e-7, o = n > a ? 1.055 * l(n, 1 / 2.4) - 0.055 : 12.92 * n, h = r > a ? 1.055 * l(r, 1 / 2.4) - 0.055 : 12.92 * r, C = c > a ? 1.055 * l(c, 1 / 2.4) - 0.055 : 12.92 * c;
      return new _(255 * o, 255 * h, 255 * C);
    } else if (this.space === "hsl") {
      let { h: t, s: i, l: s } = this;
      if (t /= 360, i /= 100, s /= 100, i === 0)
        return s *= 255, new _(s, s, s);
      const n = s < 0.5 ? s * (1 + i) : s + i - s * i, r = 2 * s - n, c = 255 * k0(r, n, t + 1 / 3), l = 255 * k0(r, n, t), a = 255 * k0(r, n, t - 1 / 3);
      return new _(c, l, a);
    } else if (this.space === "cmyk") {
      const { c: t, m: i, y: s, k: n } = this, r = 255 * (1 - Math.min(1, t * (1 - n) + n)), c = 255 * (1 - Math.min(1, i * (1 - n) + n)), l = 255 * (1 - Math.min(1, s * (1 - n) + n));
      return new _(r, c, l);
    } else
      return this;
  }
  toArray() {
    const { _a: t, _b: i, _c: s, _d: n, space: r } = this;
    return [t, i, s, n, r];
  }
  toHex() {
    const [t, i, s] = this._clamped().map(j1);
    return `#${t}${i}${s}`;
  }
  toRgb() {
    const [t, i, s] = this._clamped();
    return `rgb(${t},${i},${s})`;
  }
  toString() {
    return this.toHex();
  }
  xyz() {
    const { _a: t, _b: i, _c: s } = this.rgb(), [n, r, c] = [t, i, s].map((A) => A / 255), l = n > 0.04045 ? Math.pow((n + 0.055) / 1.055, 2.4) : n / 12.92, a = r > 0.04045 ? Math.pow((r + 0.055) / 1.055, 2.4) : r / 12.92, o = c > 0.04045 ? Math.pow((c + 0.055) / 1.055, 2.4) : c / 12.92, h = (l * 0.4124 + a * 0.3576 + o * 0.1805) / 0.95047, C = (l * 0.2126 + a * 0.7152 + o * 0.0722) / 1, y = (l * 0.0193 + a * 0.1192 + o * 0.9505) / 1.08883, x = h > 8856e-6 ? Math.pow(h, 1 / 3) : 7.787 * h + 16 / 116, S = C > 8856e-6 ? Math.pow(C, 1 / 3) : 7.787 * C + 16 / 116, Z = y > 8856e-6 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;
    return new _(x, S, Z, "xyz");
  }
  /*
  Input and Output methods
  */
  _clamped() {
    const { _a: t, _b: i, _c: s } = this.rgb(), { max: n, min: r, round: c } = Math, l = (a) => n(0, r(c(a), 255));
    return [t, i, s].map(l);
  }
  /*
  Constructing colors
  */
}
class L {
  // Initialize
  constructor(...t) {
    this.init(...t);
  }
  // Clone point
  clone() {
    return new L(this);
  }
  init(t, i) {
    const s = { x: 0, y: 0 }, n = Array.isArray(t) ? { x: t[0], y: t[1] } : typeof t == "object" ? { x: t.x, y: t.y } : { x: t, y: i };
    return this.x = n.x == null ? s.x : n.x, this.y = n.y == null ? s.y : n.y, this;
  }
  toArray() {
    return [this.x, this.y];
  }
  transform(t) {
    return this.clone().transformO(t);
  }
  // Transform point with matrix
  transformO(t) {
    f.isMatrixLike(t) || (t = new f(t));
    const { x: i, y: s } = this;
    return this.x = t.a * i + t.c * s + t.e, this.y = t.b * i + t.d * s + t.f, this;
  }
}
function k1(e, t) {
  return new L(e, t).transformO(this.screenCTM().inverseO());
}
function K(e, t, i) {
  return Math.abs(t - e) < 1e-6;
}
class f {
  constructor(...t) {
    this.init(...t);
  }
  static formatTransforms(t) {
    const i = t.flip === "both" || t.flip === !0, s = t.flip && (i || t.flip === "x") ? -1 : 1, n = t.flip && (i || t.flip === "y") ? -1 : 1, r = t.skew && t.skew.length ? t.skew[0] : isFinite(t.skew) ? t.skew : isFinite(t.skewX) ? t.skewX : 0, c = t.skew && t.skew.length ? t.skew[1] : isFinite(t.skew) ? t.skew : isFinite(t.skewY) ? t.skewY : 0, l = t.scale && t.scale.length ? t.scale[0] * s : isFinite(t.scale) ? t.scale * s : isFinite(t.scaleX) ? t.scaleX * s : s, a = t.scale && t.scale.length ? t.scale[1] * n : isFinite(t.scale) ? t.scale * n : isFinite(t.scaleY) ? t.scaleY * n : n, o = t.shear || 0, h = t.rotate || t.theta || 0, C = new L(
      t.origin || t.around || t.ox || t.originX,
      t.oy || t.originY
    ), y = C.x, x = C.y, S = new L(
      t.position || t.px || t.positionX || NaN,
      t.py || t.positionY || NaN
    ), Z = S.x, M = S.y, A = new L(
      t.translate || t.tx || t.translateX,
      t.ty || t.translateY
    ), O = A.x, D = A.y, I = new L(
      t.relative || t.rx || t.relativeX,
      t.ry || t.relativeY
    ), R = I.x, Y = I.y;
    return {
      scaleX: l,
      scaleY: a,
      skewX: r,
      skewY: c,
      shear: o,
      theta: h,
      rx: R,
      ry: Y,
      tx: O,
      ty: D,
      ox: y,
      oy: x,
      px: Z,
      py: M
    };
  }
  static fromArray(t) {
    return { a: t[0], b: t[1], c: t[2], d: t[3], e: t[4], f: t[5] };
  }
  static isMatrixLike(t) {
    return t.a != null || t.b != null || t.c != null || t.d != null || t.e != null || t.f != null;
  }
  // left matrix, right matrix, target matrix which is overwritten
  static matrixMultiply(t, i, s) {
    const n = t.a * i.a + t.c * i.b, r = t.b * i.a + t.d * i.b, c = t.a * i.c + t.c * i.d, l = t.b * i.c + t.d * i.d, a = t.e + t.a * i.e + t.c * i.f, o = t.f + t.b * i.e + t.d * i.f;
    return s.a = n, s.b = r, s.c = c, s.d = l, s.e = a, s.f = o, s;
  }
  around(t, i, s) {
    return this.clone().aroundO(t, i, s);
  }
  // Transform around a center point
  aroundO(t, i, s) {
    const n = t || 0, r = i || 0;
    return this.translateO(-n, -r).lmultiplyO(s).translateO(n, r);
  }
  // Clones this matrix
  clone() {
    return new f(this);
  }
  // Decomposes this matrix into its affine parameters
  decompose(t = 0, i = 0) {
    const s = this.a, n = this.b, r = this.c, c = this.d, l = this.e, a = this.f, o = s * c - n * r, h = o > 0 ? 1 : -1, C = h * Math.sqrt(s * s + n * n), y = Math.atan2(h * n, h * s), x = 180 / Math.PI * y, S = Math.cos(y), Z = Math.sin(y), M = (s * r + n * c) / o, A = r * C / (M * s - n) || c * C / (M * n + s), O = l - t + t * S * C + i * (M * S * C - Z * A), D = a - i + t * Z * C + i * (M * Z * C + S * A);
    return {
      // Return the affine parameters
      scaleX: C,
      scaleY: A,
      shear: M,
      rotate: x,
      translateX: O,
      translateY: D,
      originX: t,
      originY: i,
      // Return the matrix parameters
      a: this.a,
      b: this.b,
      c: this.c,
      d: this.d,
      e: this.e,
      f: this.f
    };
  }
  // Check if two matrices are equal
  equals(t) {
    if (t === this) return !0;
    const i = new f(t);
    return K(this.a, i.a) && K(this.b, i.b) && K(this.c, i.c) && K(this.d, i.d) && K(this.e, i.e) && K(this.f, i.f);
  }
  // Flip matrix on x or y, at a given offset
  flip(t, i) {
    return this.clone().flipO(t, i);
  }
  flipO(t, i) {
    return t === "x" ? this.scaleO(-1, 1, i, 0) : t === "y" ? this.scaleO(1, -1, 0, i) : this.scaleO(-1, -1, t, i || t);
  }
  // Initialize
  init(t) {
    const i = f.fromArray([1, 0, 0, 1, 0, 0]);
    return t = t instanceof B ? t.matrixify() : typeof t == "string" ? f.fromArray(t.split(z).map(parseFloat)) : Array.isArray(t) ? f.fromArray(t) : typeof t == "object" && f.isMatrixLike(t) ? t : typeof t == "object" ? new f().transform(t) : arguments.length === 6 ? f.fromArray([].slice.call(arguments)) : i, this.a = t.a != null ? t.a : i.a, this.b = t.b != null ? t.b : i.b, this.c = t.c != null ? t.c : i.c, this.d = t.d != null ? t.d : i.d, this.e = t.e != null ? t.e : i.e, this.f = t.f != null ? t.f : i.f, this;
  }
  inverse() {
    return this.clone().inverseO();
  }
  // Inverses matrix
  inverseO() {
    const t = this.a, i = this.b, s = this.c, n = this.d, r = this.e, c = this.f, l = t * n - i * s;
    if (!l) throw new Error("Cannot invert " + this);
    const a = n / l, o = -i / l, h = -s / l, C = t / l, y = -(a * r + h * c), x = -(o * r + C * c);
    return this.a = a, this.b = o, this.c = h, this.d = C, this.e = y, this.f = x, this;
  }
  lmultiply(t) {
    return this.clone().lmultiplyO(t);
  }
  lmultiplyO(t) {
    const i = this, s = t instanceof f ? t : new f(t);
    return f.matrixMultiply(s, i, this);
  }
  // Left multiplies by the given matrix
  multiply(t) {
    return this.clone().multiplyO(t);
  }
  multiplyO(t) {
    const i = this, s = t instanceof f ? t : new f(t);
    return f.matrixMultiply(i, s, this);
  }
  // Rotate matrix
  rotate(t, i, s) {
    return this.clone().rotateO(t, i, s);
  }
  rotateO(t, i = 0, s = 0) {
    t = j0(t);
    const n = Math.cos(t), r = Math.sin(t), { a: c, b: l, c: a, d: o, e: h, f: C } = this;
    return this.a = c * n - l * r, this.b = l * n + c * r, this.c = a * n - o * r, this.d = o * n + a * r, this.e = h * n - C * r + s * r - i * n + i, this.f = C * n + h * r - i * r - s * n + s, this;
  }
  // Scale matrix
  scale() {
    return this.clone().scaleO(...arguments);
  }
  scaleO(t, i = t, s = 0, n = 0) {
    arguments.length === 3 && (n = s, s = i, i = t);
    const { a: r, b: c, c: l, d: a, e: o, f: h } = this;
    return this.a = r * t, this.b = c * i, this.c = l * t, this.d = a * i, this.e = o * t - s * t + s, this.f = h * i - n * i + n, this;
  }
  // Shear matrix
  shear(t, i, s) {
    return this.clone().shearO(t, i, s);
  }
  // eslint-disable-next-line no-unused-vars
  shearO(t, i = 0, s = 0) {
    const { a: n, b: r, c, d: l, e: a, f: o } = this;
    return this.a = n + r * t, this.c = c + l * t, this.e = a + o * t - s * t, this;
  }
  // Skew Matrix
  skew() {
    return this.clone().skewO(...arguments);
  }
  skewO(t, i = t, s = 0, n = 0) {
    arguments.length === 3 && (n = s, s = i, i = t), t = j0(t), i = j0(i);
    const r = Math.tan(t), c = Math.tan(i), { a: l, b: a, c: o, d: h, e: C, f: y } = this;
    return this.a = l + a * r, this.b = a + l * c, this.c = o + h * r, this.d = h + o * c, this.e = C + y * r - n * r, this.f = y + C * c - s * c, this;
  }
  // SkewX
  skewX(t, i, s) {
    return this.skew(t, 0, i, s);
  }
  // SkewY
  skewY(t, i, s) {
    return this.skew(0, t, i, s);
  }
  toArray() {
    return [this.a, this.b, this.c, this.d, this.e, this.f];
  }
  // Convert matrix to string
  toString() {
    return "matrix(" + this.a + "," + this.b + "," + this.c + "," + this.d + "," + this.e + "," + this.f + ")";
  }
  // Transform a matrix into another matrix by manipulating the space
  transform(t) {
    if (f.isMatrixLike(t))
      return new f(t).multiplyO(this);
    const i = f.formatTransforms(t), s = this, { x: n, y: r } = new L(i.ox, i.oy).transform(s), c = new f().translateO(i.rx, i.ry).lmultiplyO(s).translateO(-n, -r).scaleO(i.scaleX, i.scaleY).skewO(i.skewX, i.skewY).shearO(i.shear).rotateO(i.theta).translateO(n, r);
    if (isFinite(i.px) || isFinite(i.py)) {
      const l = new L(n, r).transform(c), a = isFinite(i.px) ? i.px - l.x : 0, o = isFinite(i.py) ? i.py - l.y : 0;
      c.translateO(a, o);
    }
    return c.translateO(i.tx, i.ty), c;
  }
  // Translate matrix
  translate(t, i) {
    return this.clone().translateO(t, i);
  }
  translateO(t, i) {
    return this.e += t || 0, this.f += i || 0, this;
  }
  valueOf() {
    return {
      a: this.a,
      b: this.b,
      c: this.c,
      d: this.d,
      e: this.e,
      f: this.f
    };
  }
}
function F1() {
  return new f(this.node.getCTM());
}
function V1() {
  try {
    if (typeof this.isRoot == "function" && !this.isRoot()) {
      const e = this.rect(1, 1), t = e.node.getScreenCTM();
      return e.remove(), new f(t);
    }
    return new f(this.node.getScreenCTM());
  } catch {
    return console.warn(
      `Cannot get CTM from SVG node ${this.node.nodeName}. Is the element rendered?`
    ), new f();
  }
}
g(f, "Matrix");
function P() {
  if (!P.nodes) {
    const e = H().size(2, 0);
    e.node.style.cssText = [
      "opacity: 0",
      "position: absolute",
      "left: -100%",
      "top: -100%",
      "overflow: hidden"
    ].join(";"), e.attr("focusable", "false"), e.attr("aria-hidden", "true");
    const t = e.path().node;
    P.nodes = { svg: e, path: t };
  }
  if (!P.nodes.svg.node.parentNode) {
    const e = m.document.body || m.document.documentElement;
    P.nodes.svg.addTo(e);
  }
  return P.nodes;
}
function S9(e) {
  return !e.width && !e.height && !e.x && !e.y;
}
function E1(e) {
  return e === m.document || (m.document.documentElement.contains || function(t) {
    for (; t.parentNode; )
      t = t.parentNode;
    return t === m.document;
  }).call(m.document.documentElement, e);
}
class j {
  constructor(...t) {
    this.init(...t);
  }
  addOffset() {
    return this.x += m.window.pageXOffset, this.y += m.window.pageYOffset, new j(this);
  }
  init(t) {
    const i = [0, 0, 0, 0];
    return t = typeof t == "string" ? t.split(z).map(parseFloat) : Array.isArray(t) ? t : typeof t == "object" ? [
      t.left != null ? t.left : t.x,
      t.top != null ? t.top : t.y,
      t.width,
      t.height
    ] : arguments.length === 4 ? [].slice.call(arguments) : i, this.x = t[0] || 0, this.y = t[1] || 0, this.width = this.w = t[2] || 0, this.height = this.h = t[3] || 0, this.x2 = this.x + this.w, this.y2 = this.y + this.h, this.cx = this.x + this.w / 2, this.cy = this.y + this.h / 2, this;
  }
  isNulled() {
    return S9(this);
  }
  // Merge rect box with another, return a new instance
  merge(t) {
    const i = Math.min(this.x, t.x), s = Math.min(this.y, t.y), n = Math.max(this.x + this.width, t.x + t.width) - i, r = Math.max(this.y + this.height, t.y + t.height) - s;
    return new j(i, s, n, r);
  }
  toArray() {
    return [this.x, this.y, this.width, this.height];
  }
  toString() {
    return this.x + " " + this.y + " " + this.width + " " + this.height;
  }
  transform(t) {
    t instanceof f || (t = new f(t));
    let i = 1 / 0, s = -1 / 0, n = 1 / 0, r = -1 / 0;
    return [
      new L(this.x, this.y),
      new L(this.x2, this.y),
      new L(this.x, this.y2),
      new L(this.x2, this.y2)
    ].forEach(function(l) {
      l = l.transform(t), i = Math.min(i, l.x), s = Math.max(s, l.x), n = Math.min(n, l.y), r = Math.max(r, l.y);
    }), new j(i, n, s - i, r - n);
  }
}
function Z9(e, t, i) {
  let s;
  try {
    if (s = t(e.node), S9(s) && !E1(e.node))
      throw new Error("Element not in the dom");
  } catch {
    s = i(e);
  }
  return s;
}
function O1() {
  const i = Z9(this, (n) => n.getBBox(), (n) => {
    try {
      const r = n.clone().addTo(P().svg).show(), c = r.node.getBBox();
      return r.remove(), c;
    } catch (r) {
      throw new Error(
        `Getting bbox of element "${n.node.nodeName}" is not possible: ${r.toString()}`
      );
    }
  });
  return new j(i);
}
function D1(e) {
  const s = Z9(this, (r) => r.getBoundingClientRect(), (r) => {
    throw new Error(
      `Getting rbox of element "${r.node.nodeName}" is not possible`
    );
  }), n = new j(s);
  return e ? n.transform(e.screenCTM().inverseO()) : n.addOffset();
}
function N1(e, t) {
  const i = this.bbox();
  return e > i.x && t > i.y && e < i.x + i.width && t < i.y + i.height;
}
u({
  viewbox: {
    viewbox(e, t, i, s) {
      return e == null ? new j(this.attr("viewBox")) : this.attr("viewBox", new j(e, t, i, s));
    },
    zoom(e, t) {
      let { width: i, height: s } = this.attr(["width", "height"]);
      if ((!i && !s || typeof i == "string" || typeof s == "string") && (i = this.node.clientWidth, s = this.node.clientHeight), !i || !s)
        throw new Error(
          "Impossible to get absolute width and height. Please provide an absolute width and height attribute on the zooming element"
        );
      const n = this.viewbox(), r = i / n.width, c = s / n.height, l = Math.min(r, c);
      if (e == null)
        return l;
      let a = l / e;
      a === 1 / 0 && (a = Number.MAX_SAFE_INTEGER / 100), t = t || new L(i / 2 / r + n.x, s / 2 / c + n.y);
      const o = new j(n).transform(
        new f({ scale: a, origin: t })
      );
      return this.viewbox(o);
    }
  }
});
g(j, "Box");
class Q extends Array {
  constructor(t = [], ...i) {
    if (super(t, ...i), typeof t == "number") return this;
    this.length = 0, this.push(...t);
  }
}
p([Q], {
  each(e, ...t) {
    return typeof e == "function" ? this.map((i, s, n) => e.call(i, i, s, n)) : this.map((i) => i[e](...t));
  },
  toArray() {
    return Array.prototype.concat.apply([], this);
  }
});
const B1 = ["toArray", "constructor", "each"];
Q.extend = function(e) {
  e = e.reduce((t, i) => (B1.includes(i) || i[0] === "_" || (i in Array.prototype && (t["$" + i] = Array.prototype[i]), t[i] = function(...s) {
    return this.each(i, ...s);
  }), t), {}), p([Q], e);
};
function n0(e, t) {
  return new Q(
    U0((t || m.document).querySelectorAll(e), function(i) {
      return E(i);
    })
  );
}
function z1(e) {
  return n0(e, this.node);
}
function I1(e) {
  return E(this.node.querySelector(e));
}
let R1 = 0;
const L9 = {};
function A9(e) {
  let t = e.getEventHolder();
  return t === m.window && (t = L9), t.events || (t.events = {}), t.events;
}
function K0(e) {
  return e.getEventTarget();
}
function P1(e) {
  let t = e.getEventHolder();
  t === m.window && (t = L9), t.events && (t.events = {});
}
function N0(e, t, i, s, n) {
  const r = i.bind(s || e), c = H(e), l = A9(c), a = K0(c);
  t = Array.isArray(t) ? t : t.split(z), i._svgjsListenerId || (i._svgjsListenerId = ++R1), t.forEach(function(o) {
    const h = o.split(".")[0], C = o.split(".")[1] || "*";
    l[h] = l[h] || {}, l[h][C] = l[h][C] || {}, l[h][C][i._svgjsListenerId] = r, a.addEventListener(h, r, n || !1);
  });
}
function t0(e, t, i, s) {
  const n = H(e), r = A9(n), c = K0(n);
  typeof i == "function" && (i = i._svgjsListenerId, !i) || (t = Array.isArray(t) ? t : (t || "").split(z), t.forEach(function(l) {
    const a = l && l.split(".")[0], o = l && l.split(".")[1];
    let h, C;
    if (i)
      r[a] && r[a][o || "*"] && (c.removeEventListener(
        a,
        r[a][o || "*"][i],
        s || !1
      ), delete r[a][o || "*"][i]);
    else if (a && o) {
      if (r[a] && r[a][o]) {
        for (C in r[a][o])
          t0(c, [a, o].join("."), C);
        delete r[a][o];
      }
    } else if (o)
      for (l in r)
        for (h in r[l])
          o === h && t0(c, [l, o].join("."));
    else if (a) {
      if (r[a]) {
        for (h in r[a])
          t0(c, [a, h].join("."));
        delete r[a];
      }
    } else {
      for (l in r)
        t0(c, l);
      P1(n);
    }
  }));
}
function q1(e, t, i, s) {
  const n = K0(e);
  return t instanceof m.window.Event || (t = new m.window.CustomEvent(t, {
    detail: i,
    cancelable: !0,
    ...s
  })), n.dispatchEvent(t), t;
}
class d0 extends Q0 {
  addEventListener() {
  }
  dispatch(t, i, s) {
    return q1(this, t, i, s);
  }
  dispatchEvent(t) {
    const i = this.getEventHolder().events;
    if (!i) return !0;
    const s = i[t.type];
    for (const n in s)
      for (const r in s[n])
        s[n][r](t);
    return !t.defaultPrevented;
  }
  // Fire given event
  fire(t, i, s) {
    return this.dispatch(t, i, s), this;
  }
  getEventHolder() {
    return this;
  }
  getEventTarget() {
    return this;
  }
  // Unbind event from listener
  off(t, i, s) {
    return t0(this, t, i, s), this;
  }
  // Bind given event to listener
  on(t, i, s, n) {
    return N0(this, t, i, s, n), this;
  }
  removeEventListener() {
  }
}
g(d0, "EventTarget");
function m9() {
}
const l0 = {
  duration: 400,
  ease: ">",
  delay: 0
}, $1 = {
  // fill and stroke
  "fill-opacity": 1,
  "stroke-opacity": 1,
  "stroke-width": 0,
  "stroke-linejoin": "miter",
  "stroke-linecap": "butt",
  fill: "#000000",
  stroke: "#000000",
  opacity: 1,
  // position
  x: 0,
  y: 0,
  cx: 0,
  cy: 0,
  // size
  width: 0,
  height: 0,
  // radius
  r: 0,
  rx: 0,
  ry: 0,
  // gradient
  offset: 0,
  "stop-opacity": 1,
  "stop-color": "#000000",
  // text
  "text-anchor": "start"
};
class i0 extends Array {
  constructor(...t) {
    super(...t), this.init(...t);
  }
  clone() {
    return new this.constructor(this);
  }
  init(t) {
    return typeof t == "number" ? this : (this.length = 0, this.push(...this.parse(t)), this);
  }
  // Parse whitespace separated string
  parse(t = []) {
    return t instanceof Array ? t : t.trim().split(z).map(parseFloat);
  }
  toArray() {
    return Array.prototype.concat.apply([], this);
  }
  toSet() {
    return new Set(this);
  }
  toString() {
    return this.join(" ");
  }
  // Flattens the array if needed
  valueOf() {
    const t = [];
    return t.push(...this), t;
  }
}
class d {
  // Initialize
  constructor(...t) {
    this.init(...t);
  }
  convert(t) {
    return new d(this.value, t);
  }
  // Divide number
  divide(t) {
    return t = new d(t), new d(this / t, this.unit || t.unit);
  }
  init(t, i) {
    return i = Array.isArray(t) ? t[1] : i, t = Array.isArray(t) ? t[0] : t, this.value = 0, this.unit = i || "", typeof t == "number" ? this.value = isNaN(t) ? 0 : isFinite(t) ? t : t < 0 ? -34e37 : 34e37 : typeof t == "string" ? (i = t.match(M9), i && (this.value = parseFloat(i[1]), i[5] === "%" ? this.value /= 100 : i[5] === "s" && (this.value *= 1e3), this.unit = i[5])) : t instanceof d && (this.value = t.valueOf(), this.unit = t.unit), this;
  }
  // Subtract number
  minus(t) {
    return t = new d(t), new d(this - t, this.unit || t.unit);
  }
  // Add number
  plus(t) {
    return t = new d(t), new d(this + t, this.unit || t.unit);
  }
  // Multiply number
  times(t) {
    return t = new d(t), new d(this * t, this.unit || t.unit);
  }
  toArray() {
    return [this.value, this.unit];
  }
  toJSON() {
    return this.toString();
  }
  toString() {
    return (this.unit === "%" ? ~~(this.value * 1e8) / 1e6 : this.unit === "s" ? this.value / 1e3 : this.value) + this.unit;
  }
  valueOf() {
    return this.value;
  }
}
const Y1 = /* @__PURE__ */ new Set([
  "fill",
  "stroke",
  "color",
  "bgcolor",
  "stop-color",
  "flood-color",
  "lighting-color"
]), j9 = [];
function X1(e) {
  j9.push(e);
}
function U1(e, t, i) {
  if (e == null) {
    e = {}, t = this.node.attributes;
    for (const s of t)
      e[s.nodeName] = p9.test(s.nodeValue) ? parseFloat(s.nodeValue) : s.nodeValue;
    return e;
  } else {
    if (e instanceof Array)
      return e.reduce((s, n) => (s[n] = this.attr(n), s), {});
    if (typeof e == "object" && e.constructor === Object)
      for (t in e) this.attr(t, e[t]);
    else if (t === null)
      this.node.removeAttribute(e);
    else {
      if (t == null)
        return t = this.node.getAttribute(e), t == null ? $1[e] : p9.test(t) ? parseFloat(t) : t;
      t = j9.reduce((s, n) => n(e, s, this), t), typeof t == "number" ? t = new d(t) : Y1.has(e) && _.isColor(t) ? t = new _(t) : t.constructor === Array && (t = new i0(t)), e === "leading" ? this.leading && this.leading(t) : typeof i == "string" ? this.node.setAttributeNS(i, e, t.toString()) : this.node.setAttribute(e, t.toString()), this.rebuild && (e === "font-size" || e === "x") && this.rebuild();
    }
  }
  return this;
}
class q extends d0 {
  constructor(t, i) {
    super(), this.node = t, this.type = t.nodeName, i && t !== i && this.attr(i);
  }
  // Add given element at a position
  add(t, i) {
    return t = H(t), t.removeNamespace && this.node instanceof m.window.SVGElement && t.removeNamespace(), i == null ? this.node.appendChild(t.node) : t.node !== this.node.childNodes[i] && this.node.insertBefore(t.node, this.node.childNodes[i]), this;
  }
  // Add element to given container and return self
  addTo(t, i) {
    return H(t).put(this, i);
  }
  // Returns all child elements
  children() {
    return new Q(
      U0(this.node.children, function(t) {
        return E(t);
      })
    );
  }
  // Remove all elements in this container
  clear() {
    for (; this.node.hasChildNodes(); )
      this.node.removeChild(this.node.lastChild);
    return this;
  }
  // Clone element
  clone(t = !0, i = !0) {
    this.writeDataToDom();
    let s = this.node.cloneNode(t);
    return i && (s = v9(s)), new this.constructor(s);
  }
  // Iterates over all children and invokes a given block
  each(t, i) {
    const s = this.children();
    let n, r;
    for (n = 0, r = s.length; n < r; n++)
      t.apply(s[n], [n, s]), i && s[n].each(t, i);
    return this;
  }
  element(t, i) {
    return this.put(new q(a0(t), i));
  }
  // Get first child
  first() {
    return E(this.node.firstChild);
  }
  // Get a element at the given index
  get(t) {
    return E(this.node.childNodes[t]);
  }
  getEventHolder() {
    return this.node;
  }
  getEventTarget() {
    return this.node;
  }
  // Checks if the given element is a child
  has(t) {
    return this.index(t) >= 0;
  }
  html(t, i) {
    return this.xml(t, i, X2);
  }
  // Get / set id
  id(t) {
    return typeof t > "u" && !this.node.id && (this.node.id = b9(this.type)), this.attr("id", t);
  }
  // Gets index of given element
  index(t) {
    return [].slice.call(this.node.childNodes).indexOf(t.node);
  }
  // Get the last child
  last() {
    return E(this.node.lastChild);
  }
  // matches the element vs a css selector
  matches(t) {
    const i = this.node, s = i.matches || i.matchesSelector || i.msMatchesSelector || i.mozMatchesSelector || i.webkitMatchesSelector || i.oMatchesSelector || null;
    return s && s.call(i, t);
  }
  // Returns the parent element instance
  parent(t) {
    let i = this;
    if (!i.node.parentNode) return null;
    if (i = E(i.node.parentNode), !t) return i;
    do
      if (typeof t == "string" ? i.matches(t) : i instanceof t)
        return i;
    while (i = E(i.node.parentNode));
    return i;
  }
  // Basically does the same as `add()` but returns the added element instead
  put(t, i) {
    return t = H(t), this.add(t, i), t;
  }
  // Add element to given container and return container
  putIn(t, i) {
    return H(t).add(this, i);
  }
  // Remove element
  remove() {
    return this.parent() && this.parent().removeElement(this), this;
  }
  // Remove a given child
  removeElement(t) {
    return this.node.removeChild(t.node), this;
  }
  // Replace this with element
  replace(t) {
    return t = H(t), this.node.parentNode && this.node.parentNode.replaceChild(t.node, this.node), t;
  }
  round(t = 2, i = null) {
    const s = 10 ** t, n = this.attr(i);
    for (const r in n)
      typeof n[r] == "number" && (n[r] = Math.round(n[r] * s) / s);
    return this.attr(n), this;
  }
  // Import / Export raw svg
  svg(t, i) {
    return this.xml(t, i, G0);
  }
  // Return id on string conversion
  toString() {
    return this.id();
  }
  words(t) {
    return this.node.textContent = t, this;
  }
  wrap(t) {
    const i = this.parent();
    if (!i)
      return this.addTo(t);
    const s = i.index(this);
    return i.put(t, s).put(this);
  }
  // write svgjs data to the dom
  writeDataToDom() {
    return this.each(function() {
      this.writeDataToDom();
    }), this;
  }
  // Import / Export raw svg
  xml(t, i, s) {
    if (typeof t == "boolean" && (s = i, i = t, t = null), t == null || typeof t == "function") {
      i = i ?? !0, this.writeDataToDom();
      let l = this;
      if (t != null) {
        if (l = E(l.node.cloneNode(!0)), i) {
          const a = t(l);
          if (l = a || l, a === !1) return "";
        }
        l.each(function() {
          const a = t(this), o = a || this;
          a === !1 ? this.remove() : a && this !== o && this.replace(o);
        }, !0);
      }
      return i ? l.node.outerHTML : l.node.innerHTML;
    }
    i = i ?? !1;
    const n = a0("wrapper", s), r = m.document.createDocumentFragment();
    n.innerHTML = t;
    for (let l = n.children.length; l--; )
      r.appendChild(n.firstElementChild);
    const c = this.parent();
    return i ? this.replace(r) && c : this.add(r);
  }
}
p(q, { attr: U1, find: z1, findOne: I1 });
g(q, "Dom");
class B extends q {
  constructor(t, i) {
    super(t, i), this.dom = {}, this.node.instance = this, (t.hasAttribute("data-svgjs") || t.hasAttribute("svgjs:data")) && this.setData(
      JSON.parse(t.getAttribute("data-svgjs")) ?? JSON.parse(t.getAttribute("svgjs:data")) ?? {}
    );
  }
  // Move element by its center
  center(t, i) {
    return this.cx(t).cy(i);
  }
  // Move by center over x-axis
  cx(t) {
    return t == null ? this.x() + this.width() / 2 : this.x(t - this.width() / 2);
  }
  // Move by center over y-axis
  cy(t) {
    return t == null ? this.y() + this.height() / 2 : this.y(t - this.height() / 2);
  }
  // Get defs
  defs() {
    const t = this.root();
    return t && t.defs();
  }
  // Relative move over x and y axes
  dmove(t, i) {
    return this.dx(t).dy(i);
  }
  // Relative move over x axis
  dx(t = 0) {
    return this.x(new d(t).plus(this.x()));
  }
  // Relative move over y axis
  dy(t = 0) {
    return this.y(new d(t).plus(this.y()));
  }
  getEventHolder() {
    return this;
  }
  // Set height of element
  height(t) {
    return this.attr("height", t);
  }
  // Move element to given x and y values
  move(t, i) {
    return this.x(t).y(i);
  }
  // return array of all ancestors of given type up to the root svg
  parents(t = this.root()) {
    const i = typeof t == "string";
    i || (t = H(t));
    const s = new Q();
    let n = this;
    for (; (n = n.parent()) && n.node !== m.document && n.nodeName !== "#document-fragment" && (s.push(n), !(!i && n.node === t.node || i && n.matches(t))); )
      if (n.node === this.root().node)
        return null;
    return s;
  }
  // Get referenced element form attribute value
  reference(t) {
    if (t = this.attr(t), !t) return null;
    const i = (t + "").match(C1);
    return i ? H(i[1]) : null;
  }
  // Get parent document
  root() {
    const t = this.parent(G2(W0));
    return t && t.root();
  }
  // set given data to the elements data property
  setData(t) {
    return this.dom = t, this;
  }
  // Set element size to given width and height
  size(t, i) {
    const s = s0(this, t, i);
    return this.width(new d(s.width)).height(new d(s.height));
  }
  // Set width of element
  width(t) {
    return this.attr("width", t);
  }
  // write svgjs data to the dom
  writeDataToDom() {
    return x9(this, this.dom), super.writeDataToDom();
  }
  // Move over x-axis
  x(t) {
    return this.attr("x", t);
  }
  // Move over y-axis
  y(t) {
    return this.attr("y", t);
  }
}
p(B, {
  bbox: O1,
  rbox: D1,
  inside: N1,
  point: k1,
  ctm: F1,
  screenCTM: V1
});
g(B, "Element");
const c0 = {
  stroke: [
    "color",
    "width",
    "opacity",
    "linecap",
    "linejoin",
    "miterlimit",
    "dasharray",
    "dashoffset"
  ],
  fill: ["color", "opacity", "rule"],
  prefix: function(e, t) {
    return t === "color" ? e : e + "-" + t;
  }
};
["fill", "stroke"].forEach(function(e) {
  const t = {};
  let i;
  t[e] = function(s) {
    if (typeof s > "u")
      return this.attr(e);
    if (typeof s == "string" || s instanceof _ || _.isRgb(s) || s instanceof B)
      this.attr(e, s);
    else
      for (i = c0[e].length - 1; i >= 0; i--)
        s[c0[e][i]] != null && this.attr(c0.prefix(e, c0[e][i]), s[c0[e][i]]);
    return this;
  }, u(["Element", "Runner"], t);
});
u(["Element", "Runner"], {
  // Let the user set the matrix directly
  matrix: function(e, t, i, s, n, r) {
    return e == null ? new f(this) : this.attr("transform", new f(e, t, i, s, n, r));
  },
  // Map rotation to transform
  rotate: function(e, t, i) {
    return this.transform({ rotate: e, ox: t, oy: i }, !0);
  },
  // Map skew to transform
  skew: function(e, t, i, s) {
    return arguments.length === 1 || arguments.length === 3 ? this.transform({ skew: e, ox: t, oy: i }, !0) : this.transform({ skew: [e, t], ox: i, oy: s }, !0);
  },
  shear: function(e, t, i) {
    return this.transform({ shear: e, ox: t, oy: i }, !0);
  },
  // Map scale to transform
  scale: function(e, t, i, s) {
    return arguments.length === 1 || arguments.length === 3 ? this.transform({ scale: e, ox: t, oy: i }, !0) : this.transform({ scale: [e, t], ox: i, oy: s }, !0);
  },
  // Map translate to transform
  translate: function(e, t) {
    return this.transform({ translate: [e, t] }, !0);
  },
  // Map relative translations to transform
  relative: function(e, t) {
    return this.transform({ relative: [e, t] }, !0);
  },
  // Map flip to transform
  flip: function(e = "both", t = "center") {
    return "xybothtrue".indexOf(e) === -1 && (t = e, e = "both"), this.transform({ flip: e, origin: t }, !0);
  },
  // Opacity
  opacity: function(e) {
    return this.attr("opacity", e);
  }
});
u("radius", {
  // Add x and y radius
  radius: function(e, t = e) {
    return (this._element || this).type === "radialGradient" ? this.attr("r", new d(e)) : this.rx(e).ry(t);
  }
});
u("Path", {
  // Get path length
  length: function() {
    return this.node.getTotalLength();
  },
  // Get point at length
  pointAt: function(e) {
    return new L(this.node.getPointAtLength(e));
  }
});
u(["Element", "Runner"], {
  // Set font
  font: function(e, t) {
    if (typeof e == "object") {
      for (t in e) this.font(t, e[t]);
      return this;
    }
    return e === "leading" ? this.leading(t) : e === "anchor" ? this.attr("text-anchor", t) : e === "size" || e === "family" || e === "weight" || e === "stretch" || e === "variant" || e === "style" ? this.attr("font-" + e, t) : this.attr(e, t);
  }
});
const G1 = [
  "click",
  "dblclick",
  "mousedown",
  "mouseup",
  "mouseover",
  "mouseout",
  "mousemove",
  "mouseenter",
  "mouseleave",
  "touchstart",
  "touchmove",
  "touchleave",
  "touchend",
  "touchcancel",
  "contextmenu",
  "wheel",
  "pointerdown",
  "pointermove",
  "pointerup",
  "pointerleave",
  "pointercancel"
].reduce(function(e, t) {
  const i = function(s) {
    return s === null ? this.off(t) : this.on(t, s), this;
  };
  return e[t] = i, e;
}, {});
u("Element", G1);
function Q1() {
  return this.attr("transform", null);
}
function W1() {
  return (this.attr("transform") || "").split(f1).slice(0, -1).map(function(t) {
    const i = t.trim().split("(");
    return [
      i[0],
      i[1].split(z).map(function(s) {
        return parseFloat(s);
      })
    ];
  }).reverse().reduce(function(t, i) {
    return i[0] === "matrix" ? t.lmultiply(f.fromArray(i[1])) : t[i[0]].apply(t, i[1]);
  }, new f());
}
function J1(e, t) {
  if (this === e) return this;
  if (D0(this.node)) return this.addTo(e, t);
  const i = this.screenCTM(), s = e.screenCTM().inverse();
  return this.addTo(e, t).untransform().transform(s.multiply(i)), this;
}
function K1(e) {
  return this.toParent(this.root(), e);
}
function t3(e, t) {
  if (e == null || typeof e == "string") {
    const n = new f(this).decompose();
    return e == null ? n : n[e];
  }
  f.isMatrixLike(e) || (e = { ...e, origin: O0(e, this) });
  const i = t === !0 ? this : t || !1, s = new f(i).transform(e);
  return this.attr("transform", s);
}
u("Element", {
  untransform: Q1,
  matrixify: W1,
  toParent: J1,
  toRoot: K1,
  transform: t3
});
class k extends B {
  flatten() {
    return this.each(function() {
      if (this instanceof k)
        return this.flatten().ungroup();
    }), this;
  }
  ungroup(t = this.parent(), i = t.index(this)) {
    return i = i === -1 ? t.children().length : i, this.each(function(s, n) {
      return n[n.length - s - 1].toParent(t, i);
    }), this.remove();
  }
}
g(k, "Container");
class t9 extends k {
  constructor(t, i = t) {
    super(v("defs", t), i);
  }
  flatten() {
    return this;
  }
  ungroup() {
    return this;
  }
}
g(t9, "Defs");
class V extends B {
}
g(V, "Shape");
function e9(e) {
  return this.attr("rx", e);
}
function i9(e) {
  return this.attr("ry", e);
}
function H9(e) {
  return e == null ? this.cx() - this.rx() : this.cx(e + this.rx());
}
function T9(e) {
  return e == null ? this.cy() - this.ry() : this.cy(e + this.ry());
}
function k9(e) {
  return this.attr("cx", e);
}
function F9(e) {
  return this.attr("cy", e);
}
function V9(e) {
  return e == null ? this.rx() * 2 : this.rx(new d(e).divide(2));
}
function E9(e) {
  return e == null ? this.ry() * 2 : this.ry(new d(e).divide(2));
}
const e3 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  cx: k9,
  cy: F9,
  height: E9,
  rx: e9,
  ry: i9,
  width: V9,
  x: H9,
  y: T9
}, Symbol.toStringTag, { value: "Module" }));
class S0 extends V {
  constructor(t, i = t) {
    super(v("ellipse", t), i);
  }
  size(t, i) {
    const s = s0(this, t, i);
    return this.rx(new d(s.width).divide(2)).ry(
      new d(s.height).divide(2)
    );
  }
}
p(S0, e3);
u("Container", {
  // Create an ellipse
  ellipse: b(function(e = 0, t = e) {
    return this.put(new S0()).size(e, t).move(0, 0);
  })
});
g(S0, "Ellipse");
class O9 extends q {
  constructor(t = m.document.createDocumentFragment()) {
    super(t);
  }
  // Import / Export raw xml
  xml(t, i, s) {
    if (typeof t == "boolean" && (s = i, i = t, t = null), t == null || typeof t == "function") {
      const n = new q(a0("wrapper", s));
      return n.add(this.node.cloneNode(!0)), n.xml(!1, s);
    }
    return super.xml(t, !1, s);
  }
}
g(O9, "Fragment");
function D9(e, t) {
  return (this._element || this).type === "radialGradient" ? this.attr({ fx: new d(e), fy: new d(t) }) : this.attr({ x1: new d(e), y1: new d(t) });
}
function N9(e, t) {
  return (this._element || this).type === "radialGradient" ? this.attr({ cx: new d(e), cy: new d(t) }) : this.attr({ x2: new d(e), y2: new d(t) });
}
const i3 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  from: D9,
  to: N9
}, Symbol.toStringTag, { value: "Module" }));
class u0 extends k {
  constructor(t, i) {
    super(
      v(t + "Gradient", typeof t == "string" ? null : t),
      i
    );
  }
  // custom attr to handle transform
  attr(t, i, s) {
    return t === "transform" && (t = "gradientTransform"), super.attr(t, i, s);
  }
  bbox() {
    return new j();
  }
  targets() {
    return n0("svg [fill*=" + this.id() + "]");
  }
  // Alias string conversion to fill
  toString() {
    return this.url();
  }
  // Update gradient
  update(t) {
    return this.clear(), typeof t == "function" && t.call(this, this), this;
  }
  // Return the fill id
  url() {
    return "url(#" + this.id() + ")";
  }
}
p(u0, i3);
u({
  Container: {
    // Create gradient element in defs
    gradient(...e) {
      return this.defs().gradient(...e);
    }
  },
  // define gradient
  Defs: {
    gradient: b(function(e, t) {
      return this.put(new u0(e)).update(t);
    })
  }
});
g(u0, "Gradient");
class o0 extends k {
  // Initialize node
  constructor(t, i = t) {
    super(v("pattern", t), i);
  }
  // custom attr to handle transform
  attr(t, i, s) {
    return t === "transform" && (t = "patternTransform"), super.attr(t, i, s);
  }
  bbox() {
    return new j();
  }
  targets() {
    return n0("svg [fill*=" + this.id() + "]");
  }
  // Alias string conversion to fill
  toString() {
    return this.url();
  }
  // Update pattern by rebuilding
  update(t) {
    return this.clear(), typeof t == "function" && t.call(this, this), this;
  }
  // Return the fill id
  url() {
    return "url(#" + this.id() + ")";
  }
}
u({
  Container: {
    // Create pattern element in defs
    pattern(...e) {
      return this.defs().pattern(...e);
    }
  },
  Defs: {
    pattern: b(function(e, t, i) {
      return this.put(new o0()).update(i).attr({
        x: 0,
        y: 0,
        width: e,
        height: t,
        patternUnits: "userSpaceOnUse"
      });
    })
  }
});
g(o0, "Pattern");
class Z0 extends V {
  constructor(t, i = t) {
    super(v("image", t), i);
  }
  // (re)load image
  load(t, i) {
    if (!t) return this;
    const s = new m.window.Image();
    return N0(
      s,
      "load",
      function(n) {
        const r = this.parent(o0);
        this.width() === 0 && this.height() === 0 && this.size(s.width, s.height), r instanceof o0 && r.width() === 0 && r.height() === 0 && r.size(this.width(), this.height()), typeof i == "function" && i.call(this, n);
      },
      this
    ), N0(s, "load error", function() {
      t0(s);
    }), this.attr("href", s.src = t, f0);
  }
}
X1(function(e, t, i) {
  return (e === "fill" || e === "stroke") && u1.test(t) && (t = i.root().defs().image(t)), t instanceof Z0 && (t = i.root().defs().pattern(0, 0, (s) => {
    s.add(t);
  })), t;
});
u({
  Container: {
    // create image element, load image and set its size
    image: b(function(e, t) {
      return this.put(new Z0()).size(0, 0).load(e, t);
    })
  }
});
g(Z0, "Image");
class $ extends i0 {
  // Get bounding box of points
  bbox() {
    let t = -1 / 0, i = -1 / 0, s = 1 / 0, n = 1 / 0;
    return this.forEach(function(r) {
      t = Math.max(r[0], t), i = Math.max(r[1], i), s = Math.min(r[0], s), n = Math.min(r[1], n);
    }), new j(s, n, t - s, i - n);
  }
  // Move point string
  move(t, i) {
    const s = this.bbox();
    if (t -= s.x, i -= s.y, !isNaN(t) && !isNaN(i))
      for (let n = this.length - 1; n >= 0; n--)
        this[n] = [this[n][0] + t, this[n][1] + i];
    return this;
  }
  // Parse point string and flat array
  parse(t = [0, 0]) {
    const i = [];
    t instanceof Array ? t = Array.prototype.concat.apply([], t) : t = t.trim().split(z).map(parseFloat), t.length % 2 !== 0 && t.pop();
    for (let s = 0, n = t.length; s < n; s = s + 2)
      i.push([t[s], t[s + 1]]);
    return i;
  }
  // Resize poly string
  size(t, i) {
    let s;
    const n = this.bbox();
    for (s = this.length - 1; s >= 0; s--)
      n.width && (this[s][0] = (this[s][0] - n.x) * t / n.width + n.x), n.height && (this[s][1] = (this[s][1] - n.y) * i / n.height + n.y);
    return this;
  }
  // Convert array to line object
  toLine() {
    return {
      x1: this[0][0],
      y1: this[0][1],
      x2: this[1][0],
      y2: this[1][1]
    };
  }
  // Convert array to string
  toString() {
    const t = [];
    for (let i = 0, s = this.length; i < s; i++)
      t.push(this[i].join(","));
    return t.join(" ");
  }
  transform(t) {
    return this.clone().transformO(t);
  }
  // transform points with matrix (similar to Point.transform)
  transformO(t) {
    f.isMatrixLike(t) || (t = new f(t));
    for (let i = this.length; i--; ) {
      const [s, n] = this[i];
      this[i][0] = t.a * s + t.c * n + t.e, this[i][1] = t.b * s + t.d * n + t.f;
    }
    return this;
  }
}
const s3 = $;
function n3(e) {
  return e == null ? this.bbox().x : this.move(e, this.bbox().y);
}
function r3(e) {
  return e == null ? this.bbox().y : this.move(this.bbox().x, e);
}
function c3(e) {
  const t = this.bbox();
  return e == null ? t.width : this.size(e, t.height);
}
function l3(e) {
  const t = this.bbox();
  return e == null ? t.height : this.size(t.width, e);
}
const s9 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  MorphArray: s3,
  height: l3,
  width: c3,
  x: n3,
  y: r3
}, Symbol.toStringTag, { value: "Module" }));
class h0 extends V {
  // Initialize node
  constructor(t, i = t) {
    super(v("line", t), i);
  }
  // Get array
  array() {
    return new $([
      [this.attr("x1"), this.attr("y1")],
      [this.attr("x2"), this.attr("y2")]
    ]);
  }
  // Move by left top corner
  move(t, i) {
    return this.attr(this.array().move(t, i).toLine());
  }
  // Overwrite native plot() method
  plot(t, i, s, n) {
    return t == null ? this.array() : (typeof i < "u" ? t = { x1: t, y1: i, x2: s, y2: n } : t = new $(t).toLine(), this.attr(t));
  }
  // Set element size to given width and height
  size(t, i) {
    const s = s0(this, t, i);
    return this.attr(this.array().size(s.width, s.height).toLine());
  }
}
p(h0, s9);
u({
  Container: {
    // Create a line element
    line: b(function(...e) {
      return h0.prototype.plot.apply(
        this.put(new h0()),
        e[0] != null ? e : [0, 0, 0, 0]
      );
    })
  }
});
g(h0, "Line");
class _0 extends k {
  // Initialize node
  constructor(t, i = t) {
    super(v("marker", t), i);
  }
  // Set height of element
  height(t) {
    return this.attr("markerHeight", t);
  }
  orient(t) {
    return this.attr("orient", t);
  }
  // Set marker refX and refY
  ref(t, i) {
    return this.attr("refX", t).attr("refY", i);
  }
  // Return the fill id
  toString() {
    return "url(#" + this.id() + ")";
  }
  // Update marker
  update(t) {
    return this.clear(), typeof t == "function" && t.call(this, this), this;
  }
  // Set width of element
  width(t) {
    return this.attr("markerWidth", t);
  }
}
u({
  Container: {
    marker(...e) {
      return this.defs().marker(...e);
    }
  },
  Defs: {
    // Create marker
    marker: b(function(e, t, i) {
      return this.put(new _0()).size(e, t).ref(e / 2, t / 2).viewbox(0, 0, e, t).attr("orient", "auto").update(i);
    })
  },
  marker: {
    // Create and attach markers
    marker(e, t, i, s) {
      let n = ["marker"];
      return e !== "all" && n.push(e), n = n.join("-"), e = arguments[1] instanceof _0 ? arguments[1] : this.defs().marker(t, i, s), this.attr(n, e);
    }
  }
});
g(_0, "Marker");
function e0(e, t) {
  return function(i) {
    return i == null ? this[e] : (this[e] = i, t && t.call(this), this);
  };
}
const a3 = {
  "-": function(e) {
    return e;
  },
  "<>": function(e) {
    return -Math.cos(e * Math.PI) / 2 + 0.5;
  },
  ">": function(e) {
    return Math.sin(e * Math.PI / 2);
  },
  "<": function(e) {
    return -Math.cos(e * Math.PI / 2) + 1;
  },
  bezier: function(e, t, i, s) {
    return function(n) {
      return n < 0 ? e > 0 ? t / e * n : i > 0 ? s / i * n : 0 : n > 1 ? i < 1 ? (1 - s) / (1 - i) * n + (s - i) / (1 - i) : e < 1 ? (1 - t) / (1 - e) * n + (t - e) / (1 - e) : 1 : 3 * n * (1 - n) ** 2 * t + 3 * n ** 2 * (1 - n) * s + n ** 3;
    };
  },
  // see https://www.w3.org/TR/css-easing-1/#step-timing-function-algo
  steps: function(e, t = "end") {
    t = t.split("-").reverse()[0];
    let i = e;
    return t === "none" ? --i : t === "both" && ++i, (s, n = !1) => {
      let r = Math.floor(s * e);
      const c = s * r % 1 === 0;
      return (t === "start" || t === "both") && ++r, n && c && --r, s >= 0 && r < 0 && (r = 0), s <= 1 && r > i && (r = i), r / i;
    };
  }
};
class n9 {
  done() {
    return !1;
  }
}
class B0 extends n9 {
  constructor(t = l0.ease) {
    super(), this.ease = a3[t] || t;
  }
  step(t, i, s) {
    return typeof t != "number" ? s < 1 ? t : i : t + (i - t) * this.ease(s);
  }
}
class x0 extends n9 {
  constructor(t) {
    super(), this.stepper = t;
  }
  done(t) {
    return t.done;
  }
  step(t, i, s, n) {
    return this.stepper(t, i, s, n);
  }
}
function g9() {
  const e = (this._duration || 500) / 1e3, t = this._overshoot || 0, i = 1e-10, s = Math.PI, n = Math.log(t / 100 + i), r = -n / Math.sqrt(s * s + n * n), c = 3.9 / (r * e);
  this.d = 2 * r * c, this.k = c * c;
}
class o3 extends x0 {
  constructor(t = 500, i = 0) {
    super(), this.duration(t).overshoot(i);
  }
  step(t, i, s, n) {
    if (typeof t == "string") return t;
    if (n.done = s === 1 / 0, s === 1 / 0) return i;
    if (s === 0) return t;
    s > 100 && (s = 16), s /= 1e3;
    const r = n.velocity || 0, c = -this.d * r - this.k * (t - i), l = t + r * s + c * s * s / 2;
    return n.velocity = r + c * s, n.done = Math.abs(i - l) + Math.abs(r) < 2e-3, n.done ? i : l;
  }
}
p(o3, {
  duration: e0("_duration", g9),
  overshoot: e0("_overshoot", g9)
});
class h3 extends x0 {
  constructor(t = 0.1, i = 0.01, s = 0, n = 1e3) {
    super(), this.p(t).i(i).d(s).windup(n);
  }
  step(t, i, s, n) {
    if (typeof t == "string") return t;
    if (n.done = s === 1 / 0, s === 1 / 0) return i;
    if (s === 0) return t;
    const r = i - t;
    let c = (n.integral || 0) + r * s;
    const l = (r - (n.error || 0)) / s, a = this._windup;
    return a !== !1 && (c = Math.max(-a, Math.min(c, a))), n.error = r, n.integral = c, n.done = Math.abs(r) < 1e-3, n.done ? i : t + (this.P * r + this.I * c + this.D * l);
  }
}
p(h3, {
  windup: e0("_windup"),
  p: e0("P"),
  i: e0("I"),
  d: e0("D")
});
const C3 = {
  M: 2,
  L: 2,
  H: 1,
  V: 1,
  C: 6,
  S: 4,
  Q: 4,
  T: 2,
  A: 7,
  Z: 0
}, z0 = {
  M: function(e, t, i) {
    return t.x = i.x = e[0], t.y = i.y = e[1], ["M", t.x, t.y];
  },
  L: function(e, t) {
    return t.x = e[0], t.y = e[1], ["L", e[0], e[1]];
  },
  H: function(e, t) {
    return t.x = e[0], ["H", e[0]];
  },
  V: function(e, t) {
    return t.y = e[0], ["V", e[0]];
  },
  C: function(e, t) {
    return t.x = e[4], t.y = e[5], ["C", e[0], e[1], e[2], e[3], e[4], e[5]];
  },
  S: function(e, t) {
    return t.x = e[2], t.y = e[3], ["S", e[0], e[1], e[2], e[3]];
  },
  Q: function(e, t) {
    return t.x = e[2], t.y = e[3], ["Q", e[0], e[1], e[2], e[3]];
  },
  T: function(e, t) {
    return t.x = e[0], t.y = e[1], ["T", e[0], e[1]];
  },
  Z: function(e, t, i) {
    return t.x = i.x, t.y = i.y, ["Z"];
  },
  A: function(e, t) {
    return t.x = e[5], t.y = e[6], ["A", e[0], e[1], e[2], e[3], e[4], e[5], e[6]];
  }
}, F0 = "mlhvqtcsaz".split("");
for (let e = 0, t = F0.length; e < t; ++e)
  z0[F0[e]] = /* @__PURE__ */ function(i) {
    return function(s, n, r) {
      if (i === "H") s[0] = s[0] + n.x;
      else if (i === "V") s[0] = s[0] + n.y;
      else if (i === "A")
        s[5] = s[5] + n.x, s[6] = s[6] + n.y;
      else
        for (let c = 0, l = s.length; c < l; ++c)
          s[c] = s[c] + (c % 2 ? n.y : n.x);
      return z0[i](s, n, r);
    };
  }(F0[e].toUpperCase());
function f3(e) {
  const t = e.segment[0];
  return z0[t](e.segment.slice(1), e.p, e.p0);
}
function I0(e) {
  return e.segment.length && e.segment.length - 1 === C3[e.segment[0].toUpperCase()];
}
function d3(e, t) {
  e.inNumber && X(e, !1);
  const i = J0.test(t);
  if (i)
    e.segment = [t];
  else {
    const s = e.lastCommand, n = s.toLowerCase(), r = s === n;
    e.segment = [n === "m" ? r ? "l" : "L" : s];
  }
  return e.inSegment = !0, e.lastCommand = e.segment[0], i;
}
function X(e, t) {
  if (!e.inNumber) throw new Error("Parser Error");
  e.number && e.segment.push(parseFloat(e.number)), e.inNumber = t, e.number = "", e.pointSeen = !1, e.hasExponent = !1, I0(e) && R0(e);
}
function R0(e) {
  e.inSegment = !1, e.absolute && (e.segment = f3(e)), e.segments.push(e.segment);
}
function u3(e) {
  if (!e.segment.length) return !1;
  const t = e.segment[0].toUpperCase() === "A", i = e.segment.length;
  return t && (i === 4 || i === 5);
}
function p3(e) {
  return e.lastToken.toUpperCase() === "E";
}
const m3 = /* @__PURE__ */ new Set([" ", ",", "	", `
`, "\r", "\f"]);
function g3(e, t = !0) {
  let i = 0, s = "";
  const n = {
    segment: [],
    inNumber: !1,
    number: "",
    lastToken: "",
    inSegment: !1,
    segments: [],
    pointSeen: !1,
    hasExponent: !1,
    absolute: t,
    p0: new L(),
    p: new L()
  };
  for (; n.lastToken = s, s = e.charAt(i++); )
    if (!(!n.inSegment && d3(n, s))) {
      if (s === ".") {
        if (n.pointSeen || n.hasExponent) {
          X(n, !1), --i;
          continue;
        }
        n.inNumber = !0, n.pointSeen = !0, n.number += s;
        continue;
      }
      if (!isNaN(parseInt(s))) {
        if (n.number === "0" || u3(n)) {
          n.inNumber = !0, n.number = s, X(n, !0);
          continue;
        }
        n.inNumber = !0, n.number += s;
        continue;
      }
      if (m3.has(s)) {
        n.inNumber && X(n, !1);
        continue;
      }
      if (s === "-" || s === "+") {
        if (n.inNumber && !p3(n)) {
          X(n, !1), --i;
          continue;
        }
        n.number += s, n.inNumber = !0;
        continue;
      }
      if (s.toUpperCase() === "E") {
        n.number += s, n.hasExponent = !0;
        continue;
      }
      if (J0.test(s)) {
        if (n.inNumber)
          X(n, !1);
        else if (I0(n))
          R0(n);
        else
          throw new Error("parser Error");
        --i;
      }
    }
  return n.inNumber && X(n, !1), n.inSegment && I0(n) && R0(n), n.segments;
}
function y3(e) {
  let t = "";
  for (let i = 0, s = e.length; i < s; i++)
    t += e[i][0], e[i][1] != null && (t += e[i][1], e[i][2] != null && (t += " ", t += e[i][2], e[i][3] != null && (t += " ", t += e[i][3], t += " ", t += e[i][4], e[i][5] != null && (t += " ", t += e[i][5], t += " ", t += e[i][6], e[i][7] != null && (t += " ", t += e[i][7])))));
  return t + " ";
}
class W extends i0 {
  // Get bounding box of path
  bbox() {
    return P().path.setAttribute("d", this.toString()), new j(P.nodes.path.getBBox());
  }
  // Move path string
  move(t, i) {
    const s = this.bbox();
    if (t -= s.x, i -= s.y, !isNaN(t) && !isNaN(i))
      for (let n, r = this.length - 1; r >= 0; r--)
        n = this[r][0], n === "M" || n === "L" || n === "T" ? (this[r][1] += t, this[r][2] += i) : n === "H" ? this[r][1] += t : n === "V" ? this[r][1] += i : n === "C" || n === "S" || n === "Q" ? (this[r][1] += t, this[r][2] += i, this[r][3] += t, this[r][4] += i, n === "C" && (this[r][5] += t, this[r][6] += i)) : n === "A" && (this[r][6] += t, this[r][7] += i);
    return this;
  }
  // Absolutize and parse path to array
  parse(t = "M0 0") {
    return Array.isArray(t) && (t = Array.prototype.concat.apply([], t).toString()), g3(t);
  }
  // Resize path string
  size(t, i) {
    const s = this.bbox();
    let n, r;
    for (s.width = s.width === 0 ? 1 : s.width, s.height = s.height === 0 ? 1 : s.height, n = this.length - 1; n >= 0; n--)
      r = this[n][0], r === "M" || r === "L" || r === "T" ? (this[n][1] = (this[n][1] - s.x) * t / s.width + s.x, this[n][2] = (this[n][2] - s.y) * i / s.height + s.y) : r === "H" ? this[n][1] = (this[n][1] - s.x) * t / s.width + s.x : r === "V" ? this[n][1] = (this[n][1] - s.y) * i / s.height + s.y : r === "C" || r === "S" || r === "Q" ? (this[n][1] = (this[n][1] - s.x) * t / s.width + s.x, this[n][2] = (this[n][2] - s.y) * i / s.height + s.y, this[n][3] = (this[n][3] - s.x) * t / s.width + s.x, this[n][4] = (this[n][4] - s.y) * i / s.height + s.y, r === "C" && (this[n][5] = (this[n][5] - s.x) * t / s.width + s.x, this[n][6] = (this[n][6] - s.y) * i / s.height + s.y)) : r === "A" && (this[n][1] = this[n][1] * t / s.width, this[n][2] = this[n][2] * i / s.height, this[n][6] = (this[n][6] - s.x) * t / s.width + s.x, this[n][7] = (this[n][7] - s.y) * i / s.height + s.y);
    return this;
  }
  // Convert array to string
  toString() {
    return y3(this);
  }
}
const B9 = (e) => {
  const t = typeof e;
  return t === "number" ? d : t === "string" ? _.isColor(e) ? _ : z.test(e) ? J0.test(e) ? W : i0 : M9.test(e) ? d : P0 : r9.indexOf(e.constructor) > -1 ? e.constructor : Array.isArray(e) ? i0 : t === "object" ? C0 : P0;
};
class U {
  constructor(t) {
    this._stepper = t || new B0("-"), this._from = null, this._to = null, this._type = null, this._context = null, this._morphObj = null;
  }
  at(t) {
    return this._morphObj.morph(
      this._from,
      this._to,
      t,
      this._stepper,
      this._context
    );
  }
  done() {
    return this._context.map(this._stepper.done).reduce(function(i, s) {
      return i && s;
    }, !0);
  }
  from(t) {
    return t == null ? this._from : (this._from = this._set(t), this);
  }
  stepper(t) {
    return t == null ? this._stepper : (this._stepper = t, this);
  }
  to(t) {
    return t == null ? this._to : (this._to = this._set(t), this);
  }
  type(t) {
    return t == null ? this._type : (this._type = t, this);
  }
  _set(t) {
    this._type || this.type(B9(t));
    let i = new this._type(t);
    return this._type === _ && (i = this._to ? i[this._to[4]]() : this._from ? i[this._from[4]]() : i), this._type === C0 && (i = this._to ? i.align(this._to) : this._from ? i.align(this._from) : i), i = i.toConsumable(), this._morphObj = this._morphObj || new this._type(), this._context = this._context || Array.apply(null, Array(i.length)).map(Object).map(function(s) {
      return s.done = !0, s;
    }), i;
  }
}
class P0 {
  constructor(...t) {
    this.init(...t);
  }
  init(t) {
    return t = Array.isArray(t) ? t[0] : t, this.value = t, this;
  }
  toArray() {
    return [this.value];
  }
  valueOf() {
    return this.value;
  }
}
class p0 {
  constructor(...t) {
    this.init(...t);
  }
  init(t) {
    return Array.isArray(t) && (t = {
      scaleX: t[0],
      scaleY: t[1],
      shear: t[2],
      rotate: t[3],
      translateX: t[4],
      translateY: t[5],
      originX: t[6],
      originY: t[7]
    }), Object.assign(this, p0.defaults, t), this;
  }
  toArray() {
    const t = this;
    return [
      t.scaleX,
      t.scaleY,
      t.shear,
      t.rotate,
      t.translateX,
      t.translateY,
      t.originX,
      t.originY
    ];
  }
}
p0.defaults = {
  scaleX: 1,
  scaleY: 1,
  shear: 0,
  rotate: 0,
  translateX: 0,
  translateY: 0,
  originX: 0,
  originY: 0
};
const w3 = (e, t) => e[0] < t[0] ? -1 : e[0] > t[0] ? 1 : 0;
class C0 {
  constructor(...t) {
    this.init(...t);
  }
  align(t) {
    const i = this.values;
    for (let s = 0, n = i.length; s < n; ++s) {
      if (i[s + 1] === t[s + 1]) {
        if (i[s + 1] === _ && t[s + 7] !== i[s + 7]) {
          const l = t[s + 7], a = new _(this.values.splice(s + 3, 5))[l]().toArray();
          this.values.splice(s + 3, 0, ...a);
        }
        s += i[s + 2] + 2;
        continue;
      }
      if (!t[s + 1])
        return this;
      const r = new t[s + 1]().toArray(), c = i[s + 2] + 3;
      i.splice(
        s,
        c,
        t[s],
        t[s + 1],
        t[s + 2],
        ...r
      ), s += i[s + 2] + 2;
    }
    return this;
  }
  init(t) {
    if (this.values = [], Array.isArray(t)) {
      this.values = t.slice();
      return;
    }
    t = t || {};
    const i = [];
    for (const s in t) {
      const n = B9(t[s]), r = new n(t[s]).toArray();
      i.push([s, n, r.length, ...r]);
    }
    return i.sort(w3), this.values = i.reduce((s, n) => s.concat(n), []), this;
  }
  toArray() {
    return this.values;
  }
  valueOf() {
    const t = {}, i = this.values;
    for (; i.length; ) {
      const s = i.shift(), n = i.shift(), r = i.shift(), c = i.splice(0, r);
      t[s] = new n(c);
    }
    return t;
  }
}
const r9 = [P0, p0, C0];
function _3(e = []) {
  r9.push(...[].concat(e));
}
function x3() {
  p(r9, {
    to(e) {
      return new U().type(this.constructor).from(this.toArray()).to(e);
    },
    fromArray(e) {
      return this.init(e), this;
    },
    toConsumable() {
      return this.toArray();
    },
    morph(e, t, i, s, n) {
      const r = function(c, l) {
        return s.step(c, t[l], i, n[l], n);
      };
      return this.fromArray(e.map(r));
    }
  });
}
class r0 extends V {
  // Initialize node
  constructor(t, i = t) {
    super(v("path", t), i);
  }
  // Get array
  array() {
    return this._array || (this._array = new W(this.attr("d")));
  }
  // Clear array cache
  clear() {
    return delete this._array, this;
  }
  // Set height of element
  height(t) {
    return t == null ? this.bbox().height : this.size(this.bbox().width, t);
  }
  // Move by left top corner
  move(t, i) {
    return this.attr("d", this.array().move(t, i));
  }
  // Plot new path
  plot(t) {
    return t == null ? this.array() : this.clear().attr(
      "d",
      typeof t == "string" ? t : this._array = new W(t)
    );
  }
  // Set element size to given width and height
  size(t, i) {
    const s = s0(this, t, i);
    return this.attr("d", this.array().size(s.width, s.height));
  }
  // Set width of element
  width(t) {
    return t == null ? this.bbox().width : this.size(t, this.bbox().height);
  }
  // Move by left top corner over x-axis
  x(t) {
    return t == null ? this.bbox().x : this.move(t, this.bbox().y);
  }
  // Move by left top corner over y-axis
  y(t) {
    return t == null ? this.bbox().y : this.move(this.bbox().x, t);
  }
}
r0.prototype.MorphArray = W;
u({
  Container: {
    // Create a wrapped path element
    path: b(function(e) {
      return this.put(new r0()).plot(e || new W());
    })
  }
});
g(r0, "Path");
function b3() {
  return this._array || (this._array = new $(this.attr("points")));
}
function v3() {
  return delete this._array, this;
}
function M3(e, t) {
  return this.attr("points", this.array().move(e, t));
}
function S3(e) {
  return e == null ? this.array() : this.clear().attr(
    "points",
    typeof e == "string" ? e : this._array = new $(e)
  );
}
function Z3(e, t) {
  const i = s0(this, e, t);
  return this.attr("points", this.array().size(i.width, i.height));
}
const z9 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  array: b3,
  clear: v3,
  move: M3,
  plot: S3,
  size: Z3
}, Symbol.toStringTag, { value: "Module" }));
class m0 extends V {
  // Initialize node
  constructor(t, i = t) {
    super(v("polygon", t), i);
  }
}
u({
  Container: {
    // Create a wrapped polygon element
    polygon: b(function(e) {
      return this.put(new m0()).plot(e || new $());
    })
  }
});
p(m0, s9);
p(m0, z9);
g(m0, "Polygon");
class g0 extends V {
  // Initialize node
  constructor(t, i = t) {
    super(v("polyline", t), i);
  }
}
u({
  Container: {
    // Create a wrapped polygon element
    polyline: b(function(e) {
      return this.put(new g0()).plot(e || new $());
    })
  }
});
p(g0, s9);
p(g0, z9);
g(g0, "Polyline");
class L0 extends V {
  // Initialize node
  constructor(t, i = t) {
    super(v("rect", t), i);
  }
}
p(L0, { rx: e9, ry: i9 });
u({
  Container: {
    // Create a rect element
    rect: b(function(e, t) {
      return this.put(new L0()).size(e, t);
    })
  }
});
g(L0, "Rect");
class V0 {
  constructor() {
    this._first = null, this._last = null;
  }
  // Shows us the first item in the list
  first() {
    return this._first && this._first.value;
  }
  // Shows us the last item in the list
  last() {
    return this._last && this._last.value;
  }
  push(t) {
    const i = typeof t.next < "u" ? t : { value: t, next: null, prev: null };
    return this._last ? (i.prev = this._last, this._last.next = i, this._last = i) : (this._last = i, this._first = i), i;
  }
  // Removes the item that was returned from the push
  remove(t) {
    t.prev && (t.prev.next = t.next), t.next && (t.next.prev = t.prev), t === this._last && (this._last = t.prev), t === this._first && (this._first = t.next), t.prev = null, t.next = null;
  }
  shift() {
    const t = this._first;
    return t ? (this._first = t.next, this._first && (this._first.prev = null), this._last = this._first ? this._last : null, t.value) : null;
  }
}
const w = {
  nextDraw: null,
  frames: new V0(),
  timeouts: new V0(),
  immediates: new V0(),
  timer: () => m.window.performance || m.window.Date,
  transforms: [],
  frame(e) {
    const t = w.frames.push({ run: e });
    return w.nextDraw === null && (w.nextDraw = m.window.requestAnimationFrame(w._draw)), t;
  },
  timeout(e, t) {
    t = t || 0;
    const i = w.timer().now() + t, s = w.timeouts.push({ run: e, time: i });
    return w.nextDraw === null && (w.nextDraw = m.window.requestAnimationFrame(w._draw)), s;
  },
  immediate(e) {
    const t = w.immediates.push(e);
    return w.nextDraw === null && (w.nextDraw = m.window.requestAnimationFrame(w._draw)), t;
  },
  cancelFrame(e) {
    e != null && w.frames.remove(e);
  },
  clearTimeout(e) {
    e != null && w.timeouts.remove(e);
  },
  cancelImmediate(e) {
    e != null && w.immediates.remove(e);
  },
  _draw(e) {
    let t = null;
    const i = w.timeouts.last();
    for (; (t = w.timeouts.shift()) && (e >= t.time ? t.run() : w.timeouts.push(t), t !== i); )
      ;
    let s = null;
    const n = w.frames.last();
    for (; s !== n && (s = w.frames.shift()); )
      s.run(e);
    let r = null;
    for (; r = w.immediates.shift(); )
      r();
    w.nextDraw = w.timeouts.first() || w.frames.first() ? m.window.requestAnimationFrame(w._draw) : null;
  }
}, L3 = function(e) {
  const t = e.start, i = e.runner.duration(), s = t + i;
  return {
    start: t,
    duration: i,
    end: s,
    runner: e.runner
  };
}, A3 = function() {
  const e = m.window;
  return (e.performance || e.Date).now();
};
class I9 extends d0 {
  // Construct a new timeline on the given element
  constructor(t = A3) {
    super(), this._timeSource = t, this.terminate();
  }
  active() {
    return !!this._nextFrame;
  }
  finish() {
    return this.time(this.getEndTimeOfTimeline() + 1), this.pause();
  }
  // Calculates the end of the timeline
  getEndTime() {
    const t = this.getLastRunnerInfo(), i = t ? t.runner.duration() : 0;
    return (t ? t.start : this._time) + i;
  }
  getEndTimeOfTimeline() {
    const t = this._runners.map((i) => i.start + i.runner.duration());
    return Math.max(0, ...t);
  }
  getLastRunnerInfo() {
    return this.getRunnerInfoById(this._lastRunnerId);
  }
  getRunnerInfoById(t) {
    return this._runners[this._runnerIds.indexOf(t)] || null;
  }
  pause() {
    return this._paused = !0, this._continue();
  }
  persist(t) {
    return t == null ? this._persist : (this._persist = t, this);
  }
  play() {
    return this._paused = !1, this.updateTime()._continue();
  }
  reverse(t) {
    const i = this.speed();
    if (t == null) return this.speed(-i);
    const s = Math.abs(i);
    return this.speed(t ? -s : s);
  }
  // schedules a runner on the timeline
  schedule(t, i, s) {
    if (t == null)
      return this._runners.map(L3);
    let n = 0;
    const r = this.getEndTime();
    if (i = i || 0, s == null || s === "last" || s === "after")
      n = r;
    else if (s === "absolute" || s === "start")
      n = i, i = 0;
    else if (s === "now")
      n = this._time;
    else if (s === "relative") {
      const a = this.getRunnerInfoById(t.id);
      a && (n = a.start + i, i = 0);
    } else if (s === "with-last") {
      const a = this.getLastRunnerInfo();
      n = a ? a.start : this._time;
    } else
      throw new Error('Invalid value for the "when" parameter');
    t.unschedule(), t.timeline(this);
    const c = t.persist(), l = {
      persist: c === null ? this._persist : c,
      start: n + i,
      runner: t
    };
    return this._lastRunnerId = t.id, this._runners.push(l), this._runners.sort((a, o) => a.start - o.start), this._runnerIds = this._runners.map((a) => a.runner.id), this.updateTime()._continue(), this;
  }
  seek(t) {
    return this.time(this._time + t);
  }
  source(t) {
    return t == null ? this._timeSource : (this._timeSource = t, this);
  }
  speed(t) {
    return t == null ? this._speed : (this._speed = t, this);
  }
  stop() {
    return this.time(0), this.pause();
  }
  time(t) {
    return t == null ? this._time : (this._time = t, this._continue(!0));
  }
  // Remove the runner from this timeline
  unschedule(t) {
    const i = this._runnerIds.indexOf(t.id);
    return i < 0 ? this : (this._runners.splice(i, 1), this._runnerIds.splice(i, 1), t.timeline(null), this);
  }
  // Makes sure, that after pausing the time doesn't jump
  updateTime() {
    return this.active() || (this._lastSourceTime = this._timeSource()), this;
  }
  // Checks if we are running and continues the animation
  _continue(t = !1) {
    return w.cancelFrame(this._nextFrame), this._nextFrame = null, t ? this._stepImmediate() : this._paused ? this : (this._nextFrame = w.frame(this._step), this);
  }
  _stepFn(t = !1) {
    const i = this._timeSource();
    let s = i - this._lastSourceTime;
    t && (s = 0);
    const n = this._speed * s + (this._time - this._lastStepTime);
    this._lastSourceTime = i, t || (this._time += n, this._time = this._time < 0 ? 0 : this._time), this._lastStepTime = this._time, this.fire("time", this._time);
    for (let c = this._runners.length; c--; ) {
      const l = this._runners[c], a = l.runner;
      this._time - l.start <= 0 && a.reset();
    }
    let r = !1;
    for (let c = 0, l = this._runners.length; c < l; c++) {
      const a = this._runners[c], o = a.runner;
      let h = n;
      const C = this._time - a.start;
      if (C <= 0) {
        r = !0;
        continue;
      } else C < h && (h = C);
      if (!o.active()) continue;
      o.step(h).done ? a.persist !== !0 && o.duration() - o.time() + this._time + a.persist < this._time && (o.unschedule(), --c, --l) : r = !0;
    }
    return r && !(this._speed < 0 && this._time === 0) || this._runnerIds.length && this._speed < 0 && this._time > 0 ? this._continue() : (this.pause(), this.fire("finished")), this;
  }
  terminate() {
    this._startTime = 0, this._speed = 1, this._persist = 0, this._nextFrame = null, this._paused = !0, this._runners = [], this._runnerIds = [], this._lastRunnerId = -1, this._time = 0, this._lastSourceTime = 0, this._lastStepTime = 0, this._step = this._stepFn.bind(this, !1), this._stepImmediate = this._stepFn.bind(this, !0);
  }
}
u({
  Element: {
    timeline: function(e) {
      return e == null ? (this._timeline = this._timeline || new I9(), this._timeline) : (this._timeline = e, this);
    }
  }
});
class F extends d0 {
  constructor(t) {
    super(), this.id = F.id++, t = t ?? l0.duration, t = typeof t == "function" ? new x0(t) : t, this._element = null, this._timeline = null, this.done = !1, this._queue = [], this._duration = typeof t == "number" && t, this._isDeclarative = t instanceof x0, this._stepper = this._isDeclarative ? t : new B0(), this._history = {}, this.enabled = !0, this._time = 0, this._lastTime = 0, this._reseted = !0, this.transforms = new f(), this.transformId = 1, this._haveReversed = !1, this._reverse = !1, this._loopsDone = 0, this._swing = !1, this._wait = 0, this._times = 1, this._frameId = null, this._persist = this._isDeclarative ? !0 : null;
  }
  static sanitise(t, i, s) {
    let n = 1, r = !1, c = 0;
    return t = t ?? l0.duration, i = i ?? l0.delay, s = s || "last", typeof t == "object" && !(t instanceof n9) && (i = t.delay ?? i, s = t.when ?? s, r = t.swing || r, n = t.times ?? n, c = t.wait ?? c, t = t.duration ?? l0.duration), {
      duration: t,
      delay: i,
      swing: r,
      times: n,
      wait: c,
      when: s
    };
  }
  active(t) {
    return t == null ? this.enabled : (this.enabled = t, this);
  }
  /*
  Private Methods
  ===============
  Methods that shouldn't be used externally
  */
  addTransform(t) {
    return this.transforms.lmultiplyO(t), this;
  }
  after(t) {
    return this.on("finished", t);
  }
  animate(t, i, s) {
    const n = F.sanitise(t, i, s), r = new F(n.duration);
    return this._timeline && r.timeline(this._timeline), this._element && r.element(this._element), r.loop(n).schedule(n.delay, n.when);
  }
  clearTransform() {
    return this.transforms = new f(), this;
  }
  // TODO: Keep track of all transformations so that deletion is faster
  clearTransformsFromQueue() {
    (!this.done || !this._timeline || !this._timeline._runnerIds.includes(this.id)) && (this._queue = this._queue.filter((t) => !t.isTransform));
  }
  delay(t) {
    return this.animate(0, t);
  }
  duration() {
    return this._times * (this._wait + this._duration) - this._wait;
  }
  during(t) {
    return this.queue(null, t);
  }
  ease(t) {
    return this._stepper = new B0(t), this;
  }
  /*
  Runner Definitions
  ==================
  These methods help us define the runtime behaviour of the Runner or they
  help us make new runners from the current runner
  */
  element(t) {
    return t == null ? this._element : (this._element = t, t._prepareRunner(), this);
  }
  finish() {
    return this.step(1 / 0);
  }
  loop(t, i, s) {
    return typeof t == "object" && (i = t.swing, s = t.wait, t = t.times), this._times = t || 1 / 0, this._swing = i || !1, this._wait = s || 0, this._times === !0 && (this._times = 1 / 0), this;
  }
  loops(t) {
    const i = this._duration + this._wait;
    if (t == null) {
      const c = Math.floor(this._time / i), a = (this._time - c * i) / this._duration;
      return Math.min(c + a, this._times);
    }
    const s = Math.floor(t), n = t % 1, r = i * s + this._duration * n;
    return this.time(r);
  }
  persist(t) {
    return t == null ? this._persist : (this._persist = t, this);
  }
  position(t) {
    const i = this._time, s = this._duration, n = this._wait, r = this._times, c = this._swing, l = this._reverse;
    let a;
    if (t == null) {
      const y = function(S) {
        const Z = c * Math.floor(S % (2 * (n + s)) / (n + s)), M = Z && !l || !Z && l, A = Math.pow(-1, M) * (S % (n + s)) / s + M;
        return Math.max(Math.min(A, 1), 0);
      }, x = r * (n + s) - n;
      return a = i <= 0 ? Math.round(y(1e-5)) : i < x ? y(i) : Math.round(y(x - 1e-5)), a;
    }
    const o = Math.floor(this.loops()), h = c && o % 2 === 0;
    return a = o + (h && !l || l && h ? t : 1 - t), this.loops(a);
  }
  progress(t) {
    return t == null ? Math.min(1, this._time / this.duration()) : this.time(t * this.duration());
  }
  /*
  Basic Functionality
  ===================
  These methods allow us to attach basic functions to the runner directly
  */
  queue(t, i, s, n) {
    return this._queue.push({
      initialiser: t || m9,
      runner: i || m9,
      retarget: s,
      isTransform: n,
      initialised: !1,
      finished: !1
    }), this.timeline() && this.timeline()._continue(), this;
  }
  reset() {
    return this._reseted ? this : (this.time(0), this._reseted = !0, this);
  }
  reverse(t) {
    return this._reverse = t ?? !this._reverse, this;
  }
  schedule(t, i, s) {
    if (t instanceof I9 || (s = i, i = t, t = this.timeline()), !t)
      throw Error("Runner cannot be scheduled without timeline");
    return t.schedule(this, i, s), this;
  }
  step(t) {
    if (!this.enabled) return this;
    t = t ?? 16, this._time += t;
    const i = this.position(), s = this._lastPosition !== i && this._time >= 0;
    this._lastPosition = i;
    const n = this.duration(), r = this._lastTime <= 0 && this._time > 0, c = this._lastTime < n && this._time >= n;
    this._lastTime = this._time, r && this.fire("start", this);
    const l = this._isDeclarative;
    this.done = !l && !c && this._time >= n, this._reseted = !1;
    let a = !1;
    return (s || l) && (this._initialise(s), this.transforms = new f(), a = this._run(l ? t : i), this.fire("step", this)), this.done = this.done || a && l, c && this.fire("finished", this), this;
  }
  /*
  Runner animation methods
  ========================
  Control how the animation plays
  */
  time(t) {
    if (t == null)
      return this._time;
    const i = t - this._time;
    return this.step(i), this;
  }
  timeline(t) {
    return typeof t > "u" ? this._timeline : (this._timeline = t, this);
  }
  unschedule() {
    const t = this.timeline();
    return t && t.unschedule(this), this;
  }
  // Run each initialise function in the runner if required
  _initialise(t) {
    if (!(!t && !this._isDeclarative))
      for (let i = 0, s = this._queue.length; i < s; ++i) {
        const n = this._queue[i], r = this._isDeclarative || !n.initialised && t;
        t = !n.finished, r && t && (n.initialiser.call(this), n.initialised = !0);
      }
  }
  // Save a morpher to the morpher list so that we can retarget it later
  _rememberMorpher(t, i) {
    if (this._history[t] = {
      morpher: i,
      caller: this._queue[this._queue.length - 1]
    }, this._isDeclarative) {
      const s = this.timeline();
      s && s.play();
    }
  }
  // Try to set the target for a morpher if the morpher exists, otherwise
  // Run each run function for the position or dt given
  _run(t) {
    let i = !0;
    for (let s = 0, n = this._queue.length; s < n; ++s) {
      const r = this._queue[s], c = r.runner.call(this, t);
      r.finished = r.finished || c === !0, i = i && r.finished;
    }
    return i;
  }
  // do nothing and return false
  _tryRetarget(t, i, s) {
    if (this._history[t]) {
      if (!this._history[t].caller.initialised) {
        const r = this._queue.indexOf(this._history[t].caller);
        return this._queue.splice(r, 1), !1;
      }
      this._history[t].caller.retarget ? this._history[t].caller.retarget.call(this, i, s) : this._history[t].morpher.to(i), this._history[t].caller.finished = !1;
      const n = this.timeline();
      return n && n.play(), !0;
    }
    return !1;
  }
}
F.id = 0;
class b0 {
  constructor(t = new f(), i = -1, s = !0) {
    this.transforms = t, this.id = i, this.done = s;
  }
  clearTransformsFromQueue() {
  }
}
p([F, b0], {
  mergeWith(e) {
    return new b0(
      e.transforms.lmultiply(this.transforms),
      e.id
    );
  }
});
const R9 = (e, t) => e.lmultiplyO(t), P9 = (e) => e.transforms;
function j3() {
  const t = this._transformationRunners.runners.map(P9).reduce(R9, new f());
  this.transform(t), this._transformationRunners.merge(), this._transformationRunners.length() === 1 && (this._frameId = null);
}
class H3 {
  constructor() {
    this.runners = [], this.ids = [];
  }
  add(t) {
    if (this.runners.includes(t)) return;
    const i = t.id + 1;
    return this.runners.push(t), this.ids.push(i), this;
  }
  clearBefore(t) {
    const i = this.ids.indexOf(t + 1) || 1;
    return this.ids.splice(0, i, 0), this.runners.splice(0, i, new b0()).forEach((s) => s.clearTransformsFromQueue()), this;
  }
  edit(t, i) {
    const s = this.ids.indexOf(t + 1);
    return this.ids.splice(s, 1, t + 1), this.runners.splice(s, 1, i), this;
  }
  getByID(t) {
    return this.runners[this.ids.indexOf(t + 1)];
  }
  length() {
    return this.ids.length;
  }
  merge() {
    let t = null;
    for (let i = 0; i < this.runners.length; ++i) {
      const s = this.runners[i];
      if (t && s.done && t.done && // don't merge runner when persisted on timeline
      (!s._timeline || !s._timeline._runnerIds.includes(s.id)) && (!t._timeline || !t._timeline._runnerIds.includes(t.id))) {
        this.remove(s.id);
        const r = s.mergeWith(t);
        this.edit(t.id, r), t = r, --i;
      } else
        t = s;
    }
    return this;
  }
  remove(t) {
    const i = this.ids.indexOf(t + 1);
    return this.ids.splice(i, 1), this.runners.splice(i, 1), this;
  }
}
u({
  Element: {
    animate(e, t, i) {
      const s = F.sanitise(e, t, i), n = this.timeline();
      return new F(s.duration).loop(s).element(this).timeline(n.play()).schedule(s.delay, s.when);
    },
    delay(e, t) {
      return this.animate(0, e, t);
    },
    // this function searches for all runners on the element and deletes the ones
    // which run before the current one. This is because absolute transformations
    // overwrite anything anyway so there is no need to waste time computing
    // other runners
    _clearTransformRunnersBefore(e) {
      this._transformationRunners.clearBefore(e.id);
    },
    _currentTransform(e) {
      return this._transformationRunners.runners.filter((t) => t.id <= e.id).map(P9).reduce(R9, new f());
    },
    _addRunner(e) {
      this._transformationRunners.add(e), w.cancelImmediate(this._frameId), this._frameId = w.immediate(j3.bind(this));
    },
    _prepareRunner() {
      this._frameId == null && (this._transformationRunners = new H3().add(
        new b0(new f(this))
      ));
    }
  }
});
const T3 = (e, t) => e.filter((i) => !t.includes(i));
p(F, {
  attr(e, t) {
    return this.styleAttr("attr", e, t);
  },
  // Add animatable styles
  css(e, t) {
    return this.styleAttr("css", e, t);
  },
  styleAttr(e, t, i) {
    if (typeof t == "string")
      return this.styleAttr(e, { [t]: i });
    let s = t;
    if (this._tryRetarget(e, s)) return this;
    let n = new U(this._stepper).to(s), r = Object.keys(s);
    return this.queue(
      function() {
        n = n.from(this.element()[e](r));
      },
      function(c) {
        return this.element()[e](n.at(c).valueOf()), n.done();
      },
      function(c) {
        const l = Object.keys(c), a = T3(l, r);
        if (a.length) {
          const h = this.element()[e](a), C = new C0(n.from()).valueOf();
          Object.assign(C, h), n.from(C);
        }
        const o = new C0(n.to()).valueOf();
        Object.assign(o, c), n.to(o), r = l, s = c;
      }
    ), this._rememberMorpher(e, n), this;
  },
  zoom(e, t) {
    if (this._tryRetarget("zoom", e, t)) return this;
    let i = new U(this._stepper).to(new d(e));
    return this.queue(
      function() {
        i = i.from(this.element().zoom());
      },
      function(s) {
        return this.element().zoom(i.at(s), t), i.done();
      },
      function(s, n) {
        t = n, i.to(s);
      }
    ), this._rememberMorpher("zoom", i), this;
  },
  /**
   ** absolute transformations
   **/
  //
  // M v -----|-----(D M v = F v)------|----->  T v
  //
  // 1. define the final state (T) and decompose it (once)
  //    t = [tx, ty, the, lam, sy, sx]
  // 2. on every frame: pull the current state of all previous transforms
  //    (M - m can change)
  //   and then write this as m = [tx0, ty0, the0, lam0, sy0, sx0]
  // 3. Find the interpolated matrix F(pos) = m + pos * (t - m)
  //   - Note F(0) = M
  //   - Note F(1) = T
  // 4. Now you get the delta matrix as a result: D = F * inv(M)
  transform(e, t, i) {
    if (t = e.relative || t, this._isDeclarative && !t && this._tryRetarget("transform", e))
      return this;
    const s = f.isMatrixLike(e);
    i = e.affine != null ? e.affine : i ?? !s;
    const n = new U(this._stepper).type(
      i ? p0 : f
    );
    let r, c, l, a, o;
    function h() {
      c = c || this.element(), r = r || O0(e, c), o = new f(t ? void 0 : c), c._addRunner(this), t || c._clearTransformRunnersBefore(this);
    }
    function C(x) {
      t || this.clearTransform();
      const { x: S, y: Z } = new L(r).transform(
        c._currentTransform(this)
      );
      let M = new f({ ...e, origin: [S, Z] }), A = this._isDeclarative && l ? l : o;
      if (i) {
        M = M.decompose(S, Z), A = A.decompose(S, Z);
        const D = M.rotate, I = A.rotate, R = [D - 360, D, D + 360], Y = R.map((Q9) => Math.abs(Q9 - I)), y0 = Math.min(...Y), w0 = Y.indexOf(y0);
        M.rotate = R[w0];
      }
      t && (s || (M.rotate = e.rotate || 0), this._isDeclarative && a && (A.rotate = a)), n.from(A), n.to(M);
      const O = n.at(x);
      return a = O.rotate, l = new f(O), this.addTransform(l), c._addRunner(this), n.done();
    }
    function y(x) {
      (x.origin || "center").toString() !== (e.origin || "center").toString() && (r = O0(x, c)), e = { ...x, origin: r };
    }
    return this.queue(h, C, y, !0), this._isDeclarative && this._rememberMorpher("transform", n), this;
  },
  // Animatable x-axis
  x(e) {
    return this._queueNumber("x", e);
  },
  // Animatable y-axis
  y(e) {
    return this._queueNumber("y", e);
  },
  ax(e) {
    return this._queueNumber("ax", e);
  },
  ay(e) {
    return this._queueNumber("ay", e);
  },
  dx(e = 0) {
    return this._queueNumberDelta("x", e);
  },
  dy(e = 0) {
    return this._queueNumberDelta("y", e);
  },
  dmove(e, t) {
    return this.dx(e).dy(t);
  },
  _queueNumberDelta(e, t) {
    if (t = new d(t), this._tryRetarget(e, t)) return this;
    const i = new U(this._stepper).to(t);
    let s = null;
    return this.queue(
      function() {
        s = this.element()[e](), i.from(s), i.to(s + t);
      },
      function(n) {
        return this.element()[e](i.at(n)), i.done();
      },
      function(n) {
        i.to(s + new d(n));
      }
    ), this._rememberMorpher(e, i), this;
  },
  _queueObject(e, t) {
    if (this._tryRetarget(e, t)) return this;
    const i = new U(this._stepper).to(t);
    return this.queue(
      function() {
        i.from(this.element()[e]());
      },
      function(s) {
        return this.element()[e](i.at(s)), i.done();
      }
    ), this._rememberMorpher(e, i), this;
  },
  _queueNumber(e, t) {
    return this._queueObject(e, new d(t));
  },
  // Animatable center x-axis
  cx(e) {
    return this._queueNumber("cx", e);
  },
  // Animatable center y-axis
  cy(e) {
    return this._queueNumber("cy", e);
  },
  // Add animatable move
  move(e, t) {
    return this.x(e).y(t);
  },
  amove(e, t) {
    return this.ax(e).ay(t);
  },
  // Add animatable center
  center(e, t) {
    return this.cx(e).cy(t);
  },
  // Add animatable size
  size(e, t) {
    let i;
    return (!e || !t) && (i = this._element.bbox()), e || (e = i.width / i.height * t), t || (t = i.height / i.width * e), this.width(e).height(t);
  },
  // Add animatable width
  width(e) {
    return this._queueNumber("width", e);
  },
  // Add animatable height
  height(e) {
    return this._queueNumber("height", e);
  },
  // Add animatable plot
  plot(e, t, i, s) {
    if (arguments.length === 4)
      return this.plot([e, t, i, s]);
    if (this._tryRetarget("plot", e)) return this;
    const n = new U(this._stepper).type(this._element.MorphArray).to(e);
    return this.queue(
      function() {
        n.from(this._element.array());
      },
      function(r) {
        return this._element.plot(n.at(r)), n.done();
      }
    ), this._rememberMorpher("plot", n), this;
  },
  // Add leading method
  leading(e) {
    return this._queueNumber("leading", e);
  },
  // Add animatable viewbox
  viewbox(e, t, i, s) {
    return this._queueObject("viewbox", new j(e, t, i, s));
  },
  update(e) {
    return typeof e != "object" ? this.update({
      offset: arguments[0],
      color: arguments[1],
      opacity: arguments[2]
    }) : (e.opacity != null && this.attr("stop-opacity", e.opacity), e.color != null && this.attr("stop-color", e.color), e.offset != null && this.attr("offset", e.offset), this);
  }
});
p(F, { rx: e9, ry: i9, from: D9, to: N9 });
g(F, "Runner");
class c9 extends k {
  constructor(t, i = t) {
    super(v("svg", t), i), this.namespace();
  }
  // Creates and returns defs element
  defs() {
    return this.isRoot() ? E(this.node.querySelector("defs")) || this.put(new t9()) : this.root().defs();
  }
  isRoot() {
    return !this.node.parentNode || !(this.node.parentNode instanceof m.window.SVGElement) && this.node.parentNode.nodeName !== "#document-fragment";
  }
  // Add namespaces
  namespace() {
    return this.isRoot() ? this.attr({ xmlns: G0, version: "1.1" }).attr(
      "xmlns:xlink",
      f0,
      H0
    ) : this.root().namespace();
  }
  removeNamespace() {
    return this.attr({ xmlns: null, version: null }).attr("xmlns:xlink", null, H0).attr("xmlns:svgjs", null, H0);
  }
  // Check if this is a root svg
  // If not, call root() from this element
  root() {
    return this.isRoot() ? this : super.root();
  }
}
u({
  Container: {
    // Create nested svg document
    nested: b(function() {
      return this.put(new c9());
    })
  }
});
g(c9, "Svg", !0);
let l9 = class extends k {
  // Initialize node
  constructor(t, i = t) {
    super(v("symbol", t), i);
  }
};
u({
  Container: {
    symbol: b(function() {
      return this.put(new l9());
    })
  }
});
g(l9, "Symbol");
function k3(e) {
  return this._build === !1 && this.clear(), this.node.appendChild(m.document.createTextNode(e)), this;
}
function F3() {
  return this.node.getComputedTextLength();
}
function V3(e, t = this.bbox()) {
  return e == null ? t.x : this.attr("x", this.attr("x") + e - t.x);
}
function E3(e, t = this.bbox()) {
  return e == null ? t.y : this.attr("y", this.attr("y") + e - t.y);
}
function O3(e, t, i = this.bbox()) {
  return this.x(e, i).y(t, i);
}
function D3(e, t = this.bbox()) {
  return e == null ? t.cx : this.attr("x", this.attr("x") + e - t.cx);
}
function N3(e, t = this.bbox()) {
  return e == null ? t.cy : this.attr("y", this.attr("y") + e - t.cy);
}
function B3(e, t, i = this.bbox()) {
  return this.cx(e, i).cy(t, i);
}
function z3(e) {
  return this.attr("x", e);
}
function I3(e) {
  return this.attr("y", e);
}
function R3(e, t) {
  return this.ax(e).ay(t);
}
function P3(e) {
  return this._build = !!e, this;
}
const q9 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  amove: R3,
  ax: z3,
  ay: I3,
  build: P3,
  center: B3,
  cx: D3,
  cy: N3,
  length: F3,
  move: O3,
  plain: k3,
  x: V3,
  y: E3
}, Symbol.toStringTag, { value: "Module" }));
class N extends V {
  // Initialize node
  constructor(t, i = t) {
    super(v("text", t), i), this.dom.leading = this.dom.leading ?? new d(1.3), this._rebuild = !0, this._build = !1;
  }
  // Set / get leading
  leading(t) {
    return t == null ? this.dom.leading : (this.dom.leading = new d(t), this.rebuild());
  }
  // Rebuild appearance type
  rebuild(t) {
    if (typeof t == "boolean" && (this._rebuild = t), this._rebuild) {
      const i = this;
      let s = 0;
      const n = this.dom.leading;
      this.each(function(r) {
        if (D0(this.node)) return;
        const c = m.window.getComputedStyle(this.node).getPropertyValue("font-size"), l = n * new d(c);
        this.dom.newLined && (this.attr("x", i.attr("x")), this.text() === `
` ? s += l : (this.attr("dy", r ? l + s : 0), s = 0));
      }), this.fire("rebuild");
    }
    return this;
  }
  // overwrite method from parent to set data properly
  setData(t) {
    return this.dom = t, this.dom.leading = new d(t.leading || 1.3), this;
  }
  writeDataToDom() {
    return x9(this, this.dom, { leading: 1.3 }), this;
  }
  // Set the text content
  text(t) {
    if (t === void 0) {
      const i = this.node.childNodes;
      let s = 0;
      t = "";
      for (let n = 0, r = i.length; n < r; ++n) {
        if (i[n].nodeName === "textPath" || D0(i[n])) {
          n === 0 && (s = n + 1);
          continue;
        }
        n !== s && i[n].nodeType !== 3 && E(i[n]).dom.newLined === !0 && (t += `
`), t += i[n].textContent;
      }
      return t;
    }
    if (this.clear().build(!0), typeof t == "function")
      t.call(this, this);
    else {
      t = (t + "").split(`
`);
      for (let i = 0, s = t.length; i < s; i++)
        this.newLine(t[i]);
    }
    return this.build(!1).rebuild();
  }
}
p(N, q9);
u({
  Container: {
    // Create text element
    text: b(function(e = "") {
      return this.put(new N()).text(e);
    }),
    // Create plain text element
    plain: b(function(e = "") {
      return this.put(new N()).plain(e);
    })
  }
});
g(N, "Text");
class A0 extends V {
  // Initialize node
  constructor(t, i = t) {
    super(v("tspan", t), i), this._build = !1;
  }
  // Shortcut dx
  dx(t) {
    return this.attr("dx", t);
  }
  // Shortcut dy
  dy(t) {
    return this.attr("dy", t);
  }
  // Create new line
  newLine() {
    this.dom.newLined = !0;
    const t = this.parent();
    if (!(t instanceof N))
      return this;
    const i = t.index(this), s = m.window.getComputedStyle(this.node).getPropertyValue("font-size"), n = t.dom.leading * new d(s);
    return this.dy(i ? n : 0).attr("x", t.x());
  }
  // Set text content
  text(t) {
    return t == null ? this.node.textContent + (this.dom.newLined ? `
` : "") : (typeof t == "function" ? (this.clear().build(!0), t.call(this, this), this.build(!1)) : this.plain(t), this);
  }
}
p(A0, q9);
u({
  Tspan: {
    tspan: b(function(e = "") {
      const t = new A0();
      return this._build || this.clear(), this.put(t).text(e);
    })
  },
  Text: {
    newLine: function(e = "") {
      return this.tspan(e).newLine();
    }
  }
});
g(A0, "Tspan");
class a9 extends V {
  constructor(t, i = t) {
    super(v("circle", t), i);
  }
  radius(t) {
    return this.attr("r", t);
  }
  // Radius x value
  rx(t) {
    return this.attr("r", t);
  }
  // Alias radius x value
  ry(t) {
    return this.rx(t);
  }
  size(t) {
    return this.radius(new d(t).divide(2));
  }
}
p(a9, { x: H9, y: T9, cx: k9, cy: F9, width: V9, height: E9 });
u({
  Container: {
    // Create circle element
    circle: b(function(e = 0) {
      return this.put(new a9()).size(e).move(0, 0);
    })
  }
});
g(a9, "Circle");
class q0 extends k {
  constructor(t, i = t) {
    super(v("clipPath", t), i);
  }
  // Unclip all clipped elements and remove itself
  remove() {
    return this.targets().forEach(function(t) {
      t.unclip();
    }), super.remove();
  }
  targets() {
    return n0("svg [clip-path*=" + this.id() + "]");
  }
}
u({
  Container: {
    // Create clipping element
    clip: b(function() {
      return this.defs().put(new q0());
    })
  },
  Element: {
    // Distribute clipPath to svg element
    clipper() {
      return this.reference("clip-path");
    },
    clipWith(e) {
      const t = e instanceof q0 ? e : this.parent().clip().add(e);
      return this.attr("clip-path", "url(#" + t.id() + ")");
    },
    // Unclip element
    unclip() {
      return this.attr("clip-path", null);
    }
  }
});
g(q0, "ClipPath");
class $9 extends B {
  constructor(t, i = t) {
    super(v("foreignObject", t), i);
  }
}
u({
  Container: {
    foreignObject: b(function(e, t) {
      return this.put(new $9()).size(e, t);
    })
  }
});
g($9, "ForeignObject");
function q3(e, t) {
  return this.children().forEach((i) => {
    let s;
    try {
      s = i.node instanceof U2().SVGSVGElement ? new j(i.attr(["x", "y", "width", "height"])) : i.bbox();
    } catch {
      return;
    }
    const n = new f(i), r = n.translate(e, t).transform(n.inverse()), c = new L(s.x, s.y).transform(r);
    i.move(c.x, c.y);
  }), this;
}
function $3(e) {
  return this.dmove(e, 0);
}
function Y3(e) {
  return this.dmove(0, e);
}
function X3(e, t = this.bbox()) {
  return e == null ? t.height : this.size(t.width, e, t);
}
function U3(e = 0, t = 0, i = this.bbox()) {
  const s = e - i.x, n = t - i.y;
  return this.dmove(s, n);
}
function G3(e, t, i = this.bbox()) {
  const s = s0(this, e, t, i), n = s.width / i.width, r = s.height / i.height;
  return this.children().forEach((c) => {
    const l = new L(i).transform(new f(c).inverse());
    c.scale(n, r, l.x, l.y);
  }), this;
}
function Q3(e, t = this.bbox()) {
  return e == null ? t.width : this.size(e, t.height, t);
}
function W3(e, t = this.bbox()) {
  return e == null ? t.x : this.move(e, t.y, t);
}
function J3(e, t = this.bbox()) {
  return e == null ? t.y : this.move(t.x, e, t);
}
const Y9 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  dmove: q3,
  dx: $3,
  dy: Y3,
  height: X3,
  move: U3,
  size: G3,
  width: Q3,
  x: W3,
  y: J3
}, Symbol.toStringTag, { value: "Module" }));
class o9 extends k {
  constructor(t, i = t) {
    super(v("g", t), i);
  }
}
p(o9, Y9);
u({
  Container: {
    // Create a group element
    group: b(function() {
      return this.put(new o9());
    })
  }
});
g(o9, "G");
class v0 extends k {
  constructor(t, i = t) {
    super(v("a", t), i);
  }
  // Link target attribute
  target(t) {
    return this.attr("target", t);
  }
  // Link url
  to(t) {
    return this.attr("href", t, f0);
  }
}
p(v0, Y9);
u({
  Container: {
    // Create a hyperlink element
    link: b(function(e) {
      return this.put(new v0()).to(e);
    })
  },
  Element: {
    unlink() {
      const e = this.linker();
      if (!e) return this;
      const t = e.parent();
      if (!t)
        return this.remove();
      const i = t.index(e);
      return t.add(this, i), e.remove(), this;
    },
    linkTo(e) {
      let t = this.linker();
      return t || (t = new v0(), this.wrap(t)), typeof e == "function" ? e.call(t, t) : t.to(e), this;
    },
    linker() {
      const e = this.parent();
      return e && e.node.nodeName.toLowerCase() === "a" ? e : null;
    }
  }
});
g(v0, "A");
class $0 extends k {
  // Initialize node
  constructor(t, i = t) {
    super(v("mask", t), i);
  }
  // Unmask all masked elements and remove itself
  remove() {
    return this.targets().forEach(function(t) {
      t.unmask();
    }), super.remove();
  }
  targets() {
    return n0("svg [mask*=" + this.id() + "]");
  }
}
u({
  Container: {
    mask: b(function() {
      return this.defs().put(new $0());
    })
  },
  Element: {
    // Distribute mask to svg element
    masker() {
      return this.reference("mask");
    },
    maskWith(e) {
      const t = e instanceof $0 ? e : this.parent().mask().add(e);
      return this.attr("mask", "url(#" + t.id() + ")");
    },
    // Unmask element
    unmask() {
      return this.attr("mask", null);
    }
  }
});
g($0, "Mask");
class X9 extends B {
  constructor(t, i = t) {
    super(v("stop", t), i);
  }
  // add color stops
  update(t) {
    return (typeof t == "number" || t instanceof d) && (t = {
      offset: arguments[0],
      color: arguments[1],
      opacity: arguments[2]
    }), t.opacity != null && this.attr("stop-opacity", t.opacity), t.color != null && this.attr("stop-color", t.color), t.offset != null && this.attr("offset", new d(t.offset)), this;
  }
}
u({
  Gradient: {
    // Add a color stop
    stop: function(e, t, i) {
      return this.put(new X9()).update(e, t, i);
    }
  }
});
g(X9, "Stop");
function K3(e, t) {
  if (!e) return "";
  if (!t) return e;
  let i = e + "{";
  for (const s in t)
    i += $2(s) + ":" + t[s] + ";";
  return i += "}", i;
}
class Y0 extends B {
  constructor(t, i = t) {
    super(v("style", t), i);
  }
  addText(t = "") {
    return this.node.textContent += t, this;
  }
  font(t, i, s = {}) {
    return this.rule("@font-face", {
      fontFamily: t,
      src: i,
      ...s
    });
  }
  rule(t, i) {
    return this.addText(K3(t, i));
  }
}
u("Dom", {
  style(e, t) {
    return this.put(new Y0()).rule(e, t);
  },
  fontface(e, t, i) {
    return this.put(new Y0()).font(e, t, i);
  }
});
g(Y0, "Style");
class h9 extends N {
  // Initialize node
  constructor(t, i = t) {
    super(v("textPath", t), i);
  }
  // return the array of the path track element
  array() {
    const t = this.track();
    return t ? t.array() : null;
  }
  // Plot path if any
  plot(t) {
    const i = this.track();
    let s = null;
    return i && (s = i.plot(t)), t == null ? s : this;
  }
  // Get the path element
  track() {
    return this.reference("href");
  }
}
u({
  Container: {
    textPath: b(function(e, t) {
      return e instanceof N || (e = this.text(e)), e.path(t);
    })
  },
  Text: {
    // Create path for text to run on
    path: b(function(e, t = !0) {
      const i = new h9();
      e instanceof r0 || (e = this.defs().path(e)), i.attr("href", "#" + e, f0);
      let s;
      if (t)
        for (; s = this.node.firstChild; )
          i.node.appendChild(s);
      return this.put(i);
    }),
    // Get the textPath children
    textPath() {
      return this.findOne("textPath");
    }
  },
  Path: {
    // creates a textPath from this path
    text: b(function(e) {
      return e instanceof N || (e = new N().addTo(this.parent()).text(e)), e.path(this);
    }),
    targets() {
      return n0("svg textPath").filter((e) => (e.attr("href") || "").includes(this.id()));
    }
  }
});
h9.prototype.MorphArray = W;
g(h9, "TextPath");
class U9 extends V {
  constructor(t, i = t) {
    super(v("use", t), i);
  }
  // Use element as a reference
  use(t, i) {
    return this.attr("href", (i || "") + "#" + t, f0);
  }
}
u({
  Container: {
    // Create a use element
    use: b(function(e, t) {
      return this.put(new U9()).use(e, t);
    })
  }
});
g(U9, "Use");
const tt = H;
p([c9, l9, Z0, o0, _0], T("viewbox"));
p([h0, g0, m0, r0], T("marker"));
p(N, T("Text"));
p(r0, T("Path"));
p(t9, T("Defs"));
p([N, A0], T("Tspan"));
p([L0, S0, u0, F], T("radius"));
p(d0, T("EventTarget"));
p(q, T("Dom"));
p(B, T("Element"));
p(V, T("Shape"));
p([k, O9], T("Container"));
p(u0, T("Gradient"));
p(F, T("Runner"));
Q.extend(P2());
_3([
  d,
  _,
  j,
  f,
  i0,
  $,
  W,
  L
]);
x3();
function et(e) {
  return tt().svg(e).first();
}
async function it(e, t) {
  const i = et(e), s = {};
  i.children().forEach((n) => {
    s[n.attr("id")] = n.remove();
  });
  for (let n in t.parts)
    for (let r in t.parts[n]) {
      const l = t.parts[n][r].map((a) => s[a]);
      t.parts[n][r] = { img: void 0, svg: l.reduce((a, o) => a + o.svg(), "") };
    }
  return t;
}
function st(e, t, i) {
  [e[t], e[i]] = [e[i], e[t]];
}
function nt(e) {
  for (let t = e.length - 1; t > 0; t--) {
    const i = Math.floor(Math.random() * (t + 1));
    st(e, t, i);
  }
}
function rt(e, t, i) {
  let s = [...Array(t - e)].map((n, r) => e + r);
  return nt(s), s.slice(0, i);
}
function ct(e, t) {
  return rt(0, e.length, t).map((s) => e[s]);
}
const lt = [{ id: "1f47d", name: "alien", parts: { base: { mid: ["0"] }, mouth: { mid: ["1"] }, eyes: { mid: ["2", "3"] } } }, { id: "1f921", name: "clown", parts: { base: { mid: ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10"] }, mouth: { mid: ["11", "12", "13", "14", "17"] }, eyes: { mid: ["14", "15", "16"] } } }, { id: "1f976", name: "cold_face", parts: { base: { mid: ["0"], top: ["15", "16", "19", "20"] }, eyes: { mid: ["1", "2", "17", "18"] }, mouth: { mid: ["3", "4"] } } }, { id: "1f920", name: "cowboy", parts: { base: { mid: ["0"], top: ["1", "5", "6"] }, eyes: { mid: ["2", "3"] }, mouth: { mid: ["4"] } } }, { id: "1f978", name: "disguised_face", parts: { base: { mid: ["0"] }, eyes: { mid: ["1", "2"] }, extra: { mid: ["3", "4", "5", "6", "7", "8", "9", "12", "13"] } } }, { id: "1f436", name: "dog_face", parts: { base: { mid: ["2", "7", "8", "15", "16"] }, eyes: { mid: ["4", "5"] }, mouth: { mid: ["0", "1", "3", "6", "9", "10", "11", "12", "13", "14"] } } }, { id: "1f92f", name: "exploding_head", parts: { base: { mid: ["0", "1", "2", "3", "7", "8", "9"] }, eyes: { mid: ["5", "6"] }, mouth: { mid: ["4"] } } }, { id: "1f979", name: "face_holding_back_tears", parts: { base: { mid: ["0"] }, eyes: { mid: ["1", "2", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13"] }, mouth: { mid: ["3"] } } }, { id: "1f636-200d-1f32b-fe0f", name: "face_in_clouds", parts: { base: { bot: ["0", "1"], mid: ["2"], top: ["5", "6", "7", "8", "9", "10", "11", "12"] }, eyes: { mid: ["3", "4"] } } }, { id: "1f92e", name: "face_vomiting", parts: { base: { mid: ["0"] }, eyes: { mid: ["1", "2"] }, mouth: { mid: ["3", "4", "5", "6", "7", "8"] } } }, { id: "1f9d0", name: "face_with_monocle", parts: { base: { mid: ["0"] }, eyes: { mid: ["1", "3"], top: ["2", "4", "5", "8", "9"] }, mouth: { mid: ["7"] } } }, { id: "1fae3", name: "face_with_peeking_eye", parts: { base: { mid: ["0"] }, mouth: { mid: ["1"] }, eyes: { mid: ["2", "3", "4", "5"] }, extra: { mid: ["6", "7", "8"] } } }, { id: "1f92c", name: "face_with_symbols_over_mouth", parts: { base: { mid: ["0"] }, eyes: { mid: ["1", "2"] }, mouth: { mid: ["3"], top: ["4", "5"] } } }, { id: "1f912", name: "face_with_thermometer", parts: { base: { mid: ["0"] }, eyes: { mid: ["1", "2", "3", "4"] }, mouth: { mid: ["5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15"] } } }, { id: "1f31d", name: "full_moon", parts: { base: { mid: ["0", "1"] }, mouth: { mid: ["2"] }, eyes: { mid: ["3", "4"] } } }, { id: "1f47b", name: "ghost", parts: { base: { mid: ["0"] }, eyes: { mid: ["1", "2", "3"] }, mouth: { mid: ["4"] } } }, { id: "1f975", name: "hot_face", parts: { base: { mid: ["0"], top: ["8", "9"] }, eyes: { mid: ["1", "2", "4", "5"] }, mouth: { mid: ["3", "6", "7"] } } }, { id: "1f383", name: "jack_o_lantern", parts: { base: { mid: ["0", "1"] }, eyes: { mid: ["2", "3"] }, mouth: { mid: ["4", "5"] } } }, { id: "1f602", name: "joy", parts: { base: { mid: ["0"], top: ["7", "8"] }, eyes: { mid: ["2", "3", "4", "5"] }, mouth: { mid: ["1", "6"] } } }, { id: "1fae0", name: "melting_face", parts: { base: { mid: ["0"] }, mouth: { mid: ["1"] }, eyes: { mid: ["2", "3"] } } }, { id: "1f648", name: "mizaru", parts: { base: { mid: ["0", "1", "7"], top: ["8", "9", "10", "11", "12", "13", "14", "16", "18", "19"] }, eyes: { mid: ["2", "3"] }, mouth: { mid: ["4", "5", "6"] } } }, { id: "1f911", name: "money_mouth", parts: { base: { mid: ["0"] }, mouth: { mid: ["1", "2", "5"] }, eyes: { mid: ["3", "4"] } } }, { id: "1f922", name: "nauseated_face", parts: { base: { mid: ["0"] }, eyes: { mid: ["1", "2"] }, mouth: { mid: ["3", "4", "5"] } } }, { id: "1f913", name: "nerd", parts: { base: { mid: ["0"] }, mouth: { mid: ["1", "2", "3", "4", "7"] }, eyes: { mid: ["5", "6", "8"] } } }, { id: "1f31a", name: "new_moon", parts: { base: { mid: ["0", "1"] }, eyes: { mid: ["3", "4"] }, mouth: { mid: ["2"] } } }, { id: "1f973", name: "partying_face", parts: { base: { mid: ["0"], top: ["6", "7"] }, eyes: { mid: ["2", "3"] }, mouth: { mid: ["1", "4", "5"], top: ["8", "9", "10", "11", "12"] }, extra: { mid: ["13", "14", "15", "16", "17"] } } }, { id: "1f97a", name: "pleading_face", parts: { base: { mid: ["0"] }, eyes: { mid: ["2", "3", "4", "5", "6", "7", "8", "9"] }, mouth: { mid: ["1"] } } }, { id: "1f4a9", name: "poop", parts: { base: { mid: ["0"] }, eyes: { mid: ["1", "2", "3", "4"] }, mouth: { mid: ["5", "6"] } } }, { id: "1f916", name: "robot", parts: { base: { mid: ["0", "1", "2", "3", "4", "5", "6", "7", "8"] }, eyes: { mid: ["9", "10", "11", "18"] }, mouth: { mid: ["12", "13", "14", "15", "16", "17"] } } }, { id: "1f631", name: "scream", parts: { base: { mid: ["0", "1"], top: ["5", "6"] }, eyes: { mid: ["2", "3"] }, mouth: { mid: ["4"] } } }, { id: "1f92b", name: "shushing_face", parts: { base: { mid: ["0"], top: ["2", "7", "8"] }, eyes: { mid: ["3", "4", "5", "6"] }, mouth: { mid: ["1"] } } }, { id: "1f480", name: "skull", parts: { base: { mid: ["0"] }, eyes: { mid: ["1", "2"] }, mouth: { mid: ["3"] } } }, { id: "1f634", name: "sleeping", parts: { base: { mid: ["0", "4", "6", "8"], top: ["5", "7", "9"] }, eyes: { mid: ["2", "3"] }, mouth: { mid: ["1"] } } }, { id: "1f970", name: "smiling_face_with_3_hearts", parts: { base: { mid: ["0", "4", "5", "6"], top: ["7", "8", "9"] }, eyes: { mid: ["2", "3"] }, mouth: { mid: ["1"] } } }, { id: "1f607", name: "smiling_face_with_halo", parts: { base: { mid: ["0", "4", "5", "7", "8", "9"] }, mouth: { mid: ["3"] }, eyes: { mid: ["1", "2"] } } }, { id: "1f972", name: "smiling_face_with_tear", parts: { base: { mid: ["0"] }, eyes: { mid: ["1", "2"], top: ["4"] }, mouth: { mid: ["3"] } } }, { id: "1f608", name: "smiling_imp", parts: { base: { mid: ["0", "1", "2"] }, eyes: { mid: ["3", "4"] }, mouth: { 5: [] } } }, { id: "1f63c", name: "smirk_cat", parts: { base: { mid: ["0", "2", "3", "4", "5"] }, eyes: { mid: ["11"] }, mouth: { mid: ["1", "6", "7", "8", "9", "10"] } } }, { id: "1f62d", name: "sob", parts: { base: { mid: ["0"] }, eyes: { mid: ["1", "2", "4", "5", "6", "7", "8"] }, mouth: { mid: ["3", "9"] } } }, { id: "1f929", name: "star_struck", parts: { base: { mid: ["0"] }, eyes: { mid: ["3", "4"] }, mouth: { mid: ["1", "2"] } } }, { id: "1f60e", name: "sunglasses", parts: { base: { mid: ["0"] }, eyes: { mid: ["1"] }, mouth: { mid: ["2"] } } }, { id: "1f914", name: "thinking", parts: { base: { mid: ["0"], top: ["4"] }, mouth: { mid: ["1"] }, eyes: { mid: ["2", "3", "5", "6"] } } }, { id: "1f624", name: "triumph", parts: { base: { mid: ["0"] }, mouth: { mid: ["1"], top: ["6", "7", "8", "9"] }, eyes: { mid: ["2", "3", "4", "5"] } } }, { id: "1f974", name: "woozy_face", parts: { base: { mid: ["0"] }, eyes: { mid: ["1", "2", "4", "5"] }, mouth: { mid: ["3"] } } }, { id: "1f92a", name: "zany_face", parts: { base: { mid: ["0"] }, eyes: { mid: ["1", "2", "3", "4"] }, mouth: { mid: ["5", "6", "7", "8"] } } }, { id: "1f910", name: "zipper_mouth", parts: { base: { mid: ["0"] }, eyes: { mid: ["1", "2"] }, mouth: { mid: ["3", "4", "5"] } } }], at = /_*$/, ot = String.fromCodePoint(65039), ht = String.fromCodePoint(8205), G9 = [], C9 = {}, X0 = {}, Ct = ["bot", "mid", "top"];
let M0;
async function* ft(e) {
  console.log(`Loading ${e.name}`);
  const t = new URL((/* @__PURE__ */ Object.assign({ "./emoji/alien/emoji.svg": W9, "./emoji/clown/emoji.svg": J9, "./emoji/cold_face/emoji.svg": K9, "./emoji/cowboy/emoji.svg": t2, "./emoji/disguised_face/emoji.svg": e2, "./emoji/dog_face/emoji.svg": i2, "./emoji/exploding_head/emoji.svg": s2, "./emoji/face_holding_back_tears/emoji.svg": n2, "./emoji/face_in_clouds/emoji.svg": r2, "./emoji/face_vomiting/emoji.svg": c2, "./emoji/face_with_monocle/emoji.svg": l2, "./emoji/face_with_peeking_eye/emoji.svg": a2, "./emoji/face_with_symbols_over_mouth/emoji.svg": o2, "./emoji/face_with_thermometer/emoji.svg": h2, "./emoji/full_moon/emoji.svg": C2, "./emoji/ghost/emoji.svg": f2, "./emoji/hot_face/emoji.svg": d2, "./emoji/jack_o_lantern/emoji.svg": u2, "./emoji/joy/emoji.svg": p2, "./emoji/melting_face/emoji.svg": m2, "./emoji/mizaru/emoji.svg": g2, "./emoji/money_mouth/emoji.svg": y2, "./emoji/nauseated_face/emoji.svg": w2, "./emoji/nerd/emoji.svg": _2, "./emoji/new_moon/emoji.svg": x2, "./emoji/partying_face/emoji.svg": b2, "./emoji/pleading_face/emoji.svg": v2, "./emoji/poop/emoji.svg": M2, "./emoji/robot/emoji.svg": S2, "./emoji/scream/emoji.svg": Z2, "./emoji/shushing_face/emoji.svg": L2, "./emoji/skull/emoji.svg": A2, "./emoji/sleeping/emoji.svg": j2, "./emoji/smiling_face_with_3_hearts/emoji.svg": H2, "./emoji/smiling_face_with_halo/emoji.svg": T2, "./emoji/smiling_face_with_tear/emoji.svg": k2, "./emoji/smiling_imp/emoji.svg": F2, "./emoji/smirk_cat/emoji.svg": V2, "./emoji/sob/emoji.svg": E2, "./emoji/star_struck/emoji.svg": O2, "./emoji/sunglasses/emoji.svg": D2, "./emoji/thinking/emoji.svg": N2, "./emoji/triumph/emoji.svg": B2, "./emoji/woozy_face/emoji.svg": z2, "./emoji/zany_face/emoji.svg": I2, "./emoji/zipper_mouth/emoji.svg": R2 }))[`./emoji/${e.name}/emoji.svg`], import.meta.url), s = await (await fetch(t)).text(), n = await it(s, e);
  for (n.svg = s; ; )
    yield n;
}
async function dt() {
  lt.forEach((e) => {
    const t = ft(e);
    console.log(`${e.name} loader initialized`), G9[e.name] = async () => (await t.next()).value;
    const i = e.id.split("-").map((n) => parseInt(n, 16)), s = String.fromCodePoint(...i);
    C9[s] = e.name, X0[e.name] = s;
  }), M0 = Object.values(X0), M0.sort().reverse();
}
function ut(e) {
  return C9[e];
}
function pt(e) {
  return e in C9;
}
function mt(e) {
  return X0[e];
}
function xt() {
  return M0.join("");
}
function gt(e, t, i) {
  return e && e.parts && e.parts[t] && e.parts[t][i];
}
async function yt(...e) {
  let t = "";
  const i = await Promise.all(e.map(async (r) => {
    const [c, l] = r.split(":"), a = await G9[c]();
    return { char: mt(c), partName: l, emoji: a };
  })), s = Array(e.length).fill("_");
  Ct.forEach((r) => {
    i.forEach((c, l) => {
      const { char: a, partName: o, emoji: h } = c;
      gt(h, o, r) && (t += h.parts[o][r].svg, s[l] = a);
    });
  });
  const n = s.join("").replace(at, "");
  return { svg: `<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 36 36">${t}</svg>`, list: n };
}
function wt(e) {
  const t = ["base", "eyes", "mouth", "extra"], i = [], s = [];
  let n = !1, r = !1;
  for (let c of e)
    c === ht ? (r = !0, s[s.length - 1] += c) : r || ot.indexOf(c) >= 0 ? (r = !1, s[s.length - 1] += c) : s.push(c);
  for (const c of s) {
    !pt(c) && c !== " " && c !== "_" && (n = !0);
    const l = ut(c), a = t.shift() || "extra";
    l && i.push(`${l}:${a}`);
  }
  return { choices: i, failed: n };
}
function bt() {
  const t = ct(M0, 4).join(""), { choices: i } = wt(t);
  return yt(...i);
}
await dt();
export {
  ut as charToName,
  wt as emojiStringToPartStringList,
  xt as list,
  yt as makeSvgEmoji,
  mt as nameToChar,
  bt as randomEmoji
};
